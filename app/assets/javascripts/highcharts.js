




<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>alonetone/app/assets/javascripts/highcharts.js at master Â· L1h3r/alonetone</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <meta property="fb:app_id" content="1401488693436528"/>

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="L1h3r/alonetone" name="twitter:title" /><meta content="alonetone - The kick ass, open source, non-commercial home for musicians and their music" name="twitter:description" /><meta content="https://2.gravatar.com/avatar/6abadcd4a758e3fc6a9fee0ec517bf4b?d=https%3A%2F%2Fidenticons.github.com%2F7abe6094b1fa5a846ce587e25c91df0e.png&amp;r=x&amp;s=400" name="twitter:image:src" />
<meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://2.gravatar.com/avatar/6abadcd4a758e3fc6a9fee0ec517bf4b?d=https%3A%2F%2Fidenticons.github.com%2F7abe6094b1fa5a846ce587e25c91df0e.png&amp;r=x&amp;s=400" property="og:image" /><meta content="L1h3r/alonetone" property="og:title" /><meta content="https://github.com/L1h3r/alonetone" property="og:url" /><meta content="alonetone - The kick ass, open source, non-commercial home for musicians and their music" property="og:description" />

    <meta name="hostname" content="github-fe136-cp1-prd.iad.github.net">
    <meta name="ruby" content="ruby 2.1.0p0-github-tcmalloc (87c9373a41) [x86_64-linux]">
    <link rel="assets" href="https://github.global.ssl.fastly.net/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035/">
    <link rel="xhr-socket" href="/_sockets" />


    <meta name="msapplication-TileImage" content="/windows-tile.png" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta name="selected-link" value="repo_source" data-pjax-transient />
    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="46243F1A:3A71:18198A:53054906" name="octolytics-dimension-request_id" /><meta content="5410284" name="octolytics-actor-id" /><meta content="L1h3r" name="octolytics-actor-login" /><meta content="d780c94b3ba225cf639063b9b89b55860665035dfd0da01d24f19e8a8d41128c" name="octolytics-actor-hash" />
    

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="Op/9xpFVCCXVyI4EsKIiqHh5N4qlu5oUU5u4hQrWPf4=" name="csrf-token" />

    <link href="https://github.global.ssl.fastly.net/assets/github-92740315f896acc5f11ea2462583cb3fa98aae00.css" media="all" rel="stylesheet" type="text/css" />
    <link href="https://github.global.ssl.fastly.net/assets/github2-d5e566a4c8c1db19a07404c1feee8e42101f0b08.css" media="all" rel="stylesheet" type="text/css" />
    
    


      <script src="https://github.global.ssl.fastly.net/assets/frameworks-c4d69f16e67f14e99dd8830ae5b76bb64b2913e5.js" type="text/javascript"></script>
      <script async="async" src="https://github.global.ssl.fastly.net/assets/github-09555f7c70b2b0cca8a3da8dc9d3d66217b81bf8.js" type="text/javascript"></script>
      
      <meta http-equiv="x-pjax-version" content="a20e60bfb8c84117689f32dea5e5a162">

        <link data-pjax-transient rel='permalink' href='/L1h3r/alonetone/blob/9a408f77f7f839bb2010d8e39eb3b2e5abdfd3d4/app/assets/javascripts/highcharts.js'>

  <meta name="description" content="alonetone - The kick ass, open source, non-commercial home for musicians and their music" />

  <meta content="5410284" name="octolytics-dimension-user_id" /><meta content="L1h3r" name="octolytics-dimension-user_login" /><meta content="16919663" name="octolytics-dimension-repository_id" /><meta content="L1h3r/alonetone" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="true" name="octolytics-dimension-repository_is_fork" /><meta content="3456" name="octolytics-dimension-repository_parent_id" /><meta content="sudara/alonetone" name="octolytics-dimension-repository_parent_nwo" /><meta content="3456" name="octolytics-dimension-repository_network_root_id" /><meta content="sudara/alonetone" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/L1h3r/alonetone/commits/master.atom" rel="alternate" title="Recent Commits to alonetone:master" type="application/atom+xml" />

  </head>


  <body class="logged_in  env-production windows vis-public fork page-blob tipsy-tooltips">
    <div class="wrapper">
      
      
      
      


      <div class="header header-logged-in true">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/">
  <span class="mega-octicon octicon-mark-github"></span>
</a>

    
    <a href="/notifications" aria-label="You have no unread notifications" class="notification-indicator tooltipped downwards" data-gotokey="n">
        <span class="mail-status all-read"></span>
</a>

      <div class="command-bar js-command-bar  in-repository">
          <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">

<input type="text" data-hotkey="/ s" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" autocapitalize="off"
    
    data-username="L1h3r"
      data-repo="L1h3r/alonetone"
      data-branch="master"
      data-sha="2c6545db48b948c74cf35e873f5d6766765932a4"
  >

    <input type="hidden" name="nwo" value="L1h3r/alonetone" />

    <div class="select-menu js-menu-container js-select-menu search-context-select-menu">
      <span class="minibutton select-menu-button js-menu-target">
        <span class="js-select-button">This repository</span>
      </span>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container">
        <div class="select-menu-modal">

          <div class="select-menu-item js-navigation-item js-this-repository-navigation-item selected">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" class="js-search-this-repository" name="search_target" value="repository" checked="checked" />
            <div class="select-menu-item-text js-select-button-text">This repository</div>
          </div> <!-- /.select-menu-item -->

          <div class="select-menu-item js-navigation-item js-all-repositories-navigation-item">
            <span class="select-menu-item-icon octicon octicon-check"></span>
            <input type="radio" name="search_target" value="global" />
            <div class="select-menu-item-text js-select-button-text">All repositories</div>
          </div> <!-- /.select-menu-item -->

        </div>
      </div>
    </div>

  <span class="octicon help tooltipped downwards" aria-label="Show command bar help">
    <span class="octicon octicon-question"></span>
  </span>


  <input type="hidden" name="ref" value="cmdform">

</form>
        <ul class="top-nav">
          <li class="explore"><a href="/explore">Explore</a></li>
            <li><a href="https://gist.github.com">Gist</a></li>
            <li><a href="/blog">Blog</a></li>
          <li><a href="https://help.github.com">Help</a></li>
        </ul>
      </div>

    


  <ul id="user-links">
    <li>
      <a href="/L1h3r" class="name">
        <img alt="Devin Turner" class=" js-avatar" data-user="5410284" height="20" src="https://1.gravatar.com/avatar/6abadcd4a758e3fc6a9fee0ec517bf4b?d=https%3A%2F%2Fidenticons.github.com%2F7abe6094b1fa5a846ce587e25c91df0e.png&amp;r=x&amp;s=140" width="20" /> L1h3r
      </a>
    </li>

    <li class="new-menu dropdown-toggle js-menu-container">
      <a href="#" class="js-menu-target tooltipped downwards" aria-label="Create new...">
        <span class="octicon octicon-plus"></span>
        <span class="dropdown-arrow"></span>
      </a>

      <div class="js-menu-content">
      </div>
    </li>

    <li>
      <a href="/settings/profile" id="account_settings"
        class="tooltipped downwards"
        aria-label="Account settings ">
        <span class="octicon octicon-tools"></span>
      </a>
    </li>
    <li>
      <a class="tooltipped downwards" href="/logout" data-method="post" id="logout" aria-label="Sign out">
        <span class="octicon octicon-log-out"></span>
      </a>
    </li>

  </ul>

<div class="js-new-dropdown-contents hidden">
  

<ul class="dropdown-menu">
  <li>
    <a href="/new"><span class="octicon octicon-repo-create"></span> New repository</a>
  </li>
  <li>
    <a href="/organizations/new"><span class="octicon octicon-organization"></span> New organization</a>
  </li>


    <li class="section-title">
      <span title="L1h3r/alonetone">This repository</span>
    </li>
      <li>
        <a href="/L1h3r/alonetone/issues/new"><span class="octicon octicon-issue-opened"></span> New issue</a>
      </li>
      <li>
        <a href="/L1h3r/alonetone/settings/collaboration"><span class="octicon octicon-person-add"></span> New collaborator</a>
      </li>
</ul>

</div>


    
  </div>
</div>

      

        




          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        

<ul class="pagehead-actions">

    <li class="subscription">
      <form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="Op/9xpFVCCXVyI4EsKIiqHh5N4qlu5oUU5u4hQrWPf4=" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="16919663" />

    <div class="select-menu js-menu-container js-select-menu">
      <a class="social-count js-social-count" href="/L1h3r/alonetone/watchers">
        6
      </a>
      <span class="minibutton select-menu-button with-count js-menu-target" role="button" tabindex="0">
        <span class="js-select-button">
          <span class="octicon octicon-eye-unwatch"></span>
          Unwatch
        </span>
      </span>

      <div class="select-menu-modal-holder">
        <div class="select-menu-modal subscription-menu-modal js-menu-content">
          <div class="select-menu-header">
            <span class="select-menu-title">Notification status</span>
            <span class="octicon octicon-remove-close js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-list js-navigation-container" role="menu">

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_included" name="do" type="radio" value="included" />
                <h4>Not watching</h4>
                <span class="description">You only receive notifications for conversations in which you participate or are @mentioned.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye-watch"></span>
                  Watch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input checked="checked" id="do_subscribed" name="do" type="radio" value="subscribed" />
                <h4>Watching</h4>
                <span class="description">You receive notifications for all conversations in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-eye-unwatch"></span>
                  Unwatch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <div class="select-menu-item-text">
                <input id="do_ignore" name="do" type="radio" value="ignore" />
                <h4>Ignoring</h4>
                <span class="description">You do not receive any notifications for conversations in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="octicon octicon-mute"></span>
                  Stop ignoring
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

</form>
    </li>

  <li>
  

  <div class="js-toggler-container js-social-container starring-container ">
    <a href="/L1h3r/alonetone/unstar"
      class="minibutton with-count js-toggler-target star-button starred upwards"
      title="Unstar this repository" data-remote="true" data-method="post" rel="nofollow">
      <span class="octicon octicon-star-delete"></span><span class="text">Unstar</span>
    </a>

    <a href="/L1h3r/alonetone/star"
      class="minibutton with-count js-toggler-target star-button unstarred upwards"
      title="Star this repository" data-remote="true" data-method="post" rel="nofollow">
      <span class="octicon octicon-star"></span><span class="text">Star</span>
    </a>

      <a class="social-count js-social-count" href="/L1h3r/alonetone/stargazers">
        1
      </a>
  </div>

  </li>


        <li>
          <a href="/L1h3r/alonetone/fork" class="minibutton with-count js-toggler-target fork-button lighter upwards" title="Fork this repo" rel="facebox nofollow">
            <span class="octicon octicon-git-branch-create"></span><span class="text">Fork</span>
          </a>
          <a href="/L1h3r/alonetone/network" class="social-count">42</a>
        </li>


</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="repo-label"><span>public</span></span>
          <span class="mega-octicon octicon-repo-forked"></span>
          <span class="author">
            <a href="/L1h3r" class="url fn" itemprop="url" rel="author"><span itemprop="title">L1h3r</span></a>
          </span>
          <span class="repohead-name-divider">/</span>
          <strong><a href="/L1h3r/alonetone" class="js-current-repository js-repo-home-link">alonetone</a></strong>

          <span class="page-context-loader">
            <img alt="Octocat-spinner-32" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
          </span>

            <span class="fork-flag">
              <span class="text">forked from <a href="/sudara/alonetone">sudara/alonetone</a></span>
            </span>
        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      

      <div class="repository-with-sidebar repo-container new-discussion-timeline js-new-discussion-timeline  ">
        <div class="repository-sidebar clearfix">
            

<div class="sunken-menu vertical-right repo-nav js-repo-nav js-repository-container-pjax js-octicon-loaders">
  <div class="sunken-menu-contents">
    <ul class="sunken-menu-group">
      <li class="tooltipped leftwards" aria-label="Code">
        <a href="/L1h3r/alonetone" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-gotokey="c" data-pjax="true" data-selected-links="repo_source repo_downloads repo_commits repo_tags repo_branches /L1h3r/alonetone">
          <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

        <li class="tooltipped leftwards" aria-label="Issues">
          <a href="/L1h3r/alonetone/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-gotokey="i" data-selected-links="repo_issues /L1h3r/alonetone/issues">
            <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
            <span class='counter'>1</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>        </li>

      <li class="tooltipped leftwards" aria-label="Pull Requests">
        <a href="/L1h3r/alonetone/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-gotokey="p" data-selected-links="repo_pulls /L1h3r/alonetone/pulls">
            <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
            <span class='counter'>1</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>


    </ul>
    <div class="sunken-menu-separator"></div>
    <ul class="sunken-menu-group">

      <li class="tooltipped leftwards" aria-label="Pulse">
        <a href="/L1h3r/alonetone/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="pulse /L1h3r/alonetone/pulse">
          <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped leftwards" aria-label="Graphs">
        <a href="/L1h3r/alonetone/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-pjax="true" data-selected-links="repo_graphs repo_contributors /L1h3r/alonetone/graphs">
          <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>

      <li class="tooltipped leftwards" aria-label="Network">
        <a href="/L1h3r/alonetone/network" aria-label="Network" class="js-selected-navigation-item sunken-menu-item js-disable-pjax" data-selected-links="repo_network /L1h3r/alonetone/network">
          <span class="octicon octicon-git-branch"></span> <span class="full-word">Network</span>
          <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
</a>      </li>
    </ul>


      <div class="sunken-menu-separator"></div>
      <ul class="sunken-menu-group">
        <li class="tooltipped leftwards" aria-label="Settings">
          <a href="/L1h3r/alonetone/settings"
            class="sunken-menu-item" data-pjax aria-label="Settings">
            <span class="octicon octicon-tools"></span> <span class="full-word">Settings</span>
            <img alt="Octocat-spinner-32" class="mini-loader" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32.gif" width="16" />
          </a>
        </li>
      </ul>
  </div>
</div>

              <div class="only-with-full-nav">
                

  

<div class="clone-url "
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=push">
  <h3><strong>HTTPS</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/L1h3r/alonetone.git" readonly="readonly">

    <span class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/L1h3r/alonetone.git" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>

  

<div class="clone-url open"
  data-protocol-type="ssh"
  data-url="/users/set_protocol?protocol_selector=ssh&amp;protocol_type=push">
  <h3><strong>SSH</strong> clone URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="git@github.com:L1h3r/alonetone.git" readonly="readonly">

    <span class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="git@github.com:L1h3r/alonetone.git" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>

  

<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=push">
  <h3><strong>Subversion</strong> checkout URL</h3>
  <div class="clone-url-box">
    <input type="text" class="clone js-url-field"
           value="https://github.com/L1h3r/alonetone" readonly="readonly">

    <span class="js-zeroclipboard url-box-clippy minibutton zeroclipboard-button" data-clipboard-text="https://github.com/L1h3r/alonetone" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>


<p class="clone-options">You can clone with
      <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>,
      <a href="#" class="js-clone-selector" data-protocol="ssh">SSH</a>,
      or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <span class="octicon help tooltipped upwards" aria-label="Get help on which URL is right for you.">
    <a href="https://help.github.com/articles/which-remote-url-should-i-use">
    <span class="octicon octicon-question"></span>
    </a>
  </span>
</p>


  <a href="github-windows://openRepo/https://github.com/L1h3r/alonetone" class="minibutton sidebar-button">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>

                <a href="/L1h3r/alonetone/archive/master.zip"
                   class="minibutton sidebar-button"
                   title="Download this repository as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:daacd96de8a01fec5ac7f58d1ab3dcc2 -->

<p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

<a href="/L1h3r/alonetone/find/master" data-pjax data-hotkey="t" class="js-show-file-finder" style="display:none">Show File Finder</a>

<div class="file-navigation">
  

<div class="select-menu js-menu-container js-select-menu" >
  <span class="minibutton select-menu-button js-menu-target" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    role="button" aria-label="Switch branches or tags" tabindex="0">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax>

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-remove-close js-menu-close"></span>
      </div> <!-- /.select-menu-header -->

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Find or create a branchâ¦" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Find or create a branchâ¦">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div><!-- /.select-menu-tabs -->
      </div><!-- /.select-menu-filters -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/L1h3r/alonetone/blob/ADD_random_button/app/assets/javascripts/highcharts.js"
                 data-name="ADD_random_button"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="ADD_random_button">ADD_random_button</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/L1h3r/alonetone/blob/add_searchbar_to_playlist_page/app/assets/javascripts/highcharts.js"
                 data-name="add_searchbar_to_playlist_page"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="add_searchbar_to_playlist_page">add_searchbar_to_playlist_page</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/L1h3r/alonetone/blob/all_playlists/app/assets/javascripts/highcharts.js"
                 data-name="all_playlists"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="all_playlists">all_playlists</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/L1h3r/alonetone/blob/css3/app/assets/javascripts/highcharts.js"
                 data-name="css3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="css3">css3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/L1h3r/alonetone/blob/dedicated_listeners_page_number_fix/app/assets/javascripts/highcharts.js"
                 data-name="dedicated_listeners_page_number_fix"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="dedicated_listeners_page_number_fix">dedicated_listeners_page_number_fix</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item selected">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/L1h3r/alonetone/blob/master/app/assets/javascripts/highcharts.js"
                 data-name="master"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="master">master</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/L1h3r/alonetone/blob/mini_facelift/app/assets/javascripts/highcharts.js"
                 data-name="mini_facelift"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="mini_facelift">mini_facelift</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/L1h3r/alonetone/blob/playlists_home/app/assets/javascripts/highcharts.js"
                 data-name="playlists_home"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="playlists_home">playlists_home</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/L1h3r/alonetone/blob/rails2/app/assets/javascripts/highcharts.js"
                 data-name="rails2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="rails2">rails2</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/L1h3r/alonetone/blob/remove_year_from_new_playlist_form/app/assets/javascripts/highcharts.js"
                 data-name="remove_year_from_new_playlist_form"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="remove_year_from_new_playlist_form">remove_year_from_new_playlist_form</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/L1h3r/alonetone/blob/turbolinks/app/assets/javascripts/highcharts.js"
                 data-name="turbolinks"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="turbolinks">turbolinks</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/L1h3r/alonetone/blob/version1/app/assets/javascripts/highcharts.js"
                 data-name="version1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="version1">version1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/L1h3r/alonetone/blob/version2/app/assets/javascripts/highcharts.js"
                 data-name="version2"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="version2">version2</a>
            </div> <!-- /.select-menu-item -->
        </div>

          <form accept-charset="UTF-8" action="/L1h3r/alonetone/branches" class="js-create-branch select-menu-item select-menu-new-item-form js-navigation-item js-new-item-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="Op/9xpFVCCXVyI4EsKIiqHh5N4qlu5oUU5u4hQrWPf4=" /></div>
            <span class="octicon octicon-git-branch-create select-menu-item-icon"></span>
            <div class="select-menu-item-text">
              <h4>Create branch: <span class="js-new-item-name"></span></h4>
              <span class="description">from âmasterâ</span>
            </div>
            <input type="hidden" name="name" id="name" class="js-new-item-value">
            <input type="hidden" name="branch" id="branch" value="master" />
            <input type="hidden" name="path" id="path" value="app/assets/javascripts/highcharts.js" />
          </form> <!-- /.select-menu-item -->

      </div> <!-- /.select-menu-list -->

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/L1h3r/alonetone/tree/version1/app/assets/javascripts/highcharts.js"
                 data-name="version1"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="version1">version1</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/L1h3r/alonetone/tree/rail3/app/assets/javascripts/highcharts.js"
                 data-name="rail3"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="rail3">rail3</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/L1h3r/alonetone/tree/joyent/app/assets/javascripts/highcharts.js"
                 data-name="joyent"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="joyent">joyent</a>
            </div> <!-- /.select-menu-item -->
            <div class="select-menu-item js-navigation-item ">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <a href="/L1h3r/alonetone/tree/2.0stable/app/assets/javascripts/highcharts.js"
                 data-name="2.0stable"
                 data-skip-pjax="true"
                 rel="nofollow"
                 class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target"
                 title="2.0stable">2.0stable</a>
            </div> <!-- /.select-menu-item -->
        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div> <!-- /.select-menu-list -->

    </div> <!-- /.select-menu-modal -->
  </div> <!-- /.select-menu-modal-holder -->
</div> <!-- /.select-menu -->

  <div class="breadcrumb">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/L1h3r/alonetone" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">alonetone</span></a></span></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/L1h3r/alonetone/tree/master/app" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">app</span></a></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/L1h3r/alonetone/tree/master/app/assets" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">assets</span></a></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/L1h3r/alonetone/tree/master/app/assets/javascripts" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">javascripts</span></a></span><span class="separator"> / </span><strong class="final-path">highcharts.js</strong> <span class="js-zeroclipboard minibutton zeroclipboard-button" data-clipboard-text="app/assets/javascripts/highcharts.js" data-copied-hint="copied!" title="copy to clipboard"><span class="octicon octicon-clippy"></span></span>
  </div>
</div>


  <div class="commit commit-loader file-history-tease js-deferred-content" data-url="/L1h3r/alonetone/contributors/master/app/assets/javascripts/highcharts.js">
    Fetching contributorsâ¦

    <div class="participation">
      <p class="loader-loading"><img alt="Octocat-spinner-32-eaf2f5" height="16" src="https://github.global.ssl.fastly.net/images/spinners/octocat-spinner-32-EAF2F5.gif" width="16" /></p>
      <p class="loader-error">Cannot retrieve contributors at this time</p>
    </div>
  </div>

<div class="file-box">
  <div class="file">
    <div class="meta clearfix">
      <div class="info file-name">
        <span class="icon"><b class="octicon octicon-file-text"></b></span>
        <span class="mode" title="File Mode">file</span>
        <span class="meta-divider"></span>
          <span>250 lines (248 sloc)</span>
          <span class="meta-divider"></span>
        <span>124.134 kb</span>
      </div>
      <div class="actions">
        <div class="button-group">
            <a class="minibutton tooltipped leftwards"
               href="github-windows://openRepo/https://github.com/L1h3r/alonetone?branch=master&amp;filepath=app%2Fassets%2Fjavascripts%2Fhighcharts.js" aria-label="Open this file in GitHub for Windows">
                <span class="octicon octicon-device-desktop"></span> Open
            </a>
                <a class="minibutton js-update-url-with-hash"
                   href="/L1h3r/alonetone/edit/master/app/assets/javascripts/highcharts.js"
                   data-method="post" rel="nofollow" data-hotkey="e">Edit</a>
          <a href="/L1h3r/alonetone/raw/master/app/assets/javascripts/highcharts.js" class="button minibutton " id="raw-url">Raw</a>
            <a href="/L1h3r/alonetone/blame/master/app/assets/javascripts/highcharts.js" class="button minibutton js-update-url-with-hash">Blame</a>
          <a href="/L1h3r/alonetone/commits/master/app/assets/javascripts/highcharts.js" class="button minibutton " rel="nofollow">History</a>
        </div><!-- /.button-group -->
          <a class="minibutton danger empty-icon tooltipped downwards"
             href="/L1h3r/alonetone/delete/master/app/assets/javascripts/highcharts.js"
             aria-label=""
             data-method="post" data-test-id="delete-blob-file" rel="nofollow">
          Delete
        </a>
      </div><!-- /.actions -->
    </div>
        <div class="blob-wrapper data type-javascript js-blob-data">
        <table class="file-code file-diff tab-size-8">
          <tr class="file-code-line">
            <td class="blob-line-nums">
              <span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
<span id="L5" rel="#L5">5</span>
<span id="L6" rel="#L6">6</span>
<span id="L7" rel="#L7">7</span>
<span id="L8" rel="#L8">8</span>
<span id="L9" rel="#L9">9</span>
<span id="L10" rel="#L10">10</span>
<span id="L11" rel="#L11">11</span>
<span id="L12" rel="#L12">12</span>
<span id="L13" rel="#L13">13</span>
<span id="L14" rel="#L14">14</span>
<span id="L15" rel="#L15">15</span>
<span id="L16" rel="#L16">16</span>
<span id="L17" rel="#L17">17</span>
<span id="L18" rel="#L18">18</span>
<span id="L19" rel="#L19">19</span>
<span id="L20" rel="#L20">20</span>
<span id="L21" rel="#L21">21</span>
<span id="L22" rel="#L22">22</span>
<span id="L23" rel="#L23">23</span>
<span id="L24" rel="#L24">24</span>
<span id="L25" rel="#L25">25</span>
<span id="L26" rel="#L26">26</span>
<span id="L27" rel="#L27">27</span>
<span id="L28" rel="#L28">28</span>
<span id="L29" rel="#L29">29</span>
<span id="L30" rel="#L30">30</span>
<span id="L31" rel="#L31">31</span>
<span id="L32" rel="#L32">32</span>
<span id="L33" rel="#L33">33</span>
<span id="L34" rel="#L34">34</span>
<span id="L35" rel="#L35">35</span>
<span id="L36" rel="#L36">36</span>
<span id="L37" rel="#L37">37</span>
<span id="L38" rel="#L38">38</span>
<span id="L39" rel="#L39">39</span>
<span id="L40" rel="#L40">40</span>
<span id="L41" rel="#L41">41</span>
<span id="L42" rel="#L42">42</span>
<span id="L43" rel="#L43">43</span>
<span id="L44" rel="#L44">44</span>
<span id="L45" rel="#L45">45</span>
<span id="L46" rel="#L46">46</span>
<span id="L47" rel="#L47">47</span>
<span id="L48" rel="#L48">48</span>
<span id="L49" rel="#L49">49</span>
<span id="L50" rel="#L50">50</span>
<span id="L51" rel="#L51">51</span>
<span id="L52" rel="#L52">52</span>
<span id="L53" rel="#L53">53</span>
<span id="L54" rel="#L54">54</span>
<span id="L55" rel="#L55">55</span>
<span id="L56" rel="#L56">56</span>
<span id="L57" rel="#L57">57</span>
<span id="L58" rel="#L58">58</span>
<span id="L59" rel="#L59">59</span>
<span id="L60" rel="#L60">60</span>
<span id="L61" rel="#L61">61</span>
<span id="L62" rel="#L62">62</span>
<span id="L63" rel="#L63">63</span>
<span id="L64" rel="#L64">64</span>
<span id="L65" rel="#L65">65</span>
<span id="L66" rel="#L66">66</span>
<span id="L67" rel="#L67">67</span>
<span id="L68" rel="#L68">68</span>
<span id="L69" rel="#L69">69</span>
<span id="L70" rel="#L70">70</span>
<span id="L71" rel="#L71">71</span>
<span id="L72" rel="#L72">72</span>
<span id="L73" rel="#L73">73</span>
<span id="L74" rel="#L74">74</span>
<span id="L75" rel="#L75">75</span>
<span id="L76" rel="#L76">76</span>
<span id="L77" rel="#L77">77</span>
<span id="L78" rel="#L78">78</span>
<span id="L79" rel="#L79">79</span>
<span id="L80" rel="#L80">80</span>
<span id="L81" rel="#L81">81</span>
<span id="L82" rel="#L82">82</span>
<span id="L83" rel="#L83">83</span>
<span id="L84" rel="#L84">84</span>
<span id="L85" rel="#L85">85</span>
<span id="L86" rel="#L86">86</span>
<span id="L87" rel="#L87">87</span>
<span id="L88" rel="#L88">88</span>
<span id="L89" rel="#L89">89</span>
<span id="L90" rel="#L90">90</span>
<span id="L91" rel="#L91">91</span>
<span id="L92" rel="#L92">92</span>
<span id="L93" rel="#L93">93</span>
<span id="L94" rel="#L94">94</span>
<span id="L95" rel="#L95">95</span>
<span id="L96" rel="#L96">96</span>
<span id="L97" rel="#L97">97</span>
<span id="L98" rel="#L98">98</span>
<span id="L99" rel="#L99">99</span>
<span id="L100" rel="#L100">100</span>
<span id="L101" rel="#L101">101</span>
<span id="L102" rel="#L102">102</span>
<span id="L103" rel="#L103">103</span>
<span id="L104" rel="#L104">104</span>
<span id="L105" rel="#L105">105</span>
<span id="L106" rel="#L106">106</span>
<span id="L107" rel="#L107">107</span>
<span id="L108" rel="#L108">108</span>
<span id="L109" rel="#L109">109</span>
<span id="L110" rel="#L110">110</span>
<span id="L111" rel="#L111">111</span>
<span id="L112" rel="#L112">112</span>
<span id="L113" rel="#L113">113</span>
<span id="L114" rel="#L114">114</span>
<span id="L115" rel="#L115">115</span>
<span id="L116" rel="#L116">116</span>
<span id="L117" rel="#L117">117</span>
<span id="L118" rel="#L118">118</span>
<span id="L119" rel="#L119">119</span>
<span id="L120" rel="#L120">120</span>
<span id="L121" rel="#L121">121</span>
<span id="L122" rel="#L122">122</span>
<span id="L123" rel="#L123">123</span>
<span id="L124" rel="#L124">124</span>
<span id="L125" rel="#L125">125</span>
<span id="L126" rel="#L126">126</span>
<span id="L127" rel="#L127">127</span>
<span id="L128" rel="#L128">128</span>
<span id="L129" rel="#L129">129</span>
<span id="L130" rel="#L130">130</span>
<span id="L131" rel="#L131">131</span>
<span id="L132" rel="#L132">132</span>
<span id="L133" rel="#L133">133</span>
<span id="L134" rel="#L134">134</span>
<span id="L135" rel="#L135">135</span>
<span id="L136" rel="#L136">136</span>
<span id="L137" rel="#L137">137</span>
<span id="L138" rel="#L138">138</span>
<span id="L139" rel="#L139">139</span>
<span id="L140" rel="#L140">140</span>
<span id="L141" rel="#L141">141</span>
<span id="L142" rel="#L142">142</span>
<span id="L143" rel="#L143">143</span>
<span id="L144" rel="#L144">144</span>
<span id="L145" rel="#L145">145</span>
<span id="L146" rel="#L146">146</span>
<span id="L147" rel="#L147">147</span>
<span id="L148" rel="#L148">148</span>
<span id="L149" rel="#L149">149</span>
<span id="L150" rel="#L150">150</span>
<span id="L151" rel="#L151">151</span>
<span id="L152" rel="#L152">152</span>
<span id="L153" rel="#L153">153</span>
<span id="L154" rel="#L154">154</span>
<span id="L155" rel="#L155">155</span>
<span id="L156" rel="#L156">156</span>
<span id="L157" rel="#L157">157</span>
<span id="L158" rel="#L158">158</span>
<span id="L159" rel="#L159">159</span>
<span id="L160" rel="#L160">160</span>
<span id="L161" rel="#L161">161</span>
<span id="L162" rel="#L162">162</span>
<span id="L163" rel="#L163">163</span>
<span id="L164" rel="#L164">164</span>
<span id="L165" rel="#L165">165</span>
<span id="L166" rel="#L166">166</span>
<span id="L167" rel="#L167">167</span>
<span id="L168" rel="#L168">168</span>
<span id="L169" rel="#L169">169</span>
<span id="L170" rel="#L170">170</span>
<span id="L171" rel="#L171">171</span>
<span id="L172" rel="#L172">172</span>
<span id="L173" rel="#L173">173</span>
<span id="L174" rel="#L174">174</span>
<span id="L175" rel="#L175">175</span>
<span id="L176" rel="#L176">176</span>
<span id="L177" rel="#L177">177</span>
<span id="L178" rel="#L178">178</span>
<span id="L179" rel="#L179">179</span>
<span id="L180" rel="#L180">180</span>
<span id="L181" rel="#L181">181</span>
<span id="L182" rel="#L182">182</span>
<span id="L183" rel="#L183">183</span>
<span id="L184" rel="#L184">184</span>
<span id="L185" rel="#L185">185</span>
<span id="L186" rel="#L186">186</span>
<span id="L187" rel="#L187">187</span>
<span id="L188" rel="#L188">188</span>
<span id="L189" rel="#L189">189</span>
<span id="L190" rel="#L190">190</span>
<span id="L191" rel="#L191">191</span>
<span id="L192" rel="#L192">192</span>
<span id="L193" rel="#L193">193</span>
<span id="L194" rel="#L194">194</span>
<span id="L195" rel="#L195">195</span>
<span id="L196" rel="#L196">196</span>
<span id="L197" rel="#L197">197</span>
<span id="L198" rel="#L198">198</span>
<span id="L199" rel="#L199">199</span>
<span id="L200" rel="#L200">200</span>
<span id="L201" rel="#L201">201</span>
<span id="L202" rel="#L202">202</span>
<span id="L203" rel="#L203">203</span>
<span id="L204" rel="#L204">204</span>
<span id="L205" rel="#L205">205</span>
<span id="L206" rel="#L206">206</span>
<span id="L207" rel="#L207">207</span>
<span id="L208" rel="#L208">208</span>
<span id="L209" rel="#L209">209</span>
<span id="L210" rel="#L210">210</span>
<span id="L211" rel="#L211">211</span>
<span id="L212" rel="#L212">212</span>
<span id="L213" rel="#L213">213</span>
<span id="L214" rel="#L214">214</span>
<span id="L215" rel="#L215">215</span>
<span id="L216" rel="#L216">216</span>
<span id="L217" rel="#L217">217</span>
<span id="L218" rel="#L218">218</span>
<span id="L219" rel="#L219">219</span>
<span id="L220" rel="#L220">220</span>
<span id="L221" rel="#L221">221</span>
<span id="L222" rel="#L222">222</span>
<span id="L223" rel="#L223">223</span>
<span id="L224" rel="#L224">224</span>
<span id="L225" rel="#L225">225</span>
<span id="L226" rel="#L226">226</span>
<span id="L227" rel="#L227">227</span>
<span id="L228" rel="#L228">228</span>
<span id="L229" rel="#L229">229</span>
<span id="L230" rel="#L230">230</span>
<span id="L231" rel="#L231">231</span>
<span id="L232" rel="#L232">232</span>
<span id="L233" rel="#L233">233</span>
<span id="L234" rel="#L234">234</span>
<span id="L235" rel="#L235">235</span>
<span id="L236" rel="#L236">236</span>
<span id="L237" rel="#L237">237</span>
<span id="L238" rel="#L238">238</span>
<span id="L239" rel="#L239">239</span>
<span id="L240" rel="#L240">240</span>
<span id="L241" rel="#L241">241</span>
<span id="L242" rel="#L242">242</span>
<span id="L243" rel="#L243">243</span>
<span id="L244" rel="#L244">244</span>
<span id="L245" rel="#L245">245</span>
<span id="L246" rel="#L246">246</span>
<span id="L247" rel="#L247">247</span>
<span id="L248" rel="#L248">248</span>
<span id="L249" rel="#L249">249</span>
<span id="L250" rel="#L250">250</span>

            </td>
            <td class="blob-line-code"><div class="code-body highlight"><pre><div class='line' id='LC1'><span class="cm">/*</span></div><div class='line' id='LC2'><span class="cm"> Highcharts JS v2.3.5 (2012-12-19)</span></div><div class='line' id='LC3'><br/></div><div class='line' id='LC4'><span class="cm"> (c) 2009-2012 Torstein HÃÂ¸nsi</span></div><div class='line' id='LC5'><br/></div><div class='line' id='LC6'><span class="cm"> License: www.highcharts.com/license</span></div><div class='line' id='LC7'><span class="cm">*/</span></div><div class='line' id='LC8'><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="nx">a</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="p">{});</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">ia</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">arguments</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="p">{};</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">++</span><span class="p">]]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="kd">function</span> <span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nb">parseInt</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">||</span><span class="mi">10</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">ja</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">a</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Y</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">a</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Ia</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nb">Object</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">toString</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">===</span><span class="s2">&quot;[object Array]&quot;</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Da</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">a</span><span class="o">===</span><span class="s2">&quot;number&quot;</span><span class="p">}</span><span class="kd">function</span> <span class="nx">ka</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">K</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">/</span><span class="nx">K</span><span class="p">.</span><span class="nx">LN10</span><span class="p">}</span><span class="kd">function</span> <span class="nx">aa</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">K</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">ta</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">--</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">===</span></div><div class='line' id='LC9'><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">break</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="o">!==</span><span class="nx">A</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">!==</span><span class="kc">null</span><span class="p">}</span><span class="kd">function</span> <span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">ja</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="nx">r</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getAttribute</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getAttribute</span><span class="p">(</span><span class="nx">b</span><span class="p">));</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">Y</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]);</span><span class="k">return</span> <span class="nx">e</span><span class="p">}</span><span class="kd">function</span> <span class="nx">la</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">Ia</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="p">[</span><span class="nx">a</span><span class="p">]}</span><span class="kd">function</span> <span class="nx">n</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">arguments</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="k">typeof</span> <span class="nx">c</span><span class="o">!==</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">!==</span><span class="kc">null</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">I</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">Ea</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">opacity</span><span class="o">!==</span><span class="nx">A</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">filter</span><span class="o">=</span><span class="s2">&quot;alpha(opacity=&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">opacity</span><span class="o">*</span><span class="mi">100</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">;</span><span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">T</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span></div><div class='line' id='LC10'><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">I</span><span class="p">(</span><span class="nx">a</span><span class="p">,{</span><span class="nx">padding</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">border</span><span class="o">:</span><span class="nx">Q</span><span class="p">,</span><span class="nx">margin</span><span class="o">:</span><span class="mi">0</span><span class="p">});</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">I</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">ba</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(){};</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="k">new</span> <span class="nx">a</span><span class="p">;</span><span class="nx">x</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Ja</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">lang</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">b</span><span class="o">===-</span><span class="mi">1</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="o">||</span><span class="mi">0</span><span class="p">).</span><span class="nx">toString</span><span class="p">(),</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">)[</span><span class="mi">1</span><span class="p">].</span><span class="nx">length</span><span class="o">:</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="o">=</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="o">?</span><span class="mi">2</span><span class="o">:</span><span class="nx">b</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">decimalPoint</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">thousandsSep</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">f</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">?</span><span class="s2">&quot;-&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nb">String</span><span class="p">(</span><span class="nx">z</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="o">+</span><span class="nx">f</span><span class="o">||</span><span class="mi">0</span><span class="p">).</span><span class="nx">toFixed</span><span class="p">(</span><span class="nx">b</span><span class="p">))),</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">3</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">%</span><span class="mi">3</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="nx">e</span><span class="o">+</span><span class="p">(</span><span class="nx">g</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="p">)</span><span class="o">+</span><span class="nx">d</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="nx">g</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/(\d{3})(?=\d)/g</span><span class="p">,</span></div><div class='line' id='LC11'><span class="s2">&quot;$1&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="o">?</span><span class="nx">c</span><span class="o">+</span><span class="nx">M</span><span class="p">(</span><span class="nx">f</span><span class="o">-</span><span class="nx">a</span><span class="p">).</span><span class="nx">toFixed</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">slice</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">ua</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nb">Array</span><span class="p">((</span><span class="nx">b</span><span class="o">||</span><span class="mi">2</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="o">-</span><span class="nb">String</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">length</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">hb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="o">/</span><span class="nx">c</span><span class="p">;</span><span class="nx">b</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mf">2.5</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">10</span><span class="p">],</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">allowDecimals</span><span class="o">===!</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="mi">1</span><span class="o">?</span><span class="nx">b</span><span class="o">=</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">10</span><span class="p">]</span><span class="o">:</span><span class="nx">c</span><span class="o">&lt;=</span><span class="mf">0.1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="p">[</span><span class="mi">1</span><span class="o">/</span><span class="nx">c</span><span class="p">])));</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="nx">e</span><span class="o">&lt;=</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">||</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]))</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="k">break</span><span class="p">;</span><span class="nx">a</span><span class="o">*=</span><span class="nx">c</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Ab</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="p">[[</span><span class="nx">Bb</span><span class="p">,[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">20</span><span class="p">,</span><span class="mi">25</span><span class="p">,</span><span class="mi">50</span><span class="p">,</span><span class="mi">100</span><span class="p">,</span><span class="mi">200</span><span class="p">,</span><span class="mi">500</span><span class="p">]],[</span><span class="nx">ib</span><span class="p">,[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">15</span><span class="p">,</span><span class="mi">30</span><span class="p">]],[</span><span class="nx">Va</span><span class="p">,[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">15</span><span class="p">,</span><span class="mi">30</span><span class="p">]],[</span><span class="nx">Ka</span><span class="p">,[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">12</span><span class="p">]],[</span><span class="nx">ma</span><span class="p">,[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">]],[</span><span class="nx">Wa</span><span class="p">,[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">]],[</span><span class="nx">La</span><span class="p">,[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">]],[</span><span class="nx">va</span><span class="p">,</span><span class="kc">null</span><span class="p">]],</span><span class="nx">d</span><span class="o">=</span></div><div class='line' id='LC12'><span class="nx">c</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">D</span><span class="p">[</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">]],</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">g</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">D</span><span class="p">[</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">]],</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">c</span><span class="p">[</span><span class="nx">g</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">&lt;=</span><span class="p">(</span><span class="nx">e</span><span class="o">*</span><span class="nx">f</span><span class="p">[</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">D</span><span class="p">[</span><span class="nx">c</span><span class="p">[</span><span class="nx">g</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">]])</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="k">break</span><span class="p">;</span><span class="nx">e</span><span class="o">===</span><span class="nx">D</span><span class="p">[</span><span class="nx">va</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">&lt;</span><span class="mi">5</span><span class="o">*</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">5</span><span class="p">]);</span><span class="nx">e</span><span class="o">===</span><span class="nx">D</span><span class="p">[</span><span class="nx">va</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">&lt;</span><span class="mi">5</span><span class="o">*</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">5</span><span class="p">]);</span><span class="nx">c</span><span class="o">=</span><span class="nx">hb</span><span class="p">(</span><span class="nx">a</span><span class="o">/</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="k">return</span><span class="p">{</span><span class="nx">unitRange</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">count</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">unitName</span><span class="o">:</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">]}}</span><span class="kd">function</span> <span class="nx">Cb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">f</span><span class="o">=</span><span class="p">{},</span><span class="nx">g</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">global</span><span class="p">.</span><span class="nx">useUTC</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">unitRange</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">count</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">(</span><span class="nx">b</span><span class="p">)){</span><span class="nx">j</span><span class="o">&gt;=</span><span class="nx">D</span><span class="p">[</span><span class="nx">ib</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">setMilliseconds</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">i</span><span class="p">.</span><span class="nx">setSeconds</span><span class="p">(</span><span class="nx">j</span><span class="o">&gt;=</span><span class="nx">D</span><span class="p">[</span><span class="nx">Va</span><span class="p">]</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">k</span><span class="o">*</span><span class="nx">U</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">getSeconds</span><span class="p">()</span><span class="o">/</span><span class="nx">k</span><span class="p">)));</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="o">&gt;=</span><span class="nx">D</span><span class="p">[</span><span class="nx">Va</span><span class="p">])</span><span class="nx">i</span><span class="p">[</span><span class="nx">Db</span><span class="p">](</span><span class="nx">j</span><span class="o">&gt;=</span><span class="nx">D</span><span class="p">[</span><span class="nx">Ka</span><span class="p">]</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">k</span><span class="o">*</span><span class="nx">U</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">jb</span><span class="p">]()</span><span class="o">/</span><span class="nx">k</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="o">&gt;=</span><span class="nx">D</span><span class="p">[</span><span class="nx">Ka</span><span class="p">])</span><span class="nx">i</span><span class="p">[</span><span class="nx">Eb</span><span class="p">](</span><span class="nx">j</span><span class="o">&gt;=</span><span class="nx">D</span><span class="p">[</span><span class="nx">ma</span><span class="p">]</span><span class="o">?</span></div><div class='line' id='LC13'><span class="mi">0</span><span class="o">:</span><span class="nx">k</span><span class="o">*</span><span class="nx">U</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">kb</span><span class="p">]()</span><span class="o">/</span><span class="nx">k</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="o">&gt;=</span><span class="nx">D</span><span class="p">[</span><span class="nx">ma</span><span class="p">])</span><span class="nx">i</span><span class="p">[</span><span class="nx">lb</span><span class="p">](</span><span class="nx">j</span><span class="o">&gt;=</span><span class="nx">D</span><span class="p">[</span><span class="nx">La</span><span class="p">]</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="nx">k</span><span class="o">*</span><span class="nx">U</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">Ma</span><span class="p">]()</span><span class="o">/</span><span class="nx">k</span><span class="p">));</span><span class="nx">j</span><span class="o">&gt;=</span><span class="nx">D</span><span class="p">[</span><span class="nx">La</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">Fb</span><span class="p">](</span><span class="nx">j</span><span class="o">&gt;=</span><span class="nx">D</span><span class="p">[</span><span class="nx">va</span><span class="p">]</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">k</span><span class="o">*</span><span class="nx">U</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">Xa</span><span class="p">]()</span><span class="o">/</span><span class="nx">k</span><span class="p">)),</span><span class="nx">h</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="nx">Ya</span><span class="p">]());</span><span class="nx">j</span><span class="o">&gt;=</span><span class="nx">D</span><span class="p">[</span><span class="nx">va</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">-=</span><span class="nx">h</span><span class="o">%</span><span class="nx">k</span><span class="p">,</span><span class="nx">i</span><span class="p">[</span><span class="nx">Gb</span><span class="p">](</span><span class="nx">h</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="o">===</span><span class="nx">D</span><span class="p">[</span><span class="nx">Wa</span><span class="p">])</span><span class="nx">i</span><span class="p">[</span><span class="nx">lb</span><span class="p">](</span><span class="nx">i</span><span class="p">[</span><span class="nx">Ma</span><span class="p">]()</span><span class="o">-</span><span class="nx">i</span><span class="p">[</span><span class="nx">mb</span><span class="p">]()</span><span class="o">+</span><span class="nx">n</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="mi">1</span><span class="p">));</span><span class="nx">b</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="nx">Ya</span><span class="p">]();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">getTime</span><span class="p">(),</span><span class="nx">l</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="nx">Xa</span><span class="p">](),</span><span class="nx">m</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="nx">Ma</span><span class="p">](),</span><span class="nx">i</span><span class="o">=</span><span class="nx">g</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="p">(</span><span class="mi">864</span><span class="nx">E5</span><span class="o">+</span><span class="nx">i</span><span class="p">.</span><span class="nx">getTimezoneOffset</span><span class="p">()</span><span class="o">*</span><span class="mi">6</span><span class="nx">E4</span><span class="p">)</span><span class="o">%</span><span class="mi">864</span><span class="nx">E5</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;)</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">j</span><span class="o">===</span><span class="nx">D</span><span class="p">[</span><span class="nx">va</span><span class="p">]</span><span class="o">?</span><span class="nx">d</span><span class="o">=</span><span class="nx">Za</span><span class="p">(</span><span class="nx">h</span><span class="o">+</span><span class="nx">b</span><span class="o">*</span><span class="nx">k</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">j</span><span class="o">===</span><span class="nx">D</span><span class="p">[</span><span class="nx">La</span><span class="p">]</span><span class="o">?</span><span class="nx">d</span><span class="o">=</span><span class="nx">Za</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">l</span><span class="o">+</span><span class="nx">b</span><span class="o">*</span><span class="nx">k</span><span class="p">)</span><span class="o">:!</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="o">===</span><span class="nx">D</span><span class="p">[</span><span class="nx">ma</span><span class="p">]</span><span class="o">||</span><span class="nx">j</span><span class="o">===</span><span class="nx">D</span><span class="p">[</span><span class="nx">Wa</span><span class="p">])</span><span class="o">?</span><span class="nx">d</span><span class="o">=</span><span class="nx">Za</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="o">+</span><span class="nx">b</span><span class="o">*</span><span class="nx">k</span><span class="o">*</span><span class="p">(</span><span class="nx">j</span><span class="o">===</span><span class="nx">D</span><span class="p">[</span><span class="nx">ma</span><span class="p">]</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">7</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">d</span><span class="o">+=</span><span class="nx">j</span><span class="o">*</span><span class="nx">k</span><span class="p">,</span><span class="nx">j</span><span class="o">&lt;=</span><span class="nx">D</span><span class="p">[</span><span class="nx">Ka</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">%</span><span class="nx">D</span><span class="p">[</span><span class="nx">ma</span><span class="p">]</span><span class="o">===</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">ma</span><span class="p">)),</span><span class="nx">b</span><span class="o">++</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">)}</span><span class="nx">e</span><span class="p">.</span><span class="nx">info</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">,{</span><span class="nx">higherRanks</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">totalRange</span><span class="o">:</span><span class="nx">j</span><span class="o">*</span></div><div class='line' id='LC14'><span class="nx">k</span><span class="p">});</span><span class="k">return</span> <span class="nx">e</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Hb</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">symbol</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">color</span><span class="o">=</span><span class="mi">0</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Ib</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">ss_i</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="o">===</span><span class="mi">0</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">ss_i</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">ss_i</span><span class="o">:</span><span class="nx">d</span><span class="p">});</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="k">delete</span> <span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">ss_i</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Fa</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">b</span><span class="o">--</span><span class="p">;)</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">&lt;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]);</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">wa</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">b</span><span class="o">--</span><span class="p">;)</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">&gt;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]);</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Ga</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">!==</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">destroy</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">destroy</span><span class="p">(),</span><span class="k">delete</span> <span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]}</span><span class="kd">function</span> <span class="nx">Na</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">$a</span><span class="o">||</span><span class="p">(</span><span class="nx">$a</span><span class="o">=</span><span class="nx">T</span><span class="p">(</span><span class="nx">ga</span><span class="p">));</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">$a</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">$a</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span></div><div class='line' id='LC15'><span class="s2">&quot;&quot;</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Oa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="s2">&quot;Highcharts error #&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;: www.highcharts.com/errors/&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="k">throw</span> <span class="nx">c</span><span class="p">;</span><span class="k">else</span> <span class="nx">L</span><span class="p">.</span><span class="nx">console</span><span class="o">&amp;&amp;</span><span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">c</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">da</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nb">parseFloat</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">toPrecision</span><span class="p">(</span><span class="mi">14</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">xa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">Pa</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">animation</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">Jb</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">global</span><span class="p">.</span><span class="nx">useUTC</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="o">?</span><span class="s2">&quot;getUTC&quot;</span><span class="o">:</span><span class="s2">&quot;get&quot;</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="o">?</span><span class="s2">&quot;setUTC&quot;</span><span class="o">:</span><span class="s2">&quot;set&quot;</span><span class="p">;</span><span class="nx">Za</span><span class="o">=</span><span class="nx">a</span><span class="o">?</span><span class="nb">Date</span><span class="p">.</span><span class="nx">UTC</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">n</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">n</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="nx">n</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="nx">n</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="mi">0</span><span class="p">))).</span><span class="nx">getTime</span><span class="p">()};</span><span class="nx">jb</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;Minutes&quot;</span><span class="p">;</span><span class="nx">kb</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;Hours&quot;</span><span class="p">;</span><span class="nx">mb</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;Day&quot;</span><span class="p">;</span><span class="nx">Ma</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;Date&quot;</span><span class="p">;</span><span class="nx">Xa</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;Month&quot;</span><span class="p">;</span><span class="nx">Ya</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;FullYear&quot;</span><span class="p">;</span><span class="nx">Db</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;Minutes&quot;</span><span class="p">;</span><span class="nx">Eb</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;Hours&quot;</span><span class="p">;</span><span class="nx">lb</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;Date&quot;</span><span class="p">;</span></div><div class='line' id='LC16'><span class="nx">Fb</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;Month&quot;</span><span class="p">;</span><span class="nx">Gb</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;FullYear&quot;</span><span class="p">}</span><span class="kd">function</span> <span class="nx">ya</span><span class="p">(){}</span><span class="kd">function</span> <span class="nx">Qa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">axis</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">pos</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">isNew</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">addLabel</span><span class="p">()}</span><span class="kd">function</span> <span class="nx">nb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">axis</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">id</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">}</span><span class="kd">function</span> <span class="nx">Kb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">inverted</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">axis</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">isNegative</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">stack</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">percent</span><span class="o">=</span><span class="nx">f</span><span class="o">===</span><span class="s2">&quot;percent&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">alignOptions</span><span class="o">=</span><span class="p">{</span><span class="nx">align</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">align</span><span class="o">||</span><span class="p">(</span><span class="nx">g</span><span class="o">?</span><span class="nx">c</span><span class="o">?</span><span class="s2">&quot;left&quot;</span><span class="o">:</span><span class="s2">&quot;right&quot;</span><span class="o">:</span><span class="s2">&quot;center&quot;</span><span class="p">),</span><span class="nx">verticalAlign</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">verticalAlign</span><span class="o">||</span><span class="p">(</span><span class="nx">g</span><span class="o">?</span><span class="s2">&quot;middle&quot;</span><span class="o">:</span><span class="nx">c</span><span class="o">?</span><span class="s2">&quot;bottom&quot;</span><span class="o">:</span><span class="s2">&quot;top&quot;</span><span class="p">),</span><span class="nx">y</span><span class="o">:</span><span class="nx">n</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">g</span><span class="o">?</span><span class="mi">4</span><span class="o">:</span><span class="nx">c</span><span class="o">?</span><span class="mi">14</span><span class="o">:-</span><span class="mi">6</span><span class="p">),</span><span class="nx">x</span><span class="o">:</span><span class="nx">n</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span></div><div class='line' id='LC17'><span class="nx">g</span><span class="o">?</span><span class="nx">c</span><span class="o">?-</span><span class="mi">6</span><span class="o">:</span><span class="mi">6</span><span class="o">:</span><span class="mi">0</span><span class="p">)};</span><span class="k">this</span><span class="p">.</span><span class="nx">textAlign</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">textAlign</span><span class="o">||</span><span class="p">(</span><span class="nx">g</span><span class="o">?</span><span class="nx">c</span><span class="o">?</span><span class="s2">&quot;right&quot;</span><span class="o">:</span><span class="s2">&quot;left&quot;</span><span class="o">:</span><span class="s2">&quot;center&quot;</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">ob</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">init</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">pb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">borderWidth</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">z</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">padding</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">crosshairs</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">now</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">0</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">isHidden</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">label</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">label</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">shape</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">useHTML</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="s2">&quot;tooltip&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">padding</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">fill</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">backgroundColor</span><span class="p">,</span><span class="s2">&quot;stroke-width&quot;</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">r</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">borderRadius</span><span class="p">,</span><span class="nx">zIndex</span><span class="o">:</span><span class="mi">8</span><span class="p">}).</span><span class="nx">css</span><span class="p">(</span><span class="nx">d</span><span class="p">).</span><span class="nx">css</span><span class="p">({</span><span class="nx">padding</span><span class="o">:</span><span class="mi">0</span><span class="p">}).</span><span class="nx">hide</span><span class="p">().</span><span class="nx">add</span><span class="p">();</span><span class="nx">V</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">label</span><span class="p">.</span><span class="nx">shadow</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">shadow</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">shared</span><span class="o">=</span></div><div class='line' id='LC18'><span class="nx">b</span><span class="p">.</span><span class="nx">shared</span><span class="p">}</span><span class="kd">function</span> <span class="nx">qb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">V</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">zoomType</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">zoomX</span><span class="o">=</span><span class="sr">/x/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">zoomY</span><span class="o">=</span><span class="sr">/y/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">tooltip</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">rb</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">sb</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">init</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">A</span><span class="p">,</span><span class="nx">C</span><span class="o">=</span><span class="nb">document</span><span class="p">,</span><span class="nx">L</span><span class="o">=</span><span class="nb">window</span><span class="p">,</span><span class="nx">K</span><span class="o">=</span><span class="nb">Math</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">K</span><span class="p">.</span><span class="nx">round</span><span class="p">,</span><span class="nx">U</span><span class="o">=</span><span class="nx">K</span><span class="p">.</span><span class="nx">floor</span><span class="p">,</span><span class="nx">za</span><span class="o">=</span><span class="nx">K</span><span class="p">.</span><span class="nx">ceil</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">K</span><span class="p">.</span><span class="nx">max</span><span class="p">,</span><span class="nx">O</span><span class="o">=</span><span class="nx">K</span><span class="p">.</span><span class="nx">min</span><span class="p">,</span><span class="nx">M</span><span class="o">=</span><span class="nx">K</span><span class="p">.</span><span class="nx">abs</span><span class="p">,</span><span class="nx">W</span><span class="o">=</span><span class="nx">K</span><span class="p">.</span><span class="nx">cos</span><span class="p">,</span><span class="nx">Z</span><span class="o">=</span><span class="nx">K</span><span class="p">.</span><span class="nx">sin</span><span class="p">,</span><span class="nx">Aa</span><span class="o">=</span><span class="nx">K</span><span class="p">.</span><span class="nx">PI</span><span class="p">,</span><span class="nx">ab</span><span class="o">=</span><span class="nx">Aa</span><span class="o">*</span><span class="mi">2</span><span class="o">/</span><span class="mi">360</span><span class="p">,</span><span class="nx">na</span><span class="o">=</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">userAgent</span><span class="p">,</span><span class="nx">Lb</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">opera</span><span class="p">,</span><span class="nx">Ea</span><span class="o">=</span><span class="sr">/msie/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">na</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">Lb</span><span class="p">,</span><span class="nx">Ra</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">documentMode</span><span class="o">===</span><span class="mi">8</span><span class="p">,</span><span class="nx">bb</span><span class="o">=</span><span class="sr">/AppleWebKit/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">na</span><span class="p">),</span><span class="nx">cb</span><span class="o">=</span><span class="sr">/Firefox/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">na</span><span class="p">),</span><span class="nx">Mb</span><span class="o">=</span><span class="sr">/(Mobile|Android|Windows Phone)/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">na</span><span class="p">),</span></div><div class='line' id='LC19'><span class="nx">oa</span><span class="o">=</span><span class="s2">&quot;http://www.w3.org/2000/svg&quot;</span><span class="p">,</span><span class="nx">ca</span><span class="o">=!!</span><span class="nx">C</span><span class="p">.</span><span class="nx">createElementNS</span><span class="o">&amp;&amp;!!</span><span class="nx">C</span><span class="p">.</span><span class="nx">createElementNS</span><span class="p">(</span><span class="nx">oa</span><span class="p">,</span><span class="s2">&quot;svg&quot;</span><span class="p">).</span><span class="nx">createSVGRect</span><span class="p">,</span><span class="nx">Sb</span><span class="o">=</span><span class="nx">cb</span><span class="o">&amp;&amp;</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">na</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;Firefox/&quot;</span><span class="p">)[</span><span class="mi">1</span><span class="p">],</span><span class="mi">10</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">4</span><span class="p">,</span><span class="nx">V</span><span class="o">=!</span><span class="nx">ca</span><span class="o">&amp;&amp;!</span><span class="nx">Ea</span><span class="o">&amp;&amp;!!</span><span class="nx">C</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;canvas&quot;</span><span class="p">).</span><span class="nx">getContext</span><span class="p">,</span><span class="nx">Sa</span><span class="p">,</span><span class="nx">Ba</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">.</span><span class="nx">ontouchstart</span><span class="o">!==</span><span class="nx">A</span><span class="p">,</span><span class="nx">Nb</span><span class="o">=</span><span class="p">{},</span><span class="nx">tb</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">$a</span><span class="p">,</span><span class="nx">N</span><span class="p">,</span><span class="nx">db</span><span class="p">,</span><span class="nx">Pa</span><span class="p">,</span><span class="nx">ub</span><span class="p">,</span><span class="nx">D</span><span class="p">,</span><span class="nx">pa</span><span class="o">=</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">Ha</span><span class="o">=</span><span class="p">[],</span><span class="nx">ga</span><span class="o">=</span><span class="s2">&quot;div&quot;</span><span class="p">,</span><span class="nx">Q</span><span class="o">=</span><span class="s2">&quot;none&quot;</span><span class="p">,</span><span class="nx">vb</span><span class="o">=</span><span class="s2">&quot;rgba(192,192,192,&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">ca</span><span class="o">?</span><span class="mf">1.0</span><span class="nx">E</span><span class="o">-</span><span class="mi">4</span><span class="o">:</span><span class="mf">0.002</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">,</span><span class="nx">Bb</span><span class="o">=</span><span class="s2">&quot;millisecond&quot;</span><span class="p">,</span><span class="nx">ib</span><span class="o">=</span><span class="s2">&quot;second&quot;</span><span class="p">,</span><span class="nx">Va</span><span class="o">=</span><span class="s2">&quot;minute&quot;</span><span class="p">,</span><span class="nx">Ka</span><span class="o">=</span><span class="s2">&quot;hour&quot;</span><span class="p">,</span><span class="nx">ma</span><span class="o">=</span><span class="s2">&quot;day&quot;</span><span class="p">,</span><span class="nx">Wa</span><span class="o">=</span><span class="s2">&quot;week&quot;</span><span class="p">,</span><span class="nx">La</span><span class="o">=</span><span class="s2">&quot;month&quot;</span><span class="p">,</span><span class="nx">va</span><span class="o">=</span><span class="s2">&quot;year&quot;</span><span class="p">,</span><span class="nx">wb</span><span class="o">=</span><span class="s2">&quot;stroke-width&quot;</span><span class="p">,</span><span class="nx">Za</span><span class="p">,</span><span class="nx">jb</span><span class="p">,</span><span class="nx">kb</span><span class="p">,</span><span class="nx">mb</span><span class="p">,</span><span class="nx">Ma</span><span class="p">,</span><span class="nx">Xa</span><span class="p">,</span><span class="nx">Ya</span><span class="p">,</span><span class="nx">Db</span><span class="p">,</span><span class="nx">Eb</span><span class="p">,</span><span class="nx">lb</span><span class="p">,</span><span class="nx">Fb</span><span class="p">,</span><span class="nx">Gb</span><span class="p">,</span><span class="nx">$</span><span class="o">=</span><span class="p">{};</span><span class="nx">L</span><span class="p">.</span><span class="nx">Highcharts</span><span class="o">=</span></div><div class='line' id='LC20'><span class="p">{};</span><span class="nx">db</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">r</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">||</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="k">return</span><span class="s2">&quot;Invalid date&quot;</span><span class="p">;</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;%Y-%m-%d %H:%M:%S&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="k">new</span> <span class="nb">Date</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">kb</span><span class="p">](),</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">mb</span><span class="p">](),</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">Ma</span><span class="p">](),</span><span class="nx">i</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">Xa</span><span class="p">](),</span><span class="nx">j</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">Ya</span><span class="p">](),</span><span class="nx">k</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">lang</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">weekdays</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="nx">a</span><span class="o">:</span><span class="nx">l</span><span class="p">[</span><span class="nx">g</span><span class="p">].</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">3</span><span class="p">),</span><span class="nx">A</span><span class="o">:</span><span class="nx">l</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">d</span><span class="o">:</span><span class="nx">ua</span><span class="p">(</span><span class="nx">h</span><span class="p">),</span><span class="nx">e</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="o">:</span><span class="nx">k</span><span class="p">.</span><span class="nx">shortMonths</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">B</span><span class="o">:</span><span class="nx">k</span><span class="p">.</span><span class="nx">months</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">m</span><span class="o">:</span><span class="nx">ua</span><span class="p">(</span><span class="nx">i</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="nx">y</span><span class="o">:</span><span class="nx">j</span><span class="p">.</span><span class="nx">toString</span><span class="p">().</span><span class="nx">substr</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">2</span><span class="p">),</span><span class="nx">Y</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">H</span><span class="o">:</span><span class="nx">ua</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">I</span><span class="o">:</span><span class="nx">ua</span><span class="p">(</span><span class="nx">f</span><span class="o">%</span><span class="mi">12</span><span class="o">||</span><span class="mi">12</span><span class="p">),</span><span class="nx">l</span><span class="o">:</span><span class="nx">f</span><span class="o">%</span><span class="mi">12</span><span class="o">||</span><span class="mi">12</span><span class="p">,</span><span class="nx">M</span><span class="o">:</span><span class="nx">ua</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">jb</span><span class="p">]()),</span><span class="nx">p</span><span class="o">:</span><span class="nx">f</span><span class="o">&lt;</span><span class="mi">12</span><span class="o">?</span><span class="s2">&quot;AM&quot;</span><span class="o">:</span><span class="s2">&quot;PM&quot;</span><span class="p">,</span><span class="nx">P</span><span class="o">:</span><span class="nx">f</span><span class="o">&lt;</span><span class="mi">12</span><span class="o">?</span><span class="s2">&quot;am&quot;</span><span class="o">:</span><span class="s2">&quot;pm&quot;</span><span class="p">,</span><span class="nx">S</span><span class="o">:</span><span class="nx">ua</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">getSeconds</span><span class="p">()),</span><span class="nx">L</span><span class="o">:</span><span class="nx">ua</span><span class="p">(</span><span class="nx">u</span><span class="p">(</span><span class="nx">b</span><span class="o">%</span><span class="mi">1</span><span class="nx">E3</span><span class="p">),</span><span class="mi">3</span><span class="p">)};</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="k">for</span><span class="p">(;</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;%&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">)</span><span class="o">!==-</span><span class="mi">1</span><span class="p">;)</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;%&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">]);</span><span class="k">return</span> <span class="nx">c</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">).</span><span class="nx">toUpperCase</span><span class="p">()</span><span class="o">+</span></div><div class='line' id='LC21'><span class="nx">a</span><span class="p">.</span><span class="nx">substr</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">};</span><span class="nx">Hb</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">wrapColor</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">color</span><span class="o">&gt;=</span><span class="nx">a</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">color</span><span class="o">=</span><span class="mi">0</span><span class="p">},</span><span class="nx">wrapSymbol</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">symbol</span><span class="o">&gt;=</span><span class="nx">a</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">symbol</span><span class="o">=</span><span class="mi">0</span><span class="p">}};</span><span class="nx">D</span><span class="o">=</span><span class="nx">ia</span><span class="p">(</span><span class="nx">Bb</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="nx">ib</span><span class="p">,</span><span class="mi">1</span><span class="nx">E3</span><span class="p">,</span><span class="nx">Va</span><span class="p">,</span><span class="mi">6</span><span class="nx">E4</span><span class="p">,</span><span class="nx">Ka</span><span class="p">,</span><span class="mi">36</span><span class="nx">E5</span><span class="p">,</span><span class="nx">ma</span><span class="p">,</span><span class="mi">864</span><span class="nx">E5</span><span class="p">,</span><span class="nx">Wa</span><span class="p">,</span><span class="mi">6048</span><span class="nx">E5</span><span class="p">,</span><span class="nx">La</span><span class="p">,</span><span class="mi">26784</span><span class="nx">E5</span><span class="p">,</span><span class="nx">va</span><span class="p">,</span><span class="mi">31556952</span><span class="nx">E3</span><span class="p">);</span><span class="nx">ub</span><span class="o">=</span><span class="p">{</span><span class="nx">init</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">shift</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;C&quot;</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="o">?</span><span class="mi">7</span><span class="o">:</span><span class="mi">3</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="p">[].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">g</span><span class="o">--</span><span class="p">;)</span><span class="nx">a</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;M&quot;</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">g</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">g</span><span class="o">+</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="nx">g</span><span class="o">+</span><span class="mi">2</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="nx">g</span><span class="o">+</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="nx">g</span><span class="o">+</span><span class="mi">2</span><span class="p">])};</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">j</span><span class="p">(</span><span class="nx">c</span><span class="p">));</span><span class="nx">a</span><span class="p">.</span><span class="nx">isArea</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">6</span><span class="p">,</span><span class="mi">6</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">6</span><span class="p">,</span><span class="mi">6</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">&lt;=</span></div><div class='line' id='LC22'><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">/</span><span class="nx">f</span><span class="p">)</span><span class="k">for</span><span class="p">(;</span><span class="nx">d</span><span class="o">--</span><span class="p">;)</span><span class="nx">c</span><span class="o">=</span><span class="p">[].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">splice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="p">).</span><span class="nx">concat</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">shift</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">;)</span><span class="nx">d</span><span class="o">=</span><span class="p">[].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">splice</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="nx">f</span><span class="p">,</span><span class="nx">f</span><span class="p">),</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">f</span><span class="o">-</span><span class="mi">6</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">f</span><span class="o">-</span><span class="mi">2</span><span class="p">],</span><span class="nx">d</span><span class="p">[</span><span class="nx">f</span><span class="o">-</span><span class="mi">5</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">f</span><span class="o">-</span><span class="mi">1</span><span class="p">]),</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">h</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">i</span><span class="p">));</span><span class="k">return</span><span class="p">[</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">]},</span><span class="nx">step</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="mi">1</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&lt;</span><span class="mi">1</span><span class="p">)</span><span class="k">for</span><span class="p">(;</span><span class="nx">f</span><span class="o">--</span><span class="p">;)</span><span class="nx">d</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">]),</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">:</span><span class="nx">c</span><span class="o">*</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">-</span><span class="nx">d</span><span class="p">)</span><span class="o">+</span><span class="nx">d</span><span class="p">;</span><span class="k">else</span> <span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">return</span> <span class="nx">e</span><span class="p">}};(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">L</span><span class="p">.</span><span class="nx">HighchartsAdapter</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">HighchartsAdapter</span><span class="o">||</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">{</span><span class="nx">init</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">fx</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">step</span><span class="p">,</span></div><div class='line' id='LC23'><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">Tween</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">propHooks</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">easing</span><span class="p">,{</span><span class="nx">easeOutQuad</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="k">return</span><span class="o">-</span><span class="nx">d</span><span class="o">*</span><span class="p">(</span><span class="nx">b</span><span class="o">/=</span><span class="nx">e</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="mi">2</span><span class="p">)</span><span class="o">+</span><span class="nx">c</span><span class="p">}});</span><span class="nx">a</span><span class="p">.</span><span class="nx">each</span><span class="p">([</span><span class="s2">&quot;cur&quot;</span><span class="p">,</span><span class="s2">&quot;_default&quot;</span><span class="p">,</span><span class="s2">&quot;width&quot;</span><span class="p">,</span><span class="s2">&quot;height&quot;</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">;</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;cur&quot;</span><span class="o">?</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="o">:</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;_default&quot;</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;set&quot;</span><span class="p">);(</span><span class="nx">k</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="k">this</span><span class="p">;</span><span class="nx">l</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">elem</span><span class="p">;</span><span class="k">return</span> <span class="nx">l</span><span class="p">.</span><span class="nx">attr</span><span class="o">?</span><span class="nx">l</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">prop</span><span class="p">,</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;cur&quot;</span><span class="o">?</span><span class="nx">A</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">now</span><span class="p">)</span><span class="o">:</span><span class="nx">k</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)})});</span><span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">elem</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">started</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">toD</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">start</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">a</span><span class="p">.</span><span class="nx">end</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="p">.</span><span class="nx">started</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;d&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">step</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">start</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">end</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">pos</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">toD</span><span class="p">))};</span></div><div class='line' id='LC24'><span class="nx">f</span><span class="o">?</span><span class="nx">g</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="p">{</span><span class="nx">set</span><span class="o">:</span><span class="nx">e</span><span class="p">}</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">each</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">forEach</span><span class="o">?</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">forEach</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">===!</span><span class="mi">1</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="p">}},</span><span class="nx">getScript</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">getScript</span><span class="p">,</span><span class="nx">inArray</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">inArray</span><span class="p">,</span><span class="nx">adapterRun</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">)[</span><span class="nx">c</span><span class="p">]()},</span><span class="nx">grep</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">grep</span><span class="p">,</span><span class="nx">map</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="p">},</span><span class="nx">merge</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">arguments</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">extend</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="mi">3</span><span class="p">])},</span><span class="nx">offset</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">offset</span><span class="p">()},</span></div><div class='line' id='LC25'><span class="nx">addEvent</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">bind</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="nx">removeEvent</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="o">?</span><span class="s2">&quot;removeEventListener&quot;</span><span class="o">:</span><span class="s2">&quot;detachEvent&quot;</span><span class="p">;</span><span class="nx">C</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">&amp;&amp;!</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){});</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">unbind</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="nx">fireEvent</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">Event</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot;detached&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">,</span><span class="nx">h</span><span class="p">;</span><span class="o">!</span><span class="nx">Ea</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">delete</span> <span class="nx">d</span><span class="p">.</span><span class="nx">layerX</span><span class="p">,</span><span class="k">delete</span> <span class="nx">d</span><span class="p">.</span><span class="nx">layerY</span><span class="p">);</span><span class="nx">x</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">each</span><span class="p">([</span><span class="s2">&quot;preventDefault&quot;</span><span class="p">,</span><span class="s2">&quot;stopPropagation&quot;</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">try</span><span class="p">{</span><span class="nx">c</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">f</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;preventDefault&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=!</span><span class="mi">0</span><span class="p">)}}});</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">trigger</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="nx">b</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span></div><div class='line' id='LC26'><span class="kc">null</span><span class="p">);</span><span class="nx">e</span><span class="o">&amp;&amp;!</span><span class="nx">f</span><span class="p">.</span><span class="nx">isDefaultPrevented</span><span class="p">()</span><span class="o">&amp;&amp;!</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">(</span><span class="nx">f</span><span class="p">)},</span><span class="nx">washMouseEvent</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">originalEvent</span><span class="o">||</span><span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">pageX</span><span class="o">===</span><span class="nx">A</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">pageX</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageX</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">pageY</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageY</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">animate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">d</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">toD</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">stop</span><span class="p">();</span><span class="nx">e</span><span class="p">.</span><span class="nx">animate</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="nx">stop</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">stop</span><span class="p">()}}})(</span><span class="nx">L</span><span class="p">.</span><span class="nx">jQuery</span><span class="p">);</span><span class="kd">var</span> <span class="nx">ea</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">HighchartsAdapter</span><span class="p">,</span><span class="nx">G</span><span class="o">=</span><span class="nx">ea</span><span class="o">||</span><span class="p">{};</span><span class="nx">ea</span><span class="o">&amp;&amp;</span><span class="nx">ea</span><span class="p">.</span><span class="nx">init</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">ea</span><span class="p">,</span><span class="nx">ub</span><span class="p">);</span><span class="kd">var</span> <span class="nx">eb</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">adapterRun</span><span class="p">,</span><span class="nx">Tb</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">getScript</span><span class="p">,</span><span class="nx">Ub</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">inArray</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">each</span><span class="p">,</span><span class="nx">Ob</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">grep</span><span class="p">,</span><span class="nx">Vb</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">offset</span><span class="p">,</span><span class="nx">Ta</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">map</span><span class="p">,</span><span class="nx">B</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">merge</span><span class="p">,</span><span class="nx">J</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">addEvent</span><span class="p">,</span><span class="nx">R</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">removeEvent</span><span class="p">,</span><span class="nx">F</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">fireEvent</span><span class="p">,</span><span class="nx">Pb</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">washMouseEvent</span><span class="p">,</span><span class="nx">xb</span><span class="o">=</span></div><div class='line' id='LC27'><span class="nx">G</span><span class="p">.</span><span class="nx">animate</span><span class="p">,</span><span class="nx">fb</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">stop</span><span class="p">,</span><span class="nx">G</span><span class="o">=</span><span class="p">{</span><span class="nx">enabled</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">align</span><span class="o">:</span><span class="s2">&quot;center&quot;</span><span class="p">,</span><span class="nx">x</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">15</span><span class="p">,</span><span class="nx">style</span><span class="o">:</span><span class="p">{</span><span class="nx">color</span><span class="o">:</span><span class="s2">&quot;#666&quot;</span><span class="p">,</span><span class="nx">fontSize</span><span class="o">:</span><span class="s2">&quot;11px&quot;</span><span class="p">,</span><span class="nx">lineHeight</span><span class="o">:</span><span class="s2">&quot;14px&quot;</span><span class="p">}};</span><span class="nx">N</span><span class="o">=</span><span class="p">{</span><span class="nx">colors</span><span class="o">:</span><span class="s2">&quot;#4572A7,#AA4643,#89A54E,#80699B,#3D96AE,#DB843D,#92A8CD,#A47D7C,#B5CA92&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">),</span><span class="nx">symbols</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;circle&quot;</span><span class="p">,</span><span class="s2">&quot;diamond&quot;</span><span class="p">,</span><span class="s2">&quot;square&quot;</span><span class="p">,</span><span class="s2">&quot;triangle&quot;</span><span class="p">,</span><span class="s2">&quot;triangle-down&quot;</span><span class="p">],</span><span class="nx">lang</span><span class="o">:</span><span class="p">{</span><span class="nx">loading</span><span class="o">:</span><span class="s2">&quot;Loading...&quot;</span><span class="p">,</span><span class="nx">months</span><span class="o">:</span><span class="s2">&quot;January,February,March,April,May,June,July,August,September,October,November,December&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">),</span><span class="nx">shortMonths</span><span class="o">:</span><span class="s2">&quot;Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">),</span><span class="nx">weekdays</span><span class="o">:</span><span class="s2">&quot;Sunday,Monday,Tuesday,Wednesday,Thursday,Friday,Saturday&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">),</span></div><div class='line' id='LC28'><span class="nx">decimalPoint</span><span class="o">:</span><span class="s2">&quot;.&quot;</span><span class="p">,</span><span class="nx">numericSymbols</span><span class="o">:</span><span class="s2">&quot;k,M,G,T,P,E&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">),</span><span class="nx">resetZoom</span><span class="o">:</span><span class="s2">&quot;Reset zoom&quot;</span><span class="p">,</span><span class="nx">resetZoomTitle</span><span class="o">:</span><span class="s2">&quot;Reset zoom level 1:1&quot;</span><span class="p">,</span><span class="nx">thousandsSep</span><span class="o">:</span><span class="s2">&quot;,&quot;</span><span class="p">},</span><span class="nx">global</span><span class="o">:</span><span class="p">{</span><span class="nx">useUTC</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">canvasToolsURL</span><span class="o">:</span><span class="s2">&quot;http://code.highcharts.com/2.3.5/modules/canvas-tools.js&quot;</span><span class="p">,</span><span class="nx">VMLRadialGradientURL</span><span class="o">:</span><span class="s2">&quot;http://code.highcharts.com/2.3.5/gfx/vml-radial-gradient.png&quot;</span><span class="p">},</span><span class="nx">chart</span><span class="o">:</span><span class="p">{</span><span class="nx">borderColor</span><span class="o">:</span><span class="s2">&quot;#4572A7&quot;</span><span class="p">,</span><span class="nx">borderRadius</span><span class="o">:</span><span class="mi">5</span><span class="p">,</span><span class="nx">defaultSeriesType</span><span class="o">:</span><span class="s2">&quot;line&quot;</span><span class="p">,</span><span class="nx">ignoreHiddenSeries</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">spacingTop</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span><span class="nx">spacingRight</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span><span class="nx">spacingBottom</span><span class="o">:</span><span class="mi">15</span><span class="p">,</span><span class="nx">spacingLeft</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span><span class="nx">style</span><span class="o">:</span><span class="p">{</span><span class="nx">fontFamily</span><span class="o">:</span><span class="s1">&#39;&quot;Lucida Grande&quot;, &quot;Lucida Sans Unicode&quot;, Verdana, Arial, Helvetica, sans-serif&#39;</span><span class="p">,</span></div><div class='line' id='LC29'><span class="nx">fontSize</span><span class="o">:</span><span class="s2">&quot;12px&quot;</span><span class="p">},</span><span class="nx">backgroundColor</span><span class="o">:</span><span class="s2">&quot;#FFFFFF&quot;</span><span class="p">,</span><span class="nx">plotBorderColor</span><span class="o">:</span><span class="s2">&quot;#C0C0C0&quot;</span><span class="p">,</span><span class="nx">resetZoomButton</span><span class="o">:</span><span class="p">{</span><span class="nx">theme</span><span class="o">:</span><span class="p">{</span><span class="nx">zIndex</span><span class="o">:</span><span class="mi">20</span><span class="p">},</span><span class="nx">position</span><span class="o">:</span><span class="p">{</span><span class="nx">align</span><span class="o">:</span><span class="s2">&quot;right&quot;</span><span class="p">,</span><span class="nx">x</span><span class="o">:-</span><span class="mi">10</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">10</span><span class="p">}}},</span><span class="nx">title</span><span class="o">:</span><span class="p">{</span><span class="nx">text</span><span class="o">:</span><span class="s2">&quot;Chart title&quot;</span><span class="p">,</span><span class="nx">align</span><span class="o">:</span><span class="s2">&quot;center&quot;</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">15</span><span class="p">,</span><span class="nx">style</span><span class="o">:</span><span class="p">{</span><span class="nx">color</span><span class="o">:</span><span class="s2">&quot;#3E576F&quot;</span><span class="p">,</span><span class="nx">fontSize</span><span class="o">:</span><span class="s2">&quot;16px&quot;</span><span class="p">}},</span><span class="nx">subtitle</span><span class="o">:</span><span class="p">{</span><span class="nx">text</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">align</span><span class="o">:</span><span class="s2">&quot;center&quot;</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">30</span><span class="p">,</span><span class="nx">style</span><span class="o">:</span><span class="p">{</span><span class="nx">color</span><span class="o">:</span><span class="s2">&quot;#6D869F&quot;</span><span class="p">}},</span><span class="nx">plotOptions</span><span class="o">:</span><span class="p">{</span><span class="nx">line</span><span class="o">:</span><span class="p">{</span><span class="nx">allowPointSelect</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">showCheckbox</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">animation</span><span class="o">:</span><span class="p">{</span><span class="nx">duration</span><span class="o">:</span><span class="mi">1</span><span class="nx">E3</span><span class="p">},</span><span class="nx">events</span><span class="o">:</span><span class="p">{},</span><span class="nx">lineWidth</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">shadow</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">marker</span><span class="o">:</span><span class="p">{</span><span class="nx">enabled</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">lineWidth</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">radius</span><span class="o">:</span><span class="mi">4</span><span class="p">,</span><span class="nx">lineColor</span><span class="o">:</span><span class="s2">&quot;#FFFFFF&quot;</span><span class="p">,</span><span class="nx">states</span><span class="o">:</span><span class="p">{</span><span class="nx">hover</span><span class="o">:</span><span class="p">{</span><span class="nx">enabled</span><span class="o">:!</span><span class="mi">0</span><span class="p">},</span><span class="nx">select</span><span class="o">:</span><span class="p">{</span><span class="nx">fillColor</span><span class="o">:</span><span class="s2">&quot;#FFFFFF&quot;</span><span class="p">,</span></div><div class='line' id='LC30'><span class="nx">lineColor</span><span class="o">:</span><span class="s2">&quot;#000000&quot;</span><span class="p">,</span><span class="nx">lineWidth</span><span class="o">:</span><span class="mi">2</span><span class="p">}}},</span><span class="nx">point</span><span class="o">:</span><span class="p">{</span><span class="nx">events</span><span class="o">:</span><span class="p">{}},</span><span class="nx">dataLabels</span><span class="o">:</span><span class="nx">B</span><span class="p">(</span><span class="nx">G</span><span class="p">,{</span><span class="nx">enabled</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">formatter</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="p">},</span><span class="nx">verticalAlign</span><span class="o">:</span><span class="s2">&quot;bottom&quot;</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">0</span><span class="p">}),</span><span class="nx">cropThreshold</span><span class="o">:</span><span class="mi">300</span><span class="p">,</span><span class="nx">pointRange</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">showInLegend</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">states</span><span class="o">:</span><span class="p">{</span><span class="nx">hover</span><span class="o">:</span><span class="p">{</span><span class="nx">marker</span><span class="o">:</span><span class="p">{}},</span><span class="nx">select</span><span class="o">:</span><span class="p">{</span><span class="nx">marker</span><span class="o">:</span><span class="p">{}}},</span><span class="nx">stickyTracking</span><span class="o">:!</span><span class="mi">0</span><span class="p">}},</span><span class="nx">labels</span><span class="o">:</span><span class="p">{</span><span class="nx">style</span><span class="o">:</span><span class="p">{</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;absolute&quot;</span><span class="p">,</span><span class="nx">color</span><span class="o">:</span><span class="s2">&quot;#3E576F&quot;</span><span class="p">}},</span><span class="nx">legend</span><span class="o">:</span><span class="p">{</span><span class="nx">enabled</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">align</span><span class="o">:</span><span class="s2">&quot;center&quot;</span><span class="p">,</span><span class="nx">layout</span><span class="o">:</span><span class="s2">&quot;horizontal&quot;</span><span class="p">,</span><span class="nx">labelFormatter</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">},</span><span class="nx">borderWidth</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">borderColor</span><span class="o">:</span><span class="s2">&quot;#909090&quot;</span><span class="p">,</span><span class="nx">borderRadius</span><span class="o">:</span><span class="mi">5</span><span class="p">,</span><span class="nx">navigation</span><span class="o">:</span><span class="p">{</span><span class="nx">activeColor</span><span class="o">:</span><span class="s2">&quot;#3E576F&quot;</span><span class="p">,</span><span class="nx">inactiveColor</span><span class="o">:</span><span class="s2">&quot;#CCC&quot;</span><span class="p">},</span></div><div class='line' id='LC31'><span class="nx">shadow</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">itemStyle</span><span class="o">:</span><span class="p">{</span><span class="nx">cursor</span><span class="o">:</span><span class="s2">&quot;pointer&quot;</span><span class="p">,</span><span class="nx">color</span><span class="o">:</span><span class="s2">&quot;#3E576F&quot;</span><span class="p">,</span><span class="nx">fontSize</span><span class="o">:</span><span class="s2">&quot;12px&quot;</span><span class="p">},</span><span class="nx">itemHoverStyle</span><span class="o">:</span><span class="p">{</span><span class="nx">color</span><span class="o">:</span><span class="s2">&quot;#000&quot;</span><span class="p">},</span><span class="nx">itemHiddenStyle</span><span class="o">:</span><span class="p">{</span><span class="nx">color</span><span class="o">:</span><span class="s2">&quot;#CCC&quot;</span><span class="p">},</span><span class="nx">itemCheckboxStyle</span><span class="o">:</span><span class="p">{</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;absolute&quot;</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="s2">&quot;13px&quot;</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="s2">&quot;13px&quot;</span><span class="p">},</span><span class="nx">symbolWidth</span><span class="o">:</span><span class="mi">16</span><span class="p">,</span><span class="nx">symbolPadding</span><span class="o">:</span><span class="mi">5</span><span class="p">,</span><span class="nx">verticalAlign</span><span class="o">:</span><span class="s2">&quot;bottom&quot;</span><span class="p">,</span><span class="nx">x</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span><span class="nx">loading</span><span class="o">:</span><span class="p">{</span><span class="nx">labelStyle</span><span class="o">:</span><span class="p">{</span><span class="nx">fontWeight</span><span class="o">:</span><span class="s2">&quot;bold&quot;</span><span class="p">,</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;relative&quot;</span><span class="p">,</span><span class="nx">top</span><span class="o">:</span><span class="s2">&quot;1em&quot;</span><span class="p">},</span><span class="nx">style</span><span class="o">:</span><span class="p">{</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;absolute&quot;</span><span class="p">,</span><span class="nx">backgroundColor</span><span class="o">:</span><span class="s2">&quot;white&quot;</span><span class="p">,</span><span class="nx">opacity</span><span class="o">:</span><span class="mf">0.5</span><span class="p">,</span><span class="nx">textAlign</span><span class="o">:</span><span class="s2">&quot;center&quot;</span><span class="p">}},</span><span class="nx">tooltip</span><span class="o">:</span><span class="p">{</span><span class="nx">enabled</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">backgroundColor</span><span class="o">:</span><span class="s2">&quot;rgba(255, 255, 255, .85)&quot;</span><span class="p">,</span><span class="nx">borderWidth</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">borderRadius</span><span class="o">:</span><span class="mi">5</span><span class="p">,</span></div><div class='line' id='LC32'><span class="nx">dateTimeLabelFormats</span><span class="o">:</span><span class="p">{</span><span class="nx">millisecond</span><span class="o">:</span><span class="s2">&quot;%A, %b %e, %H:%M:%S.%L&quot;</span><span class="p">,</span><span class="nx">second</span><span class="o">:</span><span class="s2">&quot;%A, %b %e, %H:%M:%S&quot;</span><span class="p">,</span><span class="nx">minute</span><span class="o">:</span><span class="s2">&quot;%A, %b %e, %H:%M&quot;</span><span class="p">,</span><span class="nx">hour</span><span class="o">:</span><span class="s2">&quot;%A, %b %e, %H:%M&quot;</span><span class="p">,</span><span class="nx">day</span><span class="o">:</span><span class="s2">&quot;%A, %b %e, %Y&quot;</span><span class="p">,</span><span class="nx">week</span><span class="o">:</span><span class="s2">&quot;Week from %A, %b %e, %Y&quot;</span><span class="p">,</span><span class="nx">month</span><span class="o">:</span><span class="s2">&quot;%B %Y&quot;</span><span class="p">,</span><span class="nx">year</span><span class="o">:</span><span class="s2">&quot;%Y&quot;</span><span class="p">},</span><span class="nx">headerFormat</span><span class="o">:</span><span class="s1">&#39;&lt;span style=&quot;font-size: 10px&quot;&gt;{point.key}&lt;/span&gt;&lt;br/&gt;&#39;</span><span class="p">,</span><span class="nx">pointFormat</span><span class="o">:</span><span class="s1">&#39;&lt;span style=&quot;color:{series.color}&quot;&gt;{series.name}&lt;/span&gt;: &lt;b&gt;{point.y}&lt;/b&gt;&lt;br/&gt;&#39;</span><span class="p">,</span><span class="nx">shadow</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">shared</span><span class="o">:</span><span class="nx">V</span><span class="p">,</span><span class="nx">snap</span><span class="o">:</span><span class="nx">Mb</span><span class="o">?</span><span class="mi">25</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span><span class="nx">style</span><span class="o">:</span><span class="p">{</span><span class="nx">color</span><span class="o">:</span><span class="s2">&quot;#333333&quot;</span><span class="p">,</span><span class="nx">fontSize</span><span class="o">:</span><span class="s2">&quot;12px&quot;</span><span class="p">,</span><span class="nx">padding</span><span class="o">:</span><span class="s2">&quot;5px&quot;</span><span class="p">,</span><span class="nx">whiteSpace</span><span class="o">:</span><span class="s2">&quot;nowrap&quot;</span><span class="p">}},</span><span class="nx">credits</span><span class="o">:</span><span class="p">{</span><span class="nx">enabled</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span></div><div class='line' id='LC33'><span class="nx">text</span><span class="o">:</span><span class="s2">&quot;Highcharts.com&quot;</span><span class="p">,</span><span class="nx">href</span><span class="o">:</span><span class="s2">&quot;http://www.highcharts.com&quot;</span><span class="p">,</span><span class="nx">position</span><span class="o">:</span><span class="p">{</span><span class="nx">align</span><span class="o">:</span><span class="s2">&quot;right&quot;</span><span class="p">,</span><span class="nx">x</span><span class="o">:-</span><span class="mi">10</span><span class="p">,</span><span class="nx">verticalAlign</span><span class="o">:</span><span class="s2">&quot;bottom&quot;</span><span class="p">,</span><span class="nx">y</span><span class="o">:-</span><span class="mi">5</span><span class="p">},</span><span class="nx">style</span><span class="o">:</span><span class="p">{</span><span class="nx">cursor</span><span class="o">:</span><span class="s2">&quot;pointer&quot;</span><span class="p">,</span><span class="nx">color</span><span class="o">:</span><span class="s2">&quot;#909090&quot;</span><span class="p">,</span><span class="nx">fontSize</span><span class="o">:</span><span class="s2">&quot;10px&quot;</span><span class="p">}}};</span><span class="kd">var</span> <span class="nx">X</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">plotOptions</span><span class="p">,</span><span class="nx">ea</span><span class="o">=</span><span class="nx">X</span><span class="p">.</span><span class="nx">line</span><span class="p">;</span><span class="nx">Jb</span><span class="p">();</span><span class="kd">var</span> <span class="nx">qa</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="p">;(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){(</span><span class="nx">c</span><span class="o">=</span><span class="sr">/rgba\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]?(?:\.[0-9]+)?)\s*\)/</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="o">?</span><span class="nx">b</span><span class="o">=</span><span class="p">[</span><span class="nx">z</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="nx">z</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">2</span><span class="p">]),</span><span class="nx">z</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">3</span><span class="p">]),</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="mi">10</span><span class="p">)]</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="sr">/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/</span><span class="p">.</span><span class="nx">exec</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="p">[</span><span class="nx">z</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="mi">16</span><span class="p">),</span><span class="nx">z</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="mi">16</span><span class="p">),</span><span class="nx">z</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span></div><div class='line' id='LC34'><span class="mi">16</span><span class="p">),</span><span class="mi">1</span><span class="p">])})(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span><span class="p">{</span><span class="nx">get</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="o">&amp;&amp;!</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">?</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;rgb&quot;</span><span class="o">?</span><span class="s2">&quot;rgb(&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="o">:</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;a&quot;</span><span class="o">?</span><span class="nx">b</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">:</span><span class="s2">&quot;rgba(&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="o">:</span><span class="nx">a</span><span class="p">},</span><span class="nx">brighten</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">Da</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">!==</span><span class="mi">0</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="mi">3</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">+=</span><span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="o">*</span><span class="mi">255</span><span class="p">),</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="mi">0</span><span class="p">),</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&gt;</span><span class="mi">255</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="mi">255</span><span class="p">)}</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">setOpacity</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">}}};</span><span class="nx">ya</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">init</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="o">=</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;span&quot;</span><span class="o">?</span><span class="nx">T</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">C</span><span class="p">.</span><span class="nx">createElementNS</span><span class="p">(</span><span class="nx">oa</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">attrSetters</span><span class="o">=</span><span class="p">{}},</span><span class="nx">animate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">Pa</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">fb</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">complete</span><span class="o">=</span></div><div class='line' id='LC35'><span class="nx">c</span><span class="p">;</span><span class="nx">xb</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">()},</span><span class="nx">attr</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(),</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">attrSetters</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">shadows</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">ja</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="p">{},</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">ja</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">h</span><span class="o">===</span><span class="s2">&quot;circle&quot;</span><span class="o">?</span><span class="nx">c</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="s2">&quot;cx&quot;</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="s2">&quot;cy&quot;</span><span class="p">}[</span><span class="nx">c</span><span class="p">]</span><span class="o">||</span><span class="nx">c</span><span class="o">:</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;strokeWidth&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;stroke-width&quot;</span><span class="p">),</span><span class="nx">p</span><span class="o">=</span><span class="nx">w</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">||</span><span class="k">this</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">!==</span><span class="s2">&quot;d&quot;</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">!==</span><span class="s2">&quot;visibility&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="nb">parseFloat</span><span class="p">(</span><span class="nx">p</span><span class="p">));</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">e</span><span class="o">!==!</span><span class="mi">1</span><span class="p">){</span><span class="nx">e</span><span class="o">!==</span><span class="nx">A</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;d&quot;</span><span class="p">)</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">join</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)),</span><span class="sr">/(NaN| {2}|^$)/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC36'><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;M 0 0&quot;</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;x&quot;</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="o">===</span><span class="s2">&quot;text&quot;</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">w</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="s2">&quot;x&quot;</span><span class="p">)</span><span class="o">===</span><span class="nx">w</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="s2">&quot;x&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="s2">&quot;x&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">rotation</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="s2">&quot;transform&quot;</span><span class="p">,</span><span class="s2">&quot;rotate(&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">rotation</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="o">||</span><span class="nx">w</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="s2">&quot;y&quot;</span><span class="p">))</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;fill&quot;</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">color</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">===</span><span class="s2">&quot;circle&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;x&quot;</span><span class="o">||</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;y&quot;</span><span class="p">))</span><span class="nx">c</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="s2">&quot;cx&quot;</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="s2">&quot;cy&quot;</span><span class="p">}[</span><span class="nx">c</span><span class="p">]</span><span class="o">||</span><span class="nx">c</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">===</span><span class="s2">&quot;rect&quot;</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;r&quot;</span><span class="p">)</span><span class="nx">w</span><span class="p">(</span><span class="nx">g</span><span class="p">,{</span><span class="nx">rx</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">ry</span><span class="o">:</span><span class="nx">d</span><span class="p">}),</span><span class="nx">j</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;translateX&quot;</span><span class="o">||</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;translateY&quot;</span><span class="o">||</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;rotation&quot;</span><span class="o">||</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;verticalAlign&quot;</span><span class="p">)</span><span class="nx">j</span><span class="o">=</span><span class="nx">q</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;stroke&quot;</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">color</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;dashstyle&quot;</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span></div><div class='line' id='LC37'><span class="s2">&quot;stroke-dasharray&quot;</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(),</span><span class="nx">d</span><span class="o">===</span><span class="s2">&quot;solid&quot;</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">Q</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;shortdashdotdot&quot;</span><span class="p">,</span><span class="s2">&quot;3,1,1,1,1,1,&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;shortdashdot&quot;</span><span class="p">,</span><span class="s2">&quot;3,1,1,1&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;shortdot&quot;</span><span class="p">,</span><span class="s2">&quot;1,1,&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;shortdash&quot;</span><span class="p">,</span><span class="s2">&quot;3,1,&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;longdash&quot;</span><span class="p">,</span><span class="s2">&quot;8,3,&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/dot/g</span><span class="p">,</span><span class="s2">&quot;1,3,&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;dash&quot;</span><span class="p">,</span><span class="s2">&quot;4,3,&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/,$/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">--</span><span class="p">;)</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">z</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">])</span><span class="o">*</span><span class="nx">a</span><span class="p">[</span><span class="s2">&quot;stroke-width&quot;</span><span class="p">];</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">)}}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;isTracker&quot;</span><span class="p">)</span><span class="k">this</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;width&quot;</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">z</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;align&quot;</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;text-anchor&quot;</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="p">{</span><span class="nx">left</span><span class="o">:</span><span class="s2">&quot;start&quot;</span><span class="p">,</span><span class="nx">center</span><span class="o">:</span><span class="s2">&quot;middle&quot;</span><span class="p">,</span><span class="nx">right</span><span class="o">:</span><span class="s2">&quot;end&quot;</span><span class="p">}[</span><span class="nx">d</span><span class="p">];</span></div><div class='line' id='LC38'><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;title&quot;</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;title&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span><span class="nx">e</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">createElementNS</span><span class="p">(</span><span class="nx">oa</span><span class="p">,</span><span class="s2">&quot;title&quot;</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">e</span><span class="p">)),</span><span class="nx">e</span><span class="p">.</span><span class="nx">textContent</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;strokeWidth&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;stroke-width&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;stroke-width&quot;</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">===</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">bb</span><span class="o">||</span><span class="nx">i</span><span class="p">.</span><span class="nx">forExport</span><span class="p">))</span><span class="nx">d</span><span class="o">=</span><span class="mf">1.0</span><span class="nx">E</span><span class="o">-</span><span class="mi">6</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">symbolName</span><span class="o">&amp;&amp;</span><span class="sr">/^(x|y|width|height|r|start|end|innerR|anchorX|anchorY)/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">m</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">symbolAttr</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">m</span><span class="o">=!</span><span class="mi">0</span><span class="p">),</span><span class="nx">j</span><span class="o">=!</span><span class="mi">0</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="sr">/^(width|height|visibility|x|y|d|transform)$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">--</span><span class="p">;)</span><span class="nx">w</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">c</span><span class="p">,</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;height&quot;</span><span class="o">?</span><span class="nx">s</span><span class="p">(</span><span class="nx">d</span><span class="o">-</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">cutHeight</span><span class="o">||</span><span class="mi">0</span><span class="p">),</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">);</span><span class="k">if</span><span class="p">((</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;width&quot;</span><span class="o">||</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;height&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC39'><span class="nx">h</span><span class="o">===</span><span class="s2">&quot;rect&quot;</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">updateTransform</span><span class="p">();</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;text&quot;</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">textStr</span><span class="o">&amp;&amp;</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">bBox</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">textStr</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">added</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">buildText</span><span class="p">(</span><span class="k">this</span><span class="p">))</span><span class="o">:</span><span class="nx">j</span><span class="o">||</span><span class="nx">w</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)}</span><span class="k">return</span> <span class="nx">p</span><span class="p">},</span><span class="nx">symbolAttr</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">o</span><span class="p">(</span><span class="s2">&quot;x,y,r,start,end,width,height,innerR,anchorX,anchorY&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">])});</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">d</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">symbols</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">symbolName</span><span class="p">](</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">b</span><span class="p">)})},</span><span class="nx">clip</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;clip-path&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">?</span><span class="s2">&quot;url(&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">url</span><span class="o">+</span><span class="s2">&quot;#&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="o">:</span><span class="nx">Q</span><span class="p">)},</span><span class="nx">crisp</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span></div><div class='line' id='LC40'><span class="p">{},</span><span class="nx">h</span><span class="o">=</span><span class="p">{},</span><span class="nx">i</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">strokeWidth</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">attr</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;stroke-width&quot;</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">=</span><span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">%</span><span class="mi">2</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span><span class="nx">h</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">U</span><span class="p">(</span><span class="nx">b</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="nx">i</span><span class="p">;</span><span class="nx">h</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">U</span><span class="p">(</span><span class="nx">c</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="nx">i</span><span class="p">;</span><span class="nx">h</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">U</span><span class="p">((</span><span class="nx">d</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">i</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">U</span><span class="p">((</span><span class="nx">e</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">i</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">strokeWidth</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span> <span class="k">in</span> <span class="nx">h</span><span class="p">)</span><span class="k">this</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">!==</span><span class="nx">h</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">f</span><span class="p">]);</span><span class="k">return</span> <span class="nx">g</span><span class="p">},</span><span class="nx">css</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()</span><span class="o">===</span><span class="s2">&quot;text&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">()};</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">color</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">fill</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">color</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">styles</span><span class="o">=</span><span class="nx">a</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">styles</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">V</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="k">delete</span> <span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">Ea</span><span class="o">&amp;&amp;!</span><span class="nx">ca</span><span class="p">)</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="k">delete</span> <span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span></div><div class='line' id='LC41'><span class="nx">I</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">d</span><span class="o">+=</span><span class="nx">c</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/([A-Z])/g</span><span class="p">,</span><span class="nx">e</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;:&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">+</span><span class="s2">&quot;;&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">style</span><span class="o">:</span><span class="nx">d</span><span class="p">})}</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">added</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">buildText</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">on</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">Ba</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">===</span><span class="s2">&quot;click&quot;</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">ontouchstart</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">b</span><span class="p">()};</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">[</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">setRadialReference</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">radialReference</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">translate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">translateX</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">translateY</span><span class="o">:</span><span class="nx">b</span><span class="p">})},</span><span class="nx">invert</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">inverted</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">updateTransform</span><span class="p">();</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span></div><div class='line' id='LC42'><span class="nx">htmlCss</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">tagName</span><span class="o">===</span><span class="s2">&quot;SPAN&quot;</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="p">)</span><span class="k">delete</span> <span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">textWidth</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">updateTransform</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">styles</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">styles</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">I</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">htmlGetBBox</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">bBox</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">===</span><span class="s2">&quot;text&quot;</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="s2">&quot;absolute&quot;</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">bBox</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetLeft</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetTop</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="p">}}</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">htmlUpdateTransform</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">added</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">translateX</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span></div><div class='line' id='LC43'><span class="k">this</span><span class="p">.</span><span class="nx">translateY</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">textAlign</span><span class="o">||</span><span class="s2">&quot;left&quot;</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="p">{</span><span class="nx">left</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">center</span><span class="o">:</span><span class="mf">0.5</span><span class="p">,</span><span class="nx">right</span><span class="o">:</span><span class="mi">1</span><span class="p">}[</span><span class="nx">g</span><span class="p">],</span><span class="nx">i</span><span class="o">=</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="o">!==</span><span class="s2">&quot;left&quot;</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">shadows</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">||</span><span class="nx">d</span><span class="p">)</span><span class="nx">I</span><span class="p">(</span><span class="nx">b</span><span class="p">,{</span><span class="nx">marginLeft</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">marginTop</span><span class="o">:</span><span class="nx">d</span><span class="p">}),</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">I</span><span class="p">(</span><span class="nx">a</span><span class="p">,{</span><span class="nx">marginLeft</span><span class="o">:</span><span class="nx">c</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">marginTop</span><span class="o">:</span><span class="nx">d</span><span class="o">+</span><span class="mi">1</span><span class="p">})});</span><span class="k">this</span><span class="p">.</span><span class="nx">inverted</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">invertChild</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">)});</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">tagName</span><span class="o">===</span><span class="s2">&quot;SPAN&quot;</span><span class="p">){</span><span class="kd">var</span> <span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">rotation</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">y</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="nx">z</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">textWidth</span><span class="p">);</span><span class="kd">var</span> <span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">xCorr</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">H</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">yCorr</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">ra</span><span class="o">=</span><span class="p">[</span><span class="nx">j</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">innerHTML</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">textWidth</span><span class="p">].</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">);</span><span class="nx">k</span><span class="o">=</span><span class="p">{};</span><span class="k">if</span><span class="p">(</span><span class="nx">ra</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">cTT</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">(</span><span class="nx">j</span><span class="p">))</span><span class="nx">a</span><span class="p">.</span><span class="nx">isSVG</span><span class="o">?</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="nx">Ea</span><span class="o">?</span></div><div class='line' id='LC44'><span class="s2">&quot;-ms-transform&quot;</span><span class="o">:</span><span class="nx">bb</span><span class="o">?</span><span class="s2">&quot;-webkit-transform&quot;</span><span class="o">:</span><span class="nx">cb</span><span class="o">?</span><span class="s2">&quot;MozTransform&quot;</span><span class="o">:</span><span class="nx">Lb</span><span class="o">?</span><span class="s2">&quot;-o-transform&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">k</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">transform</span><span class="o">=</span><span class="s2">&quot;rotate(&quot;</span><span class="o">+</span><span class="nx">j</span><span class="o">+</span><span class="s2">&quot;deg)&quot;</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">q</span><span class="o">=</span><span class="nx">j</span><span class="o">*</span><span class="nx">ab</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">W</span><span class="p">(</span><span class="nx">q</span><span class="p">),</span><span class="nx">q</span><span class="o">=</span><span class="nx">Z</span><span class="p">(</span><span class="nx">q</span><span class="p">),</span><span class="nx">k</span><span class="p">.</span><span class="nx">filter</span><span class="o">=</span><span class="nx">j</span><span class="o">?</span><span class="p">[</span><span class="s2">&quot;progid:DXImageTransform.Microsoft.Matrix(M11=&quot;</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="s2">&quot;, M12=&quot;</span><span class="p">,</span><span class="o">-</span><span class="nx">q</span><span class="p">,</span><span class="s2">&quot;, M21=&quot;</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="s2">&quot;, M22=&quot;</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="s2">&quot;, sizingMethod=&#39;auto expand&#39;)&quot;</span><span class="p">].</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">Q</span><span class="p">),</span><span class="nx">I</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">k</span><span class="p">);</span><span class="nx">k</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">elemWidth</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="p">);</span><span class="nx">l</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">elemHeight</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="o">&gt;</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="sr">/[ \-]/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">textContent</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">innerText</span><span class="p">))</span><span class="nx">I</span><span class="p">(</span><span class="nx">b</span><span class="p">,{</span><span class="nx">width</span><span class="o">:</span><span class="nx">m</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">display</span><span class="o">:</span><span class="s2">&quot;block&quot;</span><span class="p">,</span><span class="nx">whiteSpace</span><span class="o">:</span><span class="s2">&quot;normal&quot;</span><span class="p">}),</span><span class="nx">k</span><span class="o">=</span><span class="nx">m</span><span class="p">;</span><span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">fontMetrics</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">fontSize</span><span class="p">).</span><span class="nx">b</span><span class="p">;</span><span class="nx">t</span><span class="o">=</span></div><div class='line' id='LC45'><span class="nx">p</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">&amp;&amp;-</span><span class="nx">k</span><span class="p">;</span><span class="nx">H</span><span class="o">=</span><span class="nx">q</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">&amp;&amp;-</span><span class="nx">l</span><span class="p">;</span><span class="nx">y</span><span class="o">=</span><span class="nx">p</span><span class="o">*</span><span class="nx">q</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">t</span><span class="o">+=</span><span class="nx">q</span><span class="o">*</span><span class="nx">m</span><span class="o">*</span><span class="p">(</span><span class="nx">y</span><span class="o">?</span><span class="mi">1</span><span class="o">-</span><span class="nx">h</span><span class="o">:</span><span class="nx">h</span><span class="p">);</span><span class="nx">H</span><span class="o">-=</span><span class="nx">p</span><span class="o">*</span><span class="nx">m</span><span class="o">*</span><span class="p">(</span><span class="nx">j</span><span class="o">?</span><span class="nx">y</span><span class="o">?</span><span class="nx">h</span><span class="o">:</span><span class="mi">1</span><span class="o">-</span><span class="nx">h</span><span class="o">:</span><span class="mi">1</span><span class="p">);</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="o">-=</span><span class="nx">k</span><span class="o">*</span><span class="nx">h</span><span class="o">*</span><span class="p">(</span><span class="nx">p</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">),</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">H</span><span class="o">-=</span><span class="nx">l</span><span class="o">*</span><span class="nx">h</span><span class="o">*</span><span class="p">(</span><span class="nx">q</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">)),</span><span class="nx">I</span><span class="p">(</span><span class="nx">b</span><span class="p">,{</span><span class="nx">textAlign</span><span class="o">:</span><span class="nx">g</span><span class="p">}));</span><span class="k">this</span><span class="p">.</span><span class="nx">xCorr</span><span class="o">=</span><span class="nx">t</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">yCorr</span><span class="o">=</span><span class="nx">H</span><span class="p">}</span><span class="nx">I</span><span class="p">(</span><span class="nx">b</span><span class="p">,{</span><span class="nx">left</span><span class="o">:</span><span class="nx">e</span><span class="o">+</span><span class="nx">t</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">top</span><span class="o">:</span><span class="nx">f</span><span class="o">+</span><span class="nx">H</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">});</span><span class="k">if</span><span class="p">(</span><span class="nx">bb</span><span class="p">)</span><span class="nx">l</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">cTT</span><span class="o">=</span><span class="nx">ra</span><span class="p">}}</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">alignOnAdd</span><span class="o">=!</span><span class="mi">0</span><span class="p">},</span><span class="nx">updateTransform</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">translateX</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">translateY</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">inverted</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">rotation</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">[];</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">+=</span><span class="k">this</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;width&quot;</span><span class="p">),</span><span class="nx">b</span><span class="o">+=</span><span class="k">this</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;height&quot;</span><span class="p">));(</span><span class="nx">a</span><span class="o">||</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;translate(&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">);</span><span class="nx">c</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;rotate(90) scale(-1,1)&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;rotate(&quot;</span><span class="o">+</span></div><div class='line' id='LC46'><span class="nx">d</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="s2">&quot;transform&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">))},</span><span class="nx">toFront</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">align</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">alignOptions</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">alignByTranslate</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">alignedObjects</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">alignOptions</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">alignByTranslate</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">align</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">verticalAlign</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="o">||</span><span class="mi">0</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="o">||</span><span class="mi">0</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="p">{};</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">===</span><span class="s2">&quot;right&quot;</span><span class="o">||</span><span class="nx">d</span><span class="o">===</span><span class="s2">&quot;center&quot;</span><span class="p">)</span><span class="nx">f</span><span class="o">+=</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="o">||</span><span class="mi">0</span><span class="p">))</span><span class="o">/</span><span class="p">{</span><span class="nx">right</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">center</span><span class="o">:</span><span class="mi">2</span><span class="p">}[</span><span class="nx">d</span><span class="p">];</span></div><div class='line' id='LC47'><span class="nx">h</span><span class="p">[</span><span class="nx">b</span><span class="o">?</span><span class="s2">&quot;translateX&quot;</span><span class="o">:</span><span class="s2">&quot;x&quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">u</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">===</span><span class="s2">&quot;bottom&quot;</span><span class="o">||</span><span class="nx">e</span><span class="o">===</span><span class="s2">&quot;middle&quot;</span><span class="p">)</span><span class="nx">g</span><span class="o">+=</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">height</span><span class="o">-</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">||</span><span class="mi">0</span><span class="p">))</span><span class="o">/</span><span class="p">({</span><span class="nx">bottom</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">middle</span><span class="o">:</span><span class="mi">2</span><span class="p">}[</span><span class="nx">e</span><span class="p">]</span><span class="o">||</span><span class="mi">1</span><span class="p">);</span><span class="nx">h</span><span class="p">[</span><span class="nx">b</span><span class="o">?</span><span class="s2">&quot;translateY&quot;</span><span class="o">:</span><span class="s2">&quot;y&quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">u</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="k">this</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">placed</span><span class="o">?</span><span class="s2">&quot;animate&quot;</span><span class="o">:</span><span class="s2">&quot;attr&quot;</span><span class="p">](</span><span class="nx">h</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">placed</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">alignAttr</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">getBBox</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">bBox</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">rotation</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">styles</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="o">*</span><span class="nx">ab</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">namespaceURI</span><span class="o">===</span><span class="nx">oa</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">forExport</span><span class="p">){</span><span class="k">try</span><span class="p">{</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">getBBox</span><span class="o">?</span><span class="nx">x</span><span class="p">({},</span><span class="nx">c</span><span class="p">.</span><span class="nx">getBBox</span><span class="p">())</span><span class="o">:</span><span class="p">{</span><span class="nx">width</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="p">}}</span><span class="k">catch</span><span class="p">(</span><span class="nx">g</span><span class="p">){}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="o">&lt;</span><span class="mi">0</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">width</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="mi">0</span><span class="p">}}</span><span class="k">else</span> <span class="nx">a</span><span class="o">=</span></div><div class='line' id='LC48'><span class="k">this</span><span class="p">.</span><span class="nx">htmlGetBBox</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">isSVG</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">Ea</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">===</span><span class="s2">&quot;11px&quot;</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">===</span><span class="mf">22.700000762939453</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">c</span><span class="o">=</span><span class="mi">14</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="nx">c</span><span class="o">*</span><span class="nx">Z</span><span class="p">(</span><span class="nx">f</span><span class="p">))</span><span class="o">+</span><span class="nx">M</span><span class="p">(</span><span class="nx">b</span><span class="o">*</span><span class="nx">W</span><span class="p">(</span><span class="nx">f</span><span class="p">)),</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="nx">c</span><span class="o">*</span><span class="nx">W</span><span class="p">(</span><span class="nx">f</span><span class="p">))</span><span class="o">+</span><span class="nx">M</span><span class="p">(</span><span class="nx">b</span><span class="o">*</span><span class="nx">Z</span><span class="p">(</span><span class="nx">f</span><span class="p">))}</span><span class="k">this</span><span class="p">.</span><span class="nx">bBox</span><span class="o">=</span><span class="nx">a</span><span class="p">}</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">show</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">visibility</span><span class="o">:</span><span class="s2">&quot;visible&quot;</span><span class="p">})},</span><span class="nx">hide</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">visibility</span><span class="o">:</span><span class="s2">&quot;hidden&quot;</span><span class="p">})},</span><span class="nx">add</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">element</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">box</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">w</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="s2">&quot;zIndex&quot;</span><span class="p">),</span><span class="nx">h</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">parentGroup</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">parentInverted</span><span class="o">=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">inverted</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">textStr</span><span class="o">!==</span></div><div class='line' id='LC49'><span class="k">void</span> <span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">buildText</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">handleZ</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">z</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">handleZ</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">b</span><span class="o">=</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;zIndex&quot;</span><span class="p">),</span><span class="nx">a</span><span class="o">!==</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">z</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&gt;</span><span class="nx">g</span><span class="o">||!</span><span class="nx">r</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">(</span><span class="nx">b</span><span class="p">))){</span><span class="nx">d</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">h</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="nx">h</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">added</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;add&quot;</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">safeRemoveChild</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">destroy</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">element</span><span class="o">||</span><span class="p">{},</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">shadows</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">onclick</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">onmouseout</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">onmouseover</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">onmousemove</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">fb</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">clipPath</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">clipPath</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">clipPath</span><span class="p">.</span><span class="nx">destroy</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">stops</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">stops</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">stops</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span></div><div class='line' id='LC50'><span class="nx">a</span><span class="p">.</span><span class="nx">stops</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">destroy</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">stops</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="nx">a</span><span class="p">.</span><span class="nx">safeRemoveChild</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">safeRemoveChild</span><span class="p">(</span><span class="nx">b</span><span class="p">)});</span><span class="nx">ta</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">alignedObjects</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">delete</span> <span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">return</span> <span class="kc">null</span><span class="p">},</span><span class="nx">empty</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">--</span><span class="p">;)</span><span class="nx">a</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">])},</span><span class="nx">shadow</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">i</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="mi">3</span><span class="p">);</span><span class="nx">j</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">opacity</span><span class="o">||</span><span class="mf">0.15</span><span class="p">)</span><span class="o">/</span><span class="nx">i</span><span class="p">;</span><span class="nx">k</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">parentInverted</span><span class="o">?</span><span class="s2">&quot;(-1,-1)&quot;</span><span class="o">:</span><span class="s2">&quot;(&quot;</span><span class="o">+</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetX</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;, &quot;</span><span class="o">+</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetY</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;=</span><span class="nx">i</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="nx">h</span><span class="o">=</span><span class="nx">i</span><span class="o">*</span><span class="mi">2</span><span class="o">+</span><span class="mi">1</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">e</span><span class="p">;</span><span class="nx">w</span><span class="p">(</span><span class="nx">f</span><span class="p">,{</span><span class="nx">isShadow</span><span class="o">:</span><span class="s2">&quot;true&quot;</span><span class="p">,</span></div><div class='line' id='LC51'><span class="nx">stroke</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">color</span><span class="o">||</span><span class="s2">&quot;black&quot;</span><span class="p">,</span><span class="s2">&quot;stroke-opacity&quot;</span><span class="o">:</span><span class="nx">j</span><span class="o">*</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;stroke-width&quot;</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">transform</span><span class="o">:</span><span class="s2">&quot;translate&quot;</span><span class="o">+</span><span class="nx">k</span><span class="p">,</span><span class="nx">fill</span><span class="o">:</span><span class="nx">Q</span><span class="p">});</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="nx">w</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="s2">&quot;height&quot;</span><span class="p">,</span><span class="nx">s</span><span class="p">(</span><span class="nx">w</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="s2">&quot;height&quot;</span><span class="p">)</span><span class="o">-</span><span class="nx">h</span><span class="p">,</span><span class="mi">0</span><span class="p">)),</span><span class="nx">f</span><span class="p">.</span><span class="nx">cutHeight</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="nx">b</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="p">)}</span><span class="k">this</span><span class="p">.</span><span class="nx">shadows</span><span class="o">=</span><span class="nx">d</span><span class="p">}</span><span class="k">return</span> <span class="k">this</span><span class="p">}};</span><span class="kd">var</span> <span class="nx">sa</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">init</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)};</span><span class="nx">sa</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">Element</span><span class="o">:</span><span class="nx">ya</span><span class="p">,</span><span class="nx">init</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">location</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;svg&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">xmlns</span><span class="o">:</span><span class="nx">oa</span><span class="p">,</span><span class="nx">version</span><span class="o">:</span><span class="s2">&quot;1.1&quot;</span><span class="p">});</span><span class="nx">a</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">element</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">isSVG</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">box</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">element</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">boxWrapper</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">alignedObjects</span><span class="o">=</span></div><div class='line' id='LC52'><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">url</span><span class="o">=</span><span class="p">(</span><span class="nx">cb</span><span class="o">||</span><span class="nx">bb</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">C</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;base&quot;</span><span class="p">).</span><span class="nx">length</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">href</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/#.*?$/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/([\(&#39;\)])/g</span><span class="p">,</span><span class="s2">&quot;\\$1&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/ /g</span><span class="p">,</span><span class="s2">&quot;%20&quot;</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">defs</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;defs&quot;</span><span class="p">).</span><span class="nx">add</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">forExport</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">gradients</span><span class="o">=</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">setSize</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="kd">var</span> <span class="nx">g</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">cb</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">getBoundingClientRect</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">subPixelFix</span><span class="o">=</span><span class="nx">b</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">I</span><span class="p">(</span><span class="nx">a</span><span class="p">,{</span><span class="nx">left</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">top</span><span class="o">:</span><span class="mi">0</span><span class="p">});</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getBoundingClientRect</span><span class="p">();</span><span class="nx">I</span><span class="p">(</span><span class="nx">a</span><span class="p">,{</span><span class="nx">left</span><span class="o">:</span><span class="nx">za</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">left</span><span class="p">)</span><span class="o">-</span><span class="nx">g</span><span class="p">.</span><span class="nx">left</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">top</span><span class="o">:</span><span class="nx">za</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">top</span><span class="p">)</span><span class="o">-</span><span class="nx">g</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">})},</span><span class="nx">b</span><span class="p">(),</span><span class="nx">J</span><span class="p">(</span><span class="nx">L</span><span class="p">,</span><span class="s2">&quot;resize&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">)},</span><span class="nx">isHidden</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">boxWrapper</span><span class="p">.</span><span class="nx">getBBox</span><span class="p">().</span><span class="nx">width</span><span class="p">},</span><span class="nx">destroy</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span></div><div class='line' id='LC53'><span class="k">this</span><span class="p">.</span><span class="nx">defs</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">box</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">boxWrapper</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">boxWrapper</span><span class="p">.</span><span class="nx">destroy</span><span class="p">();</span><span class="nx">Ga</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">gradients</span><span class="o">||</span><span class="p">{});</span><span class="k">this</span><span class="p">.</span><span class="nx">gradients</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">defs</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">destroy</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">subPixelFix</span><span class="o">&amp;&amp;</span><span class="nx">R</span><span class="p">(</span><span class="nx">L</span><span class="p">,</span><span class="s2">&quot;resize&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">subPixelFix</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">alignedObjects</span><span class="o">=</span><span class="kc">null</span><span class="p">},</span><span class="nx">createElement</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="k">this</span><span class="p">.</span><span class="nx">Element</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">draw</span><span class="o">:</span><span class="kd">function</span><span class="p">(){},</span><span class="nx">buildText</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">textStr</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">).</span><span class="nx">toString</span><span class="p">().</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&lt;(b|strong)&gt;/g</span><span class="p">,</span><span class="s1">&#39;&lt;span style=&quot;font-weight:bold&quot;&gt;&#39;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&lt;(i|em)&gt;/g</span><span class="p">,</span><span class="s1">&#39;&lt;span style=&quot;font-style:italic&quot;&gt;&#39;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&lt;a/g</span><span class="p">,</span></div><div class='line' id='LC54'><span class="s2">&quot;&lt;span&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&lt;\/(b|strong|i|em|a)&gt;/g</span><span class="p">,</span><span class="s2">&quot;&lt;/span&gt;&quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="sr">/&lt;br.*?&gt;/g</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="sr">/style=&quot;([^&quot;]+)&quot;/</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="sr">/href=&quot;([^&quot;]+)&quot;/</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">w</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;x&quot;</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">styles</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">width</span><span class="o">&amp;&amp;</span><span class="nx">z</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">width</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">lineHeight</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="p">[];</span><span class="nx">h</span><span class="o">--</span><span class="p">;)</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">h</span><span class="p">]);</span><span class="nx">i</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">added</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">box</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">c</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;&quot;</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">pop</span><span class="p">();</span><span class="nx">o</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&lt;span/g</span><span class="p">,</span><span class="s2">&quot;|||&lt;span&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&lt;\/span&gt;/g</span><span class="p">,</span><span class="s2">&quot;&lt;/span&gt;|||&quot;</span><span class="p">);</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;|||&quot;</span><span class="p">);</span><span class="nx">o</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">!==</span><span class="s2">&quot;&quot;</span><span class="o">||</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">1</span><span class="p">){</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="p">{},</span><span class="nx">n</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">createElementNS</span><span class="p">(</span><span class="nx">oa</span><span class="p">,</span><span class="s2">&quot;tspan&quot;</span><span class="p">),</span><span class="nx">o</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC55'><span class="p">(</span><span class="nx">o</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">e</span><span class="p">)[</span><span class="mi">1</span><span class="p">].</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/(;| |^)color([ :])/</span><span class="p">,</span><span class="s2">&quot;$1fill$2&quot;</span><span class="p">),</span><span class="nx">w</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="s2">&quot;style&quot;</span><span class="p">,</span><span class="nx">o</span><span class="p">));</span><span class="nx">f</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">w</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="s2">&quot;onclick&quot;</span><span class="p">,</span><span class="s1">&#39;location.href=&quot;&#39;</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">f</span><span class="p">)[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">),</span><span class="nx">I</span><span class="p">(</span><span class="nx">n</span><span class="p">,{</span><span class="nx">cursor</span><span class="o">:</span><span class="s2">&quot;pointer&quot;</span><span class="p">}));</span><span class="nx">c</span><span class="o">=</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&lt;(.|\n)*?&gt;/g</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot; &quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&amp;lt;/g</span><span class="p">,</span><span class="s2">&quot;&lt;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/&amp;gt;/g</span><span class="p">,</span><span class="s2">&quot;&gt;&quot;</span><span class="p">);</span><span class="nx">n</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">C</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="nx">c</span><span class="p">));</span><span class="nx">y</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">dx</span><span class="o">=</span><span class="mi">3</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">y</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="o">!</span><span class="nx">ca</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">forExport</span><span class="o">&amp;&amp;</span><span class="nx">I</span><span class="p">(</span><span class="nx">n</span><span class="p">,{</span><span class="nx">display</span><span class="o">:</span><span class="s2">&quot;block&quot;</span><span class="p">});</span><span class="nx">t</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="o">&amp;&amp;</span><span class="nx">z</span><span class="p">(</span><span class="nx">L</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="kc">null</span><span class="p">).</span><span class="nx">getPropertyValue</span><span class="p">(</span><span class="s2">&quot;line-height&quot;</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">t</span><span class="o">||</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">t</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">r</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="nx">j</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="p">))</span><span class="nx">l</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">getBBox</span><span class="o">?</span></div><div class='line' id='LC56'><span class="nx">b</span><span class="p">.</span><span class="nx">getBBox</span><span class="p">().</span><span class="nx">height</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">fontMetrics</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">fontSize</span><span class="p">).</span><span class="nx">h</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">u</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">-</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="nx">d</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">||</span><span class="mi">0</span><span class="p">))</span><span class="o">||</span><span class="mi">18</span><span class="p">;</span><span class="nx">t</span><span class="o">=</span><span class="nx">r</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="s2">&quot;dy&quot;</span><span class="p">,</span><span class="nx">t</span><span class="p">)}</span><span class="nx">k</span><span class="o">=</span><span class="nx">n</span><span class="p">}</span><span class="nx">w</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="nx">m</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">n</span><span class="p">);</span><span class="nx">y</span><span class="o">++</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/([^\^])-/g</span><span class="p">,</span><span class="s2">&quot;$1- &quot;</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">E</span><span class="o">=</span><span class="p">[];</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="nx">E</span><span class="p">.</span><span class="nx">length</span><span class="p">;)</span><span class="k">delete</span> <span class="nx">a</span><span class="p">.</span><span class="nx">bBox</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getBBox</span><span class="p">().</span><span class="nx">width</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">r</span><span class="o">&gt;</span><span class="nx">i</span><span class="p">,</span><span class="o">!</span><span class="nx">m</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">1</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">E</span><span class="p">,</span><span class="nx">E</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">createElementNS</span><span class="p">(</span><span class="nx">oa</span><span class="p">,</span><span class="s2">&quot;tspan&quot;</span><span class="p">),</span><span class="nx">w</span><span class="p">(</span><span class="nx">n</span><span class="p">,{</span><span class="nx">dy</span><span class="o">:</span><span class="nx">j</span><span class="o">||</span><span class="mi">16</span><span class="p">,</span><span class="nx">x</span><span class="o">:</span><span class="nx">g</span><span class="p">}),</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span><span class="s2">&quot;style&quot;</span><span class="p">,</span><span class="nx">o</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">n</span><span class="p">),</span><span class="nx">r</span><span class="o">&gt;</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">r</span><span class="p">)))</span><span class="o">:</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">),</span><span class="nx">E</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">pop</span><span class="p">())),</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">C</span><span class="p">.</span><span class="nx">createTextNode</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/- /g</span><span class="p">,</span></div><div class='line' id='LC57'><span class="s2">&quot;-&quot;</span><span class="p">)))}})})},</span><span class="nx">button</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">label</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">x1</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">y1</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">x2</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">y2</span><span class="o">:</span><span class="mi">1</span><span class="p">},</span><span class="nx">e</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="nx">ia</span><span class="p">(</span><span class="nx">wb</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="s2">&quot;stroke&quot;</span><span class="p">,</span><span class="s2">&quot;#999&quot;</span><span class="p">,</span><span class="s2">&quot;fill&quot;</span><span class="p">,</span><span class="nx">ia</span><span class="p">(</span><span class="s2">&quot;linearGradient&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;stops&quot;</span><span class="p">,[[</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;#FFF&quot;</span><span class="p">],[</span><span class="mi">1</span><span class="p">,</span><span class="s2">&quot;#DDD&quot;</span><span class="p">]]),</span><span class="s2">&quot;r&quot;</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="s2">&quot;padding&quot;</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="s2">&quot;style&quot;</span><span class="p">,</span><span class="nx">ia</span><span class="p">(</span><span class="s2">&quot;color&quot;</span><span class="p">,</span><span class="s2">&quot;black&quot;</span><span class="p">)),</span><span class="nx">e</span><span class="p">);</span><span class="nx">l</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">style</span><span class="p">;</span><span class="k">delete</span> <span class="nx">e</span><span class="p">.</span><span class="nx">style</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">ia</span><span class="p">(</span><span class="s2">&quot;stroke&quot;</span><span class="p">,</span><span class="s2">&quot;#68A&quot;</span><span class="p">,</span><span class="s2">&quot;fill&quot;</span><span class="p">,</span><span class="nx">ia</span><span class="p">(</span><span class="s2">&quot;linearGradient&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;stops&quot;</span><span class="p">,[[</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;#FFF&quot;</span><span class="p">],[</span><span class="mi">1</span><span class="p">,</span><span class="s2">&quot;#ACF&quot;</span><span class="p">]])),</span><span class="nx">f</span><span class="p">);</span><span class="nx">m</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">style</span><span class="p">;</span><span class="k">delete</span> <span class="nx">f</span><span class="p">.</span><span class="nx">style</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">ia</span><span class="p">(</span><span class="s2">&quot;stroke&quot;</span><span class="p">,</span><span class="s2">&quot;#68A&quot;</span><span class="p">,</span><span class="s2">&quot;fill&quot;</span><span class="p">,</span><span class="nx">ia</span><span class="p">(</span><span class="s2">&quot;linearGradient&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;stops&quot;</span><span class="p">,[[</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;#9BD&quot;</span><span class="p">],[</span><span class="mi">1</span><span class="p">,</span><span class="s2">&quot;#CDF&quot;</span><span class="p">]])),</span><span class="nx">g</span><span class="p">);</span><span class="nx">q</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">style</span><span class="p">;</span><span class="k">delete</span> <span class="nx">g</span><span class="p">.</span><span class="nx">style</span><span class="p">;</span></div><div class='line' id='LC58'><span class="nx">J</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="s2">&quot;mouseenter&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">h</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">f</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="nx">m</span><span class="p">)});</span><span class="nx">J</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="s2">&quot;mouseleave&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">j</span><span class="o">=</span><span class="p">[</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">][</span><span class="nx">i</span><span class="p">];</span><span class="nx">k</span><span class="o">=</span><span class="p">[</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">q</span><span class="p">][</span><span class="nx">i</span><span class="p">];</span><span class="nx">h</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">j</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="nx">k</span><span class="p">)});</span><span class="nx">h</span><span class="p">.</span><span class="nx">setState</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){(</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="o">===</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">g</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="nx">q</span><span class="p">)</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">e</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="nx">l</span><span class="p">)};</span><span class="k">return</span> <span class="nx">h</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">h</span><span class="p">)}).</span><span class="nx">attr</span><span class="p">(</span><span class="nx">e</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="nx">x</span><span class="p">({</span><span class="nx">cursor</span><span class="o">:</span><span class="s2">&quot;default&quot;</span><span class="p">},</span><span class="nx">l</span><span class="p">))},</span><span class="nx">crispLine</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">===</span><span class="nx">a</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">4</span><span class="p">]</span><span class="o">=</span><span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">-</span><span class="nx">b</span><span class="o">%</span><span class="mi">2</span><span class="o">/</span><span class="mi">2</span><span class="p">);</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">===</span><span class="nx">a</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">5</span><span class="p">]</span><span class="o">=</span><span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span><span class="o">+</span><span class="nx">b</span><span class="o">%</span><span class="mi">2</span><span class="o">/</span><span class="mi">2</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">path</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="nx">fill</span><span class="o">:</span><span class="nx">Q</span><span class="p">};</span><span class="nx">Ia</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="o">:</span><span class="nx">Y</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;path&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="nx">circle</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC59'><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">r</span><span class="o">:</span><span class="nx">c</span><span class="p">};</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;circle&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">arc</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">Y</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">r</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">innerR</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">start</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">end</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">symbol</span><span class="p">(</span><span class="s2">&quot;arc&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">||</span><span class="mi">0</span><span class="p">,{</span><span class="nx">innerR</span><span class="o">:</span><span class="nx">d</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">start</span><span class="o">:</span><span class="nx">e</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">end</span><span class="o">:</span><span class="nx">f</span><span class="o">||</span><span class="mi">0</span><span class="p">})},</span><span class="nx">rect</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">r</span><span class="o">:</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;rect&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">rx</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">ry</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">fill</span><span class="o">:</span><span class="nx">Q</span><span class="p">});</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">Y</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">crisp</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">s</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="nx">s</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="mi">0</span><span class="p">)))},</span><span class="nx">setSize</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">alignedObjects</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">boxWrapper</span><span class="p">[</span><span class="nx">n</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;animate&quot;</span><span class="o">:</span></div><div class='line' id='LC60'><span class="s2">&quot;attr&quot;</span><span class="p">]({</span><span class="nx">width</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">b</span><span class="p">});</span><span class="nx">e</span><span class="o">--</span><span class="p">;)</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">align</span><span class="p">()},</span><span class="nx">g</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;g&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="s2">&quot;class&quot;</span><span class="o">:</span><span class="s2">&quot;highcharts-&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">})</span><span class="o">:</span><span class="nx">b</span><span class="p">},</span><span class="nx">image</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">{</span><span class="nx">preserveAspectRatio</span><span class="o">:</span><span class="nx">Q</span><span class="p">};</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">(</span><span class="nx">f</span><span class="p">,{</span><span class="nx">x</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">e</span><span class="p">});</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;image&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">setAttributeNS</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">setAttributeNS</span><span class="p">(</span><span class="s2">&quot;http://www.w3.org/1999/xlink&quot;</span><span class="p">,</span><span class="s2">&quot;href&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;hc-svg-href&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">f</span><span class="p">},</span><span class="nx">symbol</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">symbols</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nx">u</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">u</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span></div><div class='line' id='LC61'><span class="nx">f</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="sr">/^url\((.*?)\)$/</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">;</span><span class="nx">h</span><span class="o">?</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">path</span><span class="p">(</span><span class="nx">h</span><span class="p">),</span><span class="nx">x</span><span class="p">(</span><span class="nx">g</span><span class="p">,{</span><span class="nx">symbolName</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">x</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">e</span><span class="p">}),</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">f</span><span class="p">))</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">element</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">width</span><span class="o">:</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">height</span><span class="o">:</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]}),</span><span class="nx">a</span><span class="p">.</span><span class="nx">alignByTranslate</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="nx">u</span><span class="p">((</span><span class="nx">d</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">/</span><span class="mi">2</span><span class="p">),</span><span class="nx">u</span><span class="p">((</span><span class="nx">e</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">/</span><span class="mi">2</span><span class="p">)))},</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="nx">i</span><span class="p">)[</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="o">=</span><span class="nx">Nb</span><span class="p">[</span><span class="nx">j</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">image</span><span class="p">(</span><span class="nx">j</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">c</span><span class="p">}),</span><span class="nx">a</span><span class="o">?</span><span class="nx">k</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">width</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="mi">0</span><span class="p">}),</span><span class="nx">T</span><span class="p">(</span><span class="s2">&quot;img&quot;</span><span class="p">,{</span><span class="nx">onload</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">k</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">Nb</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span><span class="o">=</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">])},</span><span class="nx">src</span><span class="o">:</span><span class="nx">j</span><span class="p">})));</span><span class="k">return</span> <span class="nx">g</span><span class="p">},</span><span class="nx">symbols</span><span class="o">:</span><span class="p">{</span><span class="nx">circle</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="mf">0.166</span><span class="o">*</span><span class="nx">c</span><span class="p">;</span><span class="k">return</span><span class="p">[</span><span class="s2">&quot;M&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;C&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="o">+</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">d</span><span class="p">,</span></div><div class='line' id='LC62'><span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;C&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">-</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="o">-</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;Z&quot;</span><span class="p">]},</span><span class="nx">square</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="s2">&quot;M&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;L&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;Z&quot;</span><span class="p">]},</span><span class="nx">triangle</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="s2">&quot;M&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;L&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;Z&quot;</span><span class="p">]},</span><span class="s2">&quot;triangle-down&quot;</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="s2">&quot;M&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;L&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;Z&quot;</span><span class="p">]},</span><span class="nx">diamond</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="s2">&quot;M&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;L&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">d</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">d</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="s2">&quot;Z&quot;</span><span class="p">]},</span><span class="nx">arc</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">start</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">r</span><span class="o">||</span><span class="nx">c</span><span class="o">||</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">end</span><span class="o">-</span><span class="mf">1.0</span><span class="nx">E</span><span class="o">-</span><span class="mi">6</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">innerR</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">open</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">W</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="nx">Z</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nx">W</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">Z</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">end</span><span class="o">-</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">Aa</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">1</span><span class="p">;</span><span class="k">return</span><span class="p">[</span><span class="s2">&quot;M&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="o">*</span><span class="nx">i</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">c</span><span class="o">*</span><span class="nx">j</span><span class="p">,</span><span class="s2">&quot;A&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span></div><div class='line' id='LC63'><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="o">*</span><span class="nx">k</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">c</span><span class="o">*</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="o">?</span><span class="s2">&quot;M&quot;</span><span class="o">:</span><span class="s2">&quot;L&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">d</span><span class="o">*</span><span class="nx">k</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">d</span><span class="o">*</span><span class="nx">g</span><span class="p">,</span><span class="s2">&quot;A&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">d</span><span class="o">*</span><span class="nx">i</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">d</span><span class="o">*</span><span class="nx">j</span><span class="p">,</span><span class="nx">h</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="s2">&quot;Z&quot;</span><span class="p">]}},</span><span class="nx">clipRect</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="s2">&quot;highcharts-&quot;</span><span class="o">+</span><span class="nx">tb</span><span class="o">++</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;clipPath&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">id</span><span class="o">:</span><span class="nx">e</span><span class="p">}).</span><span class="nx">add</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">defs</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="mi">0</span><span class="p">).</span><span class="nx">add</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">clipPath</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">color</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="sr">/^rgba/</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="p">[];</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">linearGradient</span><span class="o">?</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot;linearGradient&quot;</span><span class="o">:</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">radialGradient</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot;radialGradient&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">g</span><span class="p">];</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">gradients</span><span class="p">;</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">stops</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">radialReference</span><span class="p">;</span><span class="nx">Ia</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="o">=</span><span class="p">{</span><span class="nx">x1</span><span class="o">:</span><span class="nx">c</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">y1</span><span class="o">:</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">x2</span><span class="o">:</span><span class="nx">c</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">y2</span><span class="o">:</span><span class="nx">c</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span></div><div class='line' id='LC64'><span class="nx">gradientUnits</span><span class="o">:</span><span class="s2">&quot;userSpaceOnUse&quot;</span><span class="p">});</span><span class="nx">g</span><span class="o">===</span><span class="s2">&quot;radialGradient&quot;</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&amp;&amp;!</span><span class="nx">r</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">gradientUnits</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">(</span><span class="nx">c</span><span class="p">,{</span><span class="nx">cx</span><span class="o">:</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">cx</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">cy</span><span class="o">:</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">cy</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">r</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">r</span><span class="o">*</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">gradientUnits</span><span class="o">:</span><span class="s2">&quot;userSpaceOnUse&quot;</span><span class="p">});</span><span class="k">for</span><span class="p">(</span><span class="nx">m</span> <span class="k">in</span> <span class="nx">c</span><span class="p">)</span><span class="nx">m</span><span class="o">!==</span><span class="s2">&quot;id&quot;</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">m</span><span class="p">]);</span><span class="k">for</span><span class="p">(</span><span class="nx">m</span> <span class="k">in</span> <span class="nx">j</span><span class="p">)</span><span class="nx">q</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="nx">m</span><span class="p">]);</span><span class="nx">q</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">);</span><span class="nx">h</span><span class="p">[</span><span class="nx">q</span><span class="p">]</span><span class="o">?</span><span class="nx">a</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">q</span><span class="p">].</span><span class="nx">id</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">a</span><span class="o">=</span><span class="s2">&quot;highcharts-&quot;</span><span class="o">+</span><span class="nx">tb</span><span class="o">++</span><span class="p">,</span><span class="nx">h</span><span class="p">[</span><span class="nx">q</span><span class="p">]</span><span class="o">=</span><span class="nx">i</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">g</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">add</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">defs</span><span class="p">),</span><span class="nx">i</span><span class="p">.</span><span class="nx">stops</span><span class="o">=</span><span class="p">[],</span><span class="nx">o</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">f</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">qa</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="nx">k</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;rgb&quot;</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">l</span><span class="o">=</span><span class="mi">1</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;stop&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">offset</span><span class="o">:</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="s2">&quot;stop-color&quot;</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="s2">&quot;stop-opacity&quot;</span><span class="o">:</span><span class="nx">l</span><span class="p">}).</span><span class="nx">add</span><span class="p">(</span><span class="nx">i</span><span class="p">);</span></div><div class='line' id='LC65'><span class="nx">i</span><span class="p">.</span><span class="nx">stops</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">)}));</span><span class="k">return</span><span class="s2">&quot;url(&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">url</span><span class="o">+</span><span class="s2">&quot;#&quot;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;)&quot;</span><span class="p">}</span><span class="k">else</span> <span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">qa</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">w</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;-opacity&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="p">)),</span><span class="nx">e</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;rgb&quot;</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeAttribute</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;-opacity&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">)},</span><span class="nx">text</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">style</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">V</span><span class="o">||!</span><span class="nx">ca</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">forExport</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">forExport</span><span class="p">)</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">html</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">u</span><span class="p">(</span><span class="nx">n</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="mi">0</span><span class="p">));</span><span class="nx">c</span><span class="o">=</span><span class="nx">u</span><span class="p">(</span><span class="nx">n</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">0</span><span class="p">));</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;text&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">text</span><span class="o">:</span><span class="nx">a</span><span class="p">}).</span><span class="nx">css</span><span class="p">({</span><span class="nx">fontFamily</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">fontFamily</span><span class="p">,</span><span class="nx">fontSize</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">fontSize</span><span class="p">});</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">css</span><span class="p">({</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;absolute&quot;</span><span class="p">});</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">html</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">style</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;span&quot;</span><span class="p">),</span></div><div class='line' id='LC66'><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">attrSetters</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">renderer</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">text</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">!==</span><span class="nx">g</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">&amp;&amp;</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">bBox</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">};</span><span class="nx">f</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">align</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;align&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;textAlign&quot;</span><span class="p">);</span><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">htmlUpdateTransform</span><span class="p">();</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">};</span><span class="nx">e</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">text</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">x</span><span class="o">:</span><span class="nx">u</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">y</span><span class="o">:</span><span class="nx">u</span><span class="p">(</span><span class="nx">c</span><span class="p">)}).</span><span class="nx">css</span><span class="p">({</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;absolute&quot;</span><span class="p">,</span><span class="nx">whiteSpace</span><span class="o">:</span><span class="s2">&quot;nowrap&quot;</span><span class="p">,</span><span class="nx">fontFamily</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">fontFamily</span><span class="p">,</span><span class="nx">fontSize</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">fontSize</span><span class="p">});</span><span class="nx">e</span><span class="p">.</span><span class="nx">css</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">htmlCss</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">.</span><span class="nx">isSVG</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">add</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">box</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">div</span><span class="p">,</span><span class="o">!</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(;</span><span class="nx">a</span><span class="p">;)</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentGroup</span><span class="p">;</span><span class="nx">o</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">reverse</span><span class="p">(),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">;</span></div><div class='line' id='LC67'><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">div</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">div</span><span class="o">||</span><span class="nx">T</span><span class="p">(</span><span class="nx">ga</span><span class="p">,{</span><span class="nx">className</span><span class="o">:</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="s2">&quot;class&quot;</span><span class="p">)},{</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;absolute&quot;</span><span class="p">,</span><span class="nx">left</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">translateX</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">top</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">translateY</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">},</span><span class="nx">b</span><span class="o">||</span><span class="nx">c</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">;</span><span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">attrSetters</span><span class="p">,{</span><span class="nx">translateX</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">},</span><span class="nx">translateY</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">},</span><span class="nx">visibility</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">d</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">}})})}}</span><span class="k">else</span> <span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">g</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">added</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">alignOnAdd</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">htmlUpdateTransform</span><span class="p">();</span><span class="k">return</span> <span class="nx">e</span><span class="p">};</span><span class="k">return</span> <span class="nx">e</span><span class="p">},</span><span class="nx">fontMetrics</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="o">||</span><span class="mi">11</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">&lt;</span><span class="mi">24</span><span class="o">?</span><span class="nx">a</span><span class="o">+</span><span class="mi">4</span><span class="o">:</span><span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="o">*</span><span class="mf">1.2</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="o">*</span><span class="mf">0.8</span><span class="p">);</span><span class="k">return</span><span class="p">{</span><span class="nx">h</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">:</span><span class="nx">b</span><span class="p">}},</span><span class="nx">label</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">function</span> <span class="nx">j</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">;</span></div><div class='line' id='LC68'><span class="nx">a</span><span class="o">=</span><span class="nx">y</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">style</span><span class="p">;</span><span class="nx">H</span><span class="o">=</span><span class="p">(</span><span class="nx">s</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="o">||</span><span class="nx">yb</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="o">||</span><span class="nx">p</span><span class="p">.</span><span class="nx">styles</span><span class="p">.</span><span class="nx">textAlign</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">.</span><span class="nx">getBBox</span><span class="p">();</span><span class="nx">p</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="p">(</span><span class="nx">s</span><span class="o">||</span><span class="nx">H</span><span class="p">.</span><span class="nx">width</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="nx">v</span><span class="p">;</span><span class="nx">p</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="p">(</span><span class="nx">yb</span><span class="o">||</span><span class="nx">H</span><span class="p">.</span><span class="nx">height</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="nx">v</span><span class="p">;</span><span class="nx">zb</span><span class="o">=</span><span class="nx">v</span><span class="o">+</span><span class="nx">q</span><span class="p">.</span><span class="nx">fontMetrics</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">fontSize</span><span class="p">).</span><span class="nx">b</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">z</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">n</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="nx">h</span><span class="o">?-</span><span class="nx">zb</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">p</span><span class="p">.</span><span class="nx">box</span><span class="o">=</span><span class="nx">n</span><span class="o">=</span><span class="nx">d</span><span class="o">?</span><span class="nx">q</span><span class="p">.</span><span class="nx">symbol</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="o">-</span><span class="nx">ra</span><span class="o">*</span><span class="nx">v</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">p</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">p</span><span class="p">.</span><span class="nx">height</span><span class="p">)</span><span class="o">:</span><span class="nx">q</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="o">-</span><span class="nx">ra</span><span class="o">*</span><span class="nx">v</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">p</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">p</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">w</span><span class="p">[</span><span class="nx">wb</span><span class="p">]),</span><span class="nx">n</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">p</span><span class="p">);</span><span class="nx">n</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">B</span><span class="p">({</span><span class="nx">width</span><span class="o">:</span><span class="nx">p</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">p</span><span class="p">.</span><span class="nx">height</span><span class="p">},</span><span class="nx">w</span><span class="p">));</span><span class="nx">w</span><span class="o">=</span><span class="kc">null</span><span class="p">}}</span><span class="kd">function</span> <span class="nx">k</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">styles</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">textAlign</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">v</span><span class="o">*</span><span class="p">(</span><span class="mi">1</span><span class="o">-</span><span class="nx">ra</span><span class="p">),</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">h</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">zb</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">===</span><span class="s2">&quot;center&quot;</span><span class="o">||</span><span class="nx">a</span><span class="o">===</span><span class="s2">&quot;right&quot;</span><span class="p">))</span><span class="nx">b</span><span class="o">+=</span><span class="p">{</span><span class="nx">center</span><span class="o">:</span><span class="mf">0.5</span><span class="p">,</span><span class="nx">right</span><span class="o">:</span><span class="mi">1</span><span class="p">}[</span><span class="nx">a</span><span class="p">]</span><span class="o">*</span><span class="p">(</span><span class="nx">s</span><span class="o">-</span><span class="nx">H</span><span class="p">.</span><span class="nx">width</span><span class="p">);(</span><span class="nx">b</span><span class="o">!==</span><span class="nx">y</span><span class="p">.</span><span class="nx">x</span><span class="o">||</span><span class="nx">c</span><span class="o">!==</span></div><div class='line' id='LC69'><span class="nx">y</span><span class="p">.</span><span class="nx">y</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">c</span><span class="p">});</span><span class="nx">y</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">y</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">l</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">n</span><span class="o">?</span><span class="nx">n</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">w</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">m</span><span class="p">(){</span><span class="nx">y</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="nx">p</span><span class="p">);</span><span class="nx">p</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">text</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">x</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">c</span><span class="p">});</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">anchorX</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">anchorY</span><span class="o">:</span><span class="nx">f</span><span class="p">})}</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span><span class="nx">y</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">text</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">zIndex</span><span class="o">:</span><span class="mi">1</span><span class="p">}),</span><span class="nx">n</span><span class="p">,</span><span class="nx">H</span><span class="p">,</span><span class="nx">ra</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="mi">3</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">yb</span><span class="p">,</span><span class="nx">E</span><span class="p">,</span><span class="nx">S</span><span class="p">,</span><span class="nx">Qb</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">w</span><span class="o">=</span><span class="p">{},</span><span class="nx">zb</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">attrSetters</span><span class="p">,</span><span class="nx">z</span><span class="p">;</span><span class="nx">J</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="s2">&quot;add&quot;</span><span class="p">,</span><span class="nx">m</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">s</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">};</span><span class="nx">g</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">yb</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">};</span><span class="nx">g</span><span class="p">.</span><span class="nx">padding</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">!==</span><span class="nx">v</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">v</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">k</span><span class="p">());</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">};</span><span class="nx">g</span><span class="p">.</span><span class="nx">align</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">ra</span><span class="o">=</span><span class="p">{</span><span class="nx">left</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">center</span><span class="o">:</span><span class="mf">0.5</span><span class="p">,</span><span class="nx">right</span><span class="o">:</span><span class="mi">1</span><span class="p">}[</span><span class="nx">a</span><span class="p">];</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">};</span><span class="nx">g</span><span class="p">.</span><span class="nx">text</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">y</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span></div><div class='line' id='LC70'><span class="nx">j</span><span class="p">();</span><span class="nx">k</span><span class="p">();</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">};</span><span class="nx">g</span><span class="p">[</span><span class="nx">wb</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">z</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">Qb</span><span class="o">=</span><span class="nx">a</span><span class="o">%</span><span class="mi">2</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span><span class="nx">l</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">};</span><span class="nx">g</span><span class="p">.</span><span class="nx">stroke</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">fill</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">r</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;fill&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">z</span><span class="o">=!</span><span class="mi">0</span><span class="p">);</span><span class="nx">l</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">};</span><span class="nx">g</span><span class="p">.</span><span class="nx">anchorX</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">l</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">Qb</span><span class="o">-</span><span class="nx">E</span><span class="p">);</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">};</span><span class="nx">g</span><span class="p">.</span><span class="nx">anchorY</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">l</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="o">-</span><span class="nx">S</span><span class="p">);</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">};</span><span class="nx">g</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">p</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">a</span><span class="o">-=</span><span class="nx">ra</span><span class="o">*</span><span class="p">((</span><span class="nx">s</span><span class="o">||</span><span class="nx">H</span><span class="p">.</span><span class="nx">width</span><span class="p">)</span><span class="o">+</span><span class="nx">v</span><span class="p">);</span><span class="nx">E</span><span class="o">=</span><span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">p</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;translateX&quot;</span><span class="p">,</span><span class="nx">E</span><span class="p">);</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">};</span><span class="nx">g</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">S</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">p</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;translateY&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">};</span><span class="kd">var</span> <span class="nx">C</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">css</span><span class="p">;</span><span class="k">return</span> <span class="nx">x</span><span class="p">(</span><span class="nx">p</span><span class="p">,{</span><span class="nx">css</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{},</span><span class="nx">a</span><span class="o">=</span><span class="nx">B</span><span class="p">({},</span><span class="nx">a</span><span class="p">);</span><span class="nx">o</span><span class="p">(</span><span class="s2">&quot;fontSize,fontWeight,fontFamily,color,lineHeight,width&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">),</span></div><div class='line' id='LC71'><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">!==</span><span class="nx">A</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="k">delete</span> <span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">])});</span><span class="nx">y</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="k">return</span> <span class="nx">C</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">getBBox</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">width</span><span class="o">:</span><span class="nx">H</span><span class="p">.</span><span class="nx">width</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="nx">v</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">H</span><span class="p">.</span><span class="nx">height</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="nx">v</span><span class="p">,</span><span class="nx">x</span><span class="o">:</span><span class="nx">H</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">v</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">H</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">v</span><span class="p">}},</span><span class="nx">shadow</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="nx">n</span><span class="p">.</span><span class="nx">shadow</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">p</span><span class="p">},</span><span class="nx">destroy</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">R</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="s2">&quot;add&quot;</span><span class="p">,</span><span class="nx">m</span><span class="p">);</span><span class="nx">R</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="s2">&quot;mouseenter&quot;</span><span class="p">);</span><span class="nx">R</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="s2">&quot;mouseleave&quot;</span><span class="p">);</span><span class="nx">y</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">y</span><span class="o">=</span><span class="nx">y</span><span class="p">.</span><span class="nx">destroy</span><span class="p">());</span><span class="nx">n</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">n</span><span class="p">.</span><span class="nx">destroy</span><span class="p">());</span><span class="nx">ya</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">destroy</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">p</span><span class="p">);</span><span class="nx">p</span><span class="o">=</span><span class="nx">q</span><span class="o">=</span><span class="nx">j</span><span class="o">=</span><span class="nx">k</span><span class="o">=</span><span class="nx">l</span><span class="o">=</span><span class="nx">m</span><span class="o">=</span><span class="kc">null</span><span class="p">}})}};</span><span class="nx">Sa</span><span class="o">=</span><span class="nx">sa</span><span class="p">;</span><span class="kd">var</span> <span class="nx">ha</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">ca</span><span class="o">&amp;&amp;!</span><span class="nx">V</span><span class="p">){</span><span class="nx">ha</span><span class="o">=</span><span class="p">{</span><span class="nx">init</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;&lt;&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="s1">&#39; filled=&quot;f&quot; stroked=&quot;f&quot;&#39;</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;position: &quot;</span><span class="p">,</span><span class="s2">&quot;absolute&quot;</span><span class="p">,</span><span class="s2">&quot;;&quot;</span><span class="p">];(</span><span class="nx">b</span><span class="o">===</span></div><div class='line' id='LC72'><span class="s2">&quot;shape&quot;</span><span class="o">||</span><span class="nx">b</span><span class="o">===</span><span class="nx">ga</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;left:0;top:0;width:1px;height:1px;&quot;</span><span class="p">);</span><span class="nx">Ra</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;visibility: &quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">===</span><span class="nx">ga</span><span class="o">?</span><span class="s2">&quot;hidden&quot;</span><span class="o">:</span><span class="s2">&quot;visible&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s1">&#39; style=&quot;&#39;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="s1">&#39;&quot;/&gt;&#39;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="o">===</span><span class="nx">ga</span><span class="o">||</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;span&quot;</span><span class="o">||</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;img&quot;</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">prepVML</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="o">=</span><span class="nx">T</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">attrSetters</span><span class="o">=</span><span class="p">{}},</span><span class="nx">add</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">box</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">element</span><span class="o">||</span><span class="nx">a</span><span class="o">:</span><span class="nx">d</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">inverted</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">invertChild</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">added</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">alignOnAdd</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">deferUpdateTransform</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">updateTransform</span><span class="p">();</span><span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;add&quot;</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span></div><div class='line' id='LC73'><span class="nx">updateTransform</span><span class="o">:</span><span class="nx">ya</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">htmlUpdateTransform</span><span class="p">,</span><span class="nx">attr</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="o">||</span><span class="p">{},</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">style</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">nodeName</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">symbolName</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">shadows</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">attrSetters</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">ja</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="p">{},</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">ja</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;strokeWidth&quot;</span><span class="o">||</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;stroke-width&quot;</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">strokeweight</span><span class="o">:</span><span class="k">this</span><span class="p">[</span><span class="nx">c</span><span class="p">];</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="nx">m</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">q</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">e</span><span class="o">!==!</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">!==</span><span class="kc">null</span><span class="p">){</span><span class="nx">e</span><span class="o">!==</span><span class="nx">A</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="sr">/^(x|y|r|start|end|width|height|innerR|anchorX|anchorY)/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">c</span><span class="p">))</span><span class="nx">k</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">symbolAttr</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">k</span><span class="o">=!</span><span class="mi">0</span><span class="p">),</span><span class="nx">m</span><span class="o">=</span></div><div class='line' id='LC74'><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;d&quot;</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="o">||</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="p">[];</span><span class="nx">e</span><span class="o">--</span><span class="p">;)</span><span class="nx">m</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">Da</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">])</span><span class="o">?</span><span class="nx">u</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">*</span><span class="mi">10</span><span class="p">)</span><span class="o">-</span><span class="mi">5</span><span class="o">:</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;Z&quot;</span><span class="o">?</span><span class="s2">&quot;x&quot;</span><span class="o">:</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">];</span><span class="nx">d</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)</span><span class="o">||</span><span class="s2">&quot;x&quot;</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">path</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">--</span><span class="p">;)</span><span class="nx">l</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">path</span><span class="o">=</span><span class="nx">l</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">cutOff</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">cutOffPath</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">l</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">cutOff</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">;</span><span class="nx">m</span><span class="o">=!</span><span class="mi">0</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;visibility&quot;</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">--</span><span class="p">;)</span><span class="nx">l</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">style</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">h</span><span class="o">===</span><span class="s2">&quot;DIV&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="o">===</span><span class="s2">&quot;hidden&quot;</span><span class="o">?</span><span class="s2">&quot;-999em&quot;</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;top&quot;</span><span class="p">);</span><span class="nx">g</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">m</span><span class="o">=!</span><span class="mi">0</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;zIndex&quot;</span><span class="p">)</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">),</span><span class="nx">m</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;width&quot;</span><span class="o">||</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;height&quot;</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="k">this</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">updateClipping</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">updateClipping</span><span class="p">())</span><span class="o">:</span></div><div class='line' id='LC75'><span class="nx">g</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">m</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;x&quot;</span><span class="o">||</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;y&quot;</span><span class="p">)</span><span class="k">this</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="p">[{</span><span class="nx">x</span><span class="o">:</span><span class="s2">&quot;left&quot;</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="s2">&quot;top&quot;</span><span class="p">}[</span><span class="nx">c</span><span class="p">]]</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;class&quot;</span><span class="p">)</span><span class="nx">f</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;stroke&quot;</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">color</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;strokecolor&quot;</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;stroke-width&quot;</span><span class="o">||</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;strokeWidth&quot;</span><span class="p">)</span><span class="nx">f</span><span class="p">.</span><span class="nx">stroked</span><span class="o">=</span><span class="nx">d</span><span class="o">?!</span><span class="mi">0</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;strokeweight&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">Da</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">+=</span><span class="s2">&quot;px&quot;</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;dashstyle&quot;</span><span class="p">)(</span><span class="nx">f</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;stroke&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="nx">T</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">prepVML</span><span class="p">([</span><span class="s2">&quot;&lt;stroke/&gt;&quot;</span><span class="p">]),</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">f</span><span class="p">))[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="o">||</span><span class="s2">&quot;solid&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">dashstyle</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">m</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;fill&quot;</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">===</span><span class="s2">&quot;SPAN&quot;</span><span class="p">)</span><span class="nx">g</span><span class="p">.</span><span class="nx">color</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">!==</span><span class="s2">&quot;IMG&quot;</span><span class="p">)</span><span class="nx">f</span><span class="p">.</span><span class="nx">filled</span><span class="o">=</span><span class="nx">d</span><span class="o">!==</span><span class="nx">Q</span><span class="o">?!</span><span class="mi">0</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">color</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span></div><div class='line' id='LC76'><span class="nx">f</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;fillcolor&quot;</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">===</span><span class="s2">&quot;shape&quot;</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;rotation&quot;</span><span class="p">)</span><span class="k">this</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">left</span><span class="o">=-</span><span class="nx">u</span><span class="p">(</span><span class="nx">Z</span><span class="p">(</span><span class="nx">d</span><span class="o">*</span><span class="nx">ab</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="nx">u</span><span class="p">(</span><span class="nx">W</span><span class="p">(</span><span class="nx">d</span><span class="o">*</span><span class="nx">ab</span><span class="p">))</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;translateX&quot;</span><span class="o">||</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;translateY&quot;</span><span class="o">||</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;rotation&quot;</span><span class="p">)</span><span class="k">this</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">updateTransform</span><span class="p">(),</span><span class="nx">m</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;text&quot;</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">bBox</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">m</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">m</span><span class="o">||</span><span class="p">(</span><span class="nx">Ra</span><span class="o">?</span><span class="nx">f</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="o">:</span><span class="nx">w</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">))}</span><span class="k">return</span> <span class="nx">p</span><span class="p">},</span><span class="nx">clip</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">members</span><span class="p">,</span><span class="nx">ta</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">destroyClip</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">ta</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">)},</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">className</span><span class="o">===</span><span class="s2">&quot;highcharts-tracker&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">Ra</span><span class="o">&amp;&amp;</span><span class="nx">I</span><span class="p">(</span><span class="nx">d</span><span class="p">,{</span><span class="nx">visibility</span><span class="o">:</span><span class="s2">&quot;hidden&quot;</span><span class="p">}),</span></div><div class='line' id='LC77'><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getCSS</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">destroyClip</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">destroyClip</span><span class="p">(),</span><span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">clip</span><span class="o">:</span><span class="nx">Ra</span><span class="o">?</span><span class="s2">&quot;inherit&quot;</span><span class="o">:</span><span class="s2">&quot;rect(auto)&quot;</span><span class="p">});</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">css</span><span class="o">:</span><span class="nx">ya</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">htmlCss</span><span class="p">,</span><span class="nx">safeRemoveChild</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">parentNode</span><span class="o">&amp;&amp;</span><span class="nx">Na</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">destroy</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">destroyClip</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">destroyClip</span><span class="p">();</span><span class="k">return</span> <span class="nx">ya</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">destroy</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">)},</span><span class="nx">empty</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">c</span><span class="p">;</span><span class="nx">b</span><span class="o">--</span><span class="p">;)</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">c</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">c</span><span class="p">)},</span><span class="nx">on</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">[</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">event</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">srcElement</span><span class="p">;</span><span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">cutOffPath</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC78'><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="sr">/[ ,]/</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="mi">9</span><span class="o">||</span><span class="nx">c</span><span class="o">===</span><span class="mi">11</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">-</span><span class="mi">4</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">-</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">-</span><span class="mi">2</span><span class="p">])</span><span class="o">-</span><span class="mi">10</span><span class="o">*</span><span class="nx">b</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)},</span><span class="nx">shadow</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">element</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">style</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">path</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">p</span><span class="p">;</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">k</span><span class="p">.</span><span class="nx">value</span><span class="o">!==</span><span class="s2">&quot;string&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="s2">&quot;x&quot;</span><span class="p">);</span><span class="nx">m</span><span class="o">=</span><span class="nx">k</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">q</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="mi">3</span><span class="p">);</span><span class="nx">p</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">opacity</span><span class="o">||</span><span class="mf">0.15</span><span class="p">)</span><span class="o">/</span><span class="nx">q</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">e</span><span class="o">&lt;=</span><span class="mi">3</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">){</span><span class="nx">l</span><span class="o">=</span><span class="nx">q</span><span class="o">*</span><span class="mi">2</span><span class="o">+</span><span class="mi">1</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">e</span><span class="p">;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">cutOffPath</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">l</span><span class="o">+</span><span class="mf">0.5</span><span class="p">));</span><span class="nx">j</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;&lt;shape isShadow=&quot;true&quot; strokeweight=&quot;&#39;</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="s1">&#39;&quot; filled=&quot;false&quot; path=&quot;&#39;</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="s1">&#39;&quot; coordsize=&quot;10 10&quot; style=&quot;&#39;</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">cssText</span><span class="p">,</span><span class="s1">&#39;&quot; /&gt;&#39;</span><span class="p">];</span><span class="nx">h</span><span class="o">=</span><span class="nx">T</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">prepVML</span><span class="p">(</span><span class="nx">j</span><span class="p">),</span><span class="kc">null</span><span class="p">,</span></div><div class='line' id='LC79'><span class="p">{</span><span class="nx">left</span><span class="o">:</span><span class="nx">z</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">left</span><span class="p">)</span><span class="o">+</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetX</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">top</span><span class="o">:</span><span class="nx">z</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">top</span><span class="p">)</span><span class="o">+</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetY</span><span class="p">,</span><span class="mi">1</span><span class="p">)});</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="nx">h</span><span class="p">.</span><span class="nx">cutOff</span><span class="o">=</span><span class="nx">l</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">j</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;&lt;stroke color=&quot;&#39;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">color</span><span class="o">||</span><span class="s2">&quot;black&quot;</span><span class="p">,</span><span class="s1">&#39;&quot; opacity=&quot;&#39;</span><span class="p">,</span><span class="nx">p</span><span class="o">*</span><span class="nx">e</span><span class="p">,</span><span class="s1">&#39;&quot;/&gt;&#39;</span><span class="p">];</span><span class="nx">T</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">prepVML</span><span class="p">(</span><span class="nx">j</span><span class="p">),</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="nx">b</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">h</span><span class="p">)}</span><span class="k">this</span><span class="p">.</span><span class="nx">shadows</span><span class="o">=</span><span class="nx">d</span><span class="p">}</span><span class="k">return</span> <span class="k">this</span><span class="p">}};</span><span class="nx">ha</span><span class="o">=</span><span class="nx">ba</span><span class="p">(</span><span class="nx">ya</span><span class="p">,</span><span class="nx">ha</span><span class="p">);</span><span class="kd">var</span> <span class="nx">fa</span><span class="o">=</span><span class="p">{</span><span class="nx">Element</span><span class="o">:</span><span class="nx">ha</span><span class="p">,</span><span class="nx">isIE8</span><span class="o">:</span><span class="nx">na</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;MSIE 8.0&quot;</span><span class="p">)</span><span class="o">&gt;-</span><span class="mi">1</span><span class="p">,</span><span class="nx">init</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">alignedObjects</span><span class="o">=</span><span class="p">[];</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">ga</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">element</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">position</span><span class="o">=</span><span class="s2">&quot;relative&quot;</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">element</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">box</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">boxWrapper</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span></div><div class='line' id='LC80'><span class="k">this</span><span class="p">.</span><span class="nx">setSize</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">C</span><span class="p">.</span><span class="nx">namespaces</span><span class="p">.</span><span class="nx">hcv</span><span class="p">)</span><span class="nx">C</span><span class="p">.</span><span class="nx">namespaces</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="s2">&quot;hcv&quot;</span><span class="p">,</span><span class="s2">&quot;urn:schemas-microsoft-com:vml&quot;</span><span class="p">),</span><span class="nx">C</span><span class="p">.</span><span class="nx">createStyleSheet</span><span class="p">().</span><span class="nx">cssText</span><span class="o">=</span><span class="s2">&quot;hcv\\:fill, hcv\\:path, hcv\\:shape, hcv\\:stroke{ behavior:url(#default#VML); display: inline-block; } &quot;</span><span class="p">},</span><span class="nx">isHidden</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">box</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="p">},</span><span class="nx">clipRect</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(),</span><span class="nx">f</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">x</span><span class="p">(</span><span class="nx">e</span><span class="p">,{</span><span class="nx">members</span><span class="o">:</span><span class="p">[],</span><span class="nx">left</span><span class="o">:</span><span class="nx">f</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">top</span><span class="o">:</span><span class="nx">f</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">f</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">f</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">getCSS</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">inverted</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">top</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">left</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span></div><div class='line' id='LC81'><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">{</span><span class="nx">clip</span><span class="o">:</span><span class="s2">&quot;rect(&quot;</span><span class="o">+</span><span class="nx">u</span><span class="p">(</span><span class="nx">b</span><span class="o">?</span><span class="nx">d</span><span class="o">:</span><span class="nx">c</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;px,&quot;</span><span class="o">+</span><span class="nx">u</span><span class="p">(</span><span class="nx">b</span><span class="o">?</span><span class="nx">f</span><span class="o">:</span><span class="nx">e</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;px,&quot;</span><span class="o">+</span><span class="nx">u</span><span class="p">(</span><span class="nx">b</span><span class="o">?</span><span class="nx">e</span><span class="o">:</span><span class="nx">f</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;px,&quot;</span><span class="o">+</span><span class="nx">u</span><span class="p">(</span><span class="nx">b</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="nx">d</span><span class="p">)</span><span class="o">+</span><span class="s2">&quot;px)&quot;</span><span class="p">};</span><span class="o">!</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">Ra</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">nodeName</span><span class="o">!==</span><span class="s2">&quot;IMG&quot;</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">(</span><span class="nx">c</span><span class="p">,{</span><span class="nx">width</span><span class="o">:</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">f</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">});</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">updateClipping</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">o</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">members</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">getCSS</span><span class="p">(</span><span class="nx">a</span><span class="p">))})}})},</span><span class="nx">color</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="sr">/^rgba/</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">Q</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">linearGradient</span><span class="o">?</span><span class="nx">i</span><span class="o">=</span><span class="s2">&quot;gradient&quot;</span><span class="o">:</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">radialGradient</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="s2">&quot;pattern&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">linearGradient</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">radialGradient</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">H</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">stops</span><span class="p">,</span><span class="nx">v</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="p">[],</span><span class="nx">u</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">h</span><span class="o">=</span><span class="p">[</span><span class="s1">&#39;&lt;fill colors=&quot;&#39;</span><span class="o">+</span><span class="nx">s</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;&quot; opacity=&quot;&#39;</span><span class="p">,</span></div><div class='line' id='LC82'><span class="nx">n</span><span class="p">,</span><span class="s1">&#39;&quot; o:opacity2=&quot;&#39;</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="s1">&#39;&quot; type=&quot;&#39;</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="s1">&#39;&quot; &#39;</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="s1">&#39;focus=&quot;100%&quot; method=&quot;any&quot; /&gt;&#39;</span><span class="p">];</span><span class="nx">T</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">prepVML</span><span class="p">(</span><span class="nx">h</span><span class="p">),</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">)};</span><span class="nx">q</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">v</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">];</span><span class="nx">q</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">unshift</span><span class="p">([</span><span class="mi">0</span><span class="p">,</span><span class="nx">q</span><span class="p">[</span><span class="mi">1</span><span class="p">]]);</span><span class="nx">v</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&lt;</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="nx">v</span><span class="p">[</span><span class="mi">1</span><span class="p">]]);</span><span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">g</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">?</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">qa</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="nx">k</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;rgb&quot;</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">l</span><span class="o">=</span><span class="mi">1</span><span class="p">);</span><span class="nx">s</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">*</span><span class="mi">100</span><span class="o">+</span><span class="s2">&quot;% &quot;</span><span class="o">+</span><span class="nx">k</span><span class="p">);</span><span class="nx">b</span><span class="o">?</span><span class="p">(</span><span class="nx">n</span><span class="o">=</span><span class="nx">l</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">k</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="nx">l</span><span class="p">,</span><span class="nx">H</span><span class="o">=</span><span class="nx">k</span><span class="p">)});</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;fill&quot;</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="o">===</span><span class="s2">&quot;gradient&quot;</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">x1</span><span class="o">||</span><span class="nx">m</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">y1</span><span class="o">||</span><span class="nx">m</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">x2</span><span class="o">||</span><span class="nx">m</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">y2</span><span class="o">||</span><span class="nx">m</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="s1">&#39;angle=&quot;&#39;</span><span class="o">+</span><span class="p">(</span><span class="mi">90</span><span class="o">-</span><span class="nx">K</span><span class="p">.</span><span class="nx">atan</span><span class="p">((</span><span class="nx">m</span><span class="o">-</span><span class="nx">a</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="nx">q</span><span class="o">-</span><span class="nx">c</span><span class="p">))</span><span class="o">*</span><span class="mi">180</span><span class="o">/</span><span class="nx">Aa</span><span class="p">)</span><span class="o">+</span><span class="s1">&#39;&quot;&#39;</span><span class="p">,</span><span class="nx">u</span><span class="p">();</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">r</span><span class="p">,</span><span class="nx">E</span><span class="o">=</span><span class="nx">j</span><span class="o">*</span><span class="mi">2</span><span class="p">,</span><span class="nx">S</span><span class="o">=</span><span class="nx">j</span><span class="o">*</span><span class="mi">2</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">cx</span><span class="p">,</span><span class="nx">A</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">cy</span><span class="p">,</span><span class="nx">w</span><span class="o">=</span></div><div class='line' id='LC83'><span class="nx">b</span><span class="p">.</span><span class="nx">radialReference</span><span class="p">,</span><span class="nx">z</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">w</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">z</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">getBBox</span><span class="p">(),</span><span class="nx">x</span><span class="o">+=</span><span class="p">(</span><span class="nx">w</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="nx">z</span><span class="p">.</span><span class="nx">x</span><span class="p">)</span><span class="o">/</span><span class="nx">z</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="mf">0.5</span><span class="p">,</span><span class="nx">A</span><span class="o">+=</span><span class="p">(</span><span class="nx">w</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="nx">z</span><span class="p">.</span><span class="nx">y</span><span class="p">)</span><span class="o">/</span><span class="nx">z</span><span class="p">.</span><span class="nx">height</span><span class="o">-</span><span class="mf">0.5</span><span class="p">,</span><span class="nx">E</span><span class="o">*=</span><span class="nx">w</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">/</span><span class="nx">z</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">S</span><span class="o">*=</span><span class="nx">w</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">/</span><span class="nx">z</span><span class="p">.</span><span class="nx">height</span><span class="p">);</span><span class="nx">r</span><span class="o">=</span><span class="s1">&#39;src=&quot;&#39;</span><span class="o">+</span><span class="nx">N</span><span class="p">.</span><span class="nx">global</span><span class="p">.</span><span class="nx">VMLRadialGradientURL</span><span class="o">+</span><span class="s1">&#39;&quot; size=&quot;&#39;</span><span class="o">+</span><span class="nx">E</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nx">S</span><span class="o">+</span><span class="s1">&#39;&quot; origin=&quot;0.5,0.5&quot; position=&quot;&#39;</span><span class="o">+</span><span class="nx">x</span><span class="o">+</span><span class="s2">&quot;,&quot;</span><span class="o">+</span><span class="nx">A</span><span class="o">+</span><span class="s1">&#39;&quot; color2=&quot;&#39;</span><span class="o">+</span><span class="nx">H</span><span class="o">+</span><span class="s1">&#39;&quot; &#39;</span><span class="p">;</span><span class="nx">u</span><span class="p">()};</span><span class="nx">d</span><span class="p">.</span><span class="nx">added</span><span class="o">?</span><span class="nx">j</span><span class="p">()</span><span class="o">:</span><span class="nx">J</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;add&quot;</span><span class="p">,</span><span class="nx">j</span><span class="p">);</span><span class="nx">j</span><span class="o">=</span><span class="nx">t</span><span class="p">}</span><span class="k">else</span> <span class="nx">j</span><span class="o">=</span><span class="nx">k</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">tagName</span><span class="o">!==</span><span class="s2">&quot;IMG&quot;</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">qa</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;&lt;&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="s1">&#39; opacity=&quot;&#39;</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="p">),</span><span class="s1">&#39;&quot;/&gt;&#39;</span><span class="p">],</span><span class="nx">T</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">prepVML</span><span class="p">(</span><span class="nx">h</span><span class="p">),</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">get</span><span class="p">(</span><span class="s2">&quot;rgb&quot;</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="nx">j</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="nx">j</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">opacity</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">}</span><span class="k">return</span> <span class="nx">j</span><span class="p">},</span></div><div class='line' id='LC84'><span class="nx">prepVML</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">isIE8</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="nx">b</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;/&gt;&quot;</span><span class="p">,</span><span class="s1">&#39; xmlns=&quot;urn:schemas-microsoft-com:vml&quot; /&gt;&#39;</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s1">&#39;style=&quot;&#39;</span><span class="p">)</span><span class="o">===-</span><span class="mi">1</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;/&gt;&quot;</span><span class="p">,</span><span class="s1">&#39; style=&quot;display:inline-block;behavior:url(#default#VML);&quot; /&gt;&#39;</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s1">&#39;style=&quot;&#39;</span><span class="p">,</span><span class="s1">&#39;style=&quot;display:inline-block;behavior:url(#default#VML);&#39;</span><span class="p">))</span><span class="o">:</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;&lt;&quot;</span><span class="p">,</span><span class="s2">&quot;&lt;hcv:&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">text</span><span class="o">:</span><span class="nx">sa</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">html</span><span class="p">,</span><span class="nx">path</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="nx">coordsize</span><span class="o">:</span><span class="s2">&quot;10 10&quot;</span><span class="p">};</span><span class="nx">Ia</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="o">:</span><span class="nx">Y</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">x</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;shape&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="nx">circle</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">symbol</span><span class="p">(</span><span class="s2">&quot;circle&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="nx">a</span><span class="o">-</span></div><div class='line' id='LC85'><span class="nx">c</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">b</span><span class="o">-</span><span class="nx">c</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="mi">2</span><span class="o">*</span><span class="nx">c</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="mi">2</span><span class="o">*</span><span class="nx">c</span><span class="p">})},</span><span class="nx">g</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="nx">className</span><span class="o">:</span><span class="s2">&quot;highcharts-&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;class&quot;</span><span class="o">:</span><span class="s2">&quot;highcharts-&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">});</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">ga</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="nx">b</span><span class="p">)},</span><span class="nx">image</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;img&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">src</span><span class="o">:</span><span class="nx">a</span><span class="p">});</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">e</span><span class="p">});</span><span class="k">return</span> <span class="nx">f</span><span class="p">},</span><span class="nx">rect</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">Y</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">strokeWidth</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="p">;</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">symbol</span><span class="p">(</span><span class="s2">&quot;rect&quot;</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">r</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">return</span> <span class="nx">g</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">crisp</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">s</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="nx">s</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="mi">0</span><span class="p">)))},</span><span class="nx">invertChild</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">;</span><span class="nx">I</span><span class="p">(</span><span class="nx">a</span><span class="p">,{</span><span class="nx">flip</span><span class="o">:</span><span class="s2">&quot;x&quot;</span><span class="p">,</span></div><div class='line' id='LC86'><span class="nx">left</span><span class="o">:</span><span class="nx">z</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">width</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">top</span><span class="o">:</span><span class="nx">z</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">height</span><span class="p">)</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">rotation</span><span class="o">:-</span><span class="mi">90</span><span class="p">})},</span><span class="nx">symbols</span><span class="o">:</span><span class="p">{</span><span class="nx">arc</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">start</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">end</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">r</span><span class="o">||</span><span class="nx">c</span><span class="o">||</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">W</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">Z</span><span class="p">(</span><span class="nx">f</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">W</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="nx">Z</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">innerR</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="mf">0.08</span><span class="o">/</span><span class="nx">h</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="mf">0.1</span><span class="o">/</span><span class="nx">k</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">-</span><span class="nx">f</span><span class="o">===</span><span class="mi">0</span><span class="p">)</span><span class="k">return</span><span class="p">[</span><span class="s2">&quot;x&quot;</span><span class="p">];</span><span class="k">else</span> <span class="mi">2</span><span class="o">*</span><span class="nx">Aa</span><span class="o">-</span><span class="nx">g</span><span class="o">+</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">l</span><span class="o">?</span><span class="nx">i</span><span class="o">=-</span><span class="nx">l</span><span class="o">:</span><span class="nx">g</span><span class="o">-</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">W</span><span class="p">(</span><span class="nx">f</span><span class="o">+</span><span class="nx">m</span><span class="p">));</span><span class="nx">f</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;wa&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">-</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="o">-</span><span class="nx">h</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">h</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">h</span><span class="o">*</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">h</span><span class="o">*</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">h</span><span class="o">*</span><span class="nx">i</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">h</span><span class="o">*</span><span class="nx">j</span><span class="p">];</span><span class="nx">e</span><span class="p">.</span><span class="nx">open</span><span class="o">&amp;&amp;!</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;e&quot;</span><span class="p">,</span><span class="s2">&quot;M&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;at&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">-</span><span class="nx">k</span><span class="p">,</span><span class="nx">b</span><span class="o">-</span><span class="nx">k</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">k</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">k</span><span class="o">*</span><span class="nx">i</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="o">*</span><span class="nx">j</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">k</span><span class="o">*</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="o">*</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;x&quot;</span><span class="p">,</span><span class="s2">&quot;e&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">f</span><span class="p">},</span><span class="nx">circle</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">return</span><span class="p">[</span><span class="s2">&quot;wa&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">d</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">d</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="s2">&quot;e&quot;</span><span class="p">]},</span><span class="nx">rect</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span></div><div class='line' id='LC87'><span class="nx">a</span><span class="o">+</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="nx">d</span><span class="p">,</span><span class="nx">h</span><span class="p">;</span><span class="o">!</span><span class="nx">r</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">||!</span><span class="nx">e</span><span class="p">.</span><span class="nx">r</span><span class="o">?</span><span class="nx">f</span><span class="o">=</span><span class="nx">sa</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">symbols</span><span class="p">.</span><span class="nx">square</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">O</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">r</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;M&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;L&quot;</span><span class="p">,</span><span class="nx">f</span><span class="o">-</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;wa&quot;</span><span class="p">,</span><span class="nx">f</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="nx">h</span><span class="p">,</span><span class="nx">f</span><span class="o">-</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">h</span><span class="p">,</span><span class="s2">&quot;L&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">-</span><span class="nx">h</span><span class="p">,</span><span class="s2">&quot;wa&quot;</span><span class="p">,</span><span class="nx">f</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">h</span><span class="p">,</span><span class="nx">g</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">h</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">-</span><span class="nx">h</span><span class="p">,</span><span class="nx">f</span><span class="o">-</span><span class="nx">h</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="s2">&quot;L&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">h</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="s2">&quot;wa&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">h</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="nx">h</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">h</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="o">-</span><span class="nx">h</span><span class="p">,</span><span class="s2">&quot;L&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">h</span><span class="p">,</span><span class="s2">&quot;wa&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="nx">h</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">h</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;x&quot;</span><span class="p">,</span><span class="s2">&quot;e&quot;</span><span class="p">]);</span><span class="k">return</span> <span class="nx">f</span><span class="p">}}};</span><span class="nx">ha</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">init</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)};</span><span class="nx">ha</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="nx">sa</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="nx">fa</span><span class="p">);</span><span class="nx">Sa</span><span class="o">=</span><span class="nx">ha</span><span class="p">}</span><span class="kd">var</span> <span class="nx">gb</span><span class="p">,</span><span class="nx">Rb</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">V</span><span class="p">)</span><span class="nx">gb</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">oa</span><span class="o">=</span><span class="s2">&quot;http://www.w3.org/1999/xhtml&quot;</span><span class="p">},</span><span class="nx">gb</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">symbols</span><span class="o">=</span><span class="p">{},</span><span class="nx">Rb</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span></div><div class='line' id='LC88'><span class="nx">d</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]();</span><span class="nx">b</span><span class="o">=</span><span class="p">[]}</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[];</span><span class="k">return</span><span class="p">{</span><span class="nx">push</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">Tb</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">)}}}();</span><span class="nx">Sa</span><span class="o">=</span><span class="nx">ha</span><span class="o">||</span><span class="nx">gb</span><span class="o">||</span><span class="nx">sa</span><span class="p">;</span><span class="nx">Qa</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">addLabel</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axis</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">horiz</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">categories</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">pos</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">labels</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">tickPositions</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;!</span><span class="nx">g</span><span class="p">.</span><span class="nx">step</span><span class="o">&amp;&amp;!</span><span class="nx">g</span><span class="p">.</span><span class="nx">staggerLines</span><span class="o">&amp;&amp;!</span><span class="nx">g</span><span class="p">.</span><span class="nx">rotation</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotWidth</span><span class="o">/</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">||!</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotWidth</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">f</span><span class="o">===</span><span class="nx">h</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">j</span><span class="o">=</span><span class="nx">f</span><span class="o">===</span><span class="nx">h</span><span class="p">[</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="nx">k</span><span class="o">=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">])</span><span class="o">?</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">label</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">info</span><span class="p">,</span><span class="nx">l</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">isDatetimeAxis</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">dateTimeLabelFormats</span><span class="p">[</span><span class="nx">h</span><span class="p">.</span><span class="nx">higherRanks</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">||</span><span class="nx">h</span><span class="p">.</span><span class="nx">unitName</span><span class="p">]);</span></div><div class='line' id='LC89'><span class="k">this</span><span class="p">.</span><span class="nx">isFirst</span><span class="o">=</span><span class="nx">i</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">isLast</span><span class="o">=</span><span class="nx">j</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">labelFormatter</span><span class="p">.</span><span class="nx">call</span><span class="p">({</span><span class="nx">axis</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">chart</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">isFirst</span><span class="o">:</span><span class="nx">i</span><span class="p">,</span><span class="nx">isLast</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">dateTimeLabelFormat</span><span class="o">:</span><span class="nx">l</span><span class="p">,</span><span class="nx">value</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">isLog</span><span class="o">?</span><span class="nx">da</span><span class="p">(</span><span class="nx">aa</span><span class="p">(</span><span class="nx">k</span><span class="p">))</span><span class="o">:</span><span class="nx">k</span><span class="p">});</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">{</span><span class="nx">width</span><span class="o">:</span><span class="nx">s</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nx">u</span><span class="p">(</span><span class="nx">d</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">padding</span><span class="o">||</span><span class="mi">10</span><span class="p">)))</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">};</span><span class="nx">f</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">style</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">text</span><span class="o">:</span><span class="nx">b</span><span class="p">}).</span><span class="nx">css</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="nx">d</span><span class="o">=</span><span class="p">{</span><span class="nx">align</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">align</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="nx">Da</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">rotation</span><span class="p">))</span><span class="nx">d</span><span class="p">.</span><span class="nx">rotation</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">rotation</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">label</span><span class="o">=</span><span class="nx">r</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">enabled</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">text</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">useHTML</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="nx">d</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="nx">f</span><span class="p">).</span><span class="nx">add</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">labelGroup</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">}},</span><span class="nx">getLabelSize</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">label</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axis</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">labelBBox</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getBBox</span><span class="p">())[</span><span class="nx">b</span><span class="p">.</span><span class="nx">horiz</span><span class="o">?</span><span class="s2">&quot;height&quot;</span><span class="o">:</span></div><div class='line' id='LC90'><span class="s2">&quot;width&quot;</span><span class="p">]</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span><span class="nx">getLabelSides</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axis</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">labels</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">labelBBox</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="o">*</span><span class="p">{</span><span class="nx">left</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">center</span><span class="o">:</span><span class="mf">0.5</span><span class="p">,</span><span class="nx">right</span><span class="o">:</span><span class="mi">1</span><span class="p">}[</span><span class="nx">a</span><span class="p">.</span><span class="nx">align</span><span class="p">]</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="p">;</span><span class="k">return</span><span class="p">[</span><span class="o">-</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">-</span><span class="nx">a</span><span class="p">]},</span><span class="nx">handleOverflow</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axis</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">isFirst</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">isLast</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">reversed</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">tickPositions</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">||</span><span class="nx">g</span><span class="p">){</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getLabelSides</span><span class="p">(),</span><span class="nx">l</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">k</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">plotLeft</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">e</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">len</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">ticks</span><span class="p">[</span><span class="nx">j</span><span class="p">[</span><span class="nx">a</span><span class="o">+</span><span class="p">(</span><span class="nx">f</span><span class="o">?</span><span class="mi">1</span><span class="o">:-</span><span class="mi">1</span><span class="p">)]])</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">label</span><span class="p">.</span><span class="nx">xy</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">label</span><span class="p">.</span><span class="nx">xy</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">getLabelSides</span><span class="p">()[</span><span class="nx">f</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">1</span><span class="p">];</span><span class="nx">f</span><span class="o">&amp;&amp;!</span><span class="nx">i</span><span class="o">||</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="o">?</span><span class="nx">h</span><span class="o">+</span><span class="nx">l</span><span class="o">&lt;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="o">-</span><span class="nx">l</span><span class="p">,</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="o">+</span><span class="nx">k</span><span class="o">&gt;</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=!</span><span class="mi">1</span><span class="p">))</span><span class="o">:</span><span class="nx">h</span><span class="o">+</span><span class="nx">k</span><span class="o">&gt;</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">m</span><span class="o">-</span><span class="nx">k</span><span class="p">,</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="o">+</span><span class="nx">l</span><span class="o">&lt;</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span></div><div class='line' id='LC91'><span class="o">!</span><span class="mi">1</span><span class="p">));</span><span class="nx">b</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">h</span><span class="p">}</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">getPosition</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axis</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">oldChartHeight</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">chartHeight</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">a</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">c</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">transB</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">left</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">offset</span><span class="o">+</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">opposite</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">oldChartWidth</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">chartWidth</span><span class="p">)</span><span class="o">-</span><span class="nx">e</span><span class="p">.</span><span class="nx">right</span><span class="o">-</span><span class="nx">e</span><span class="p">.</span><span class="nx">left</span><span class="o">:</span><span class="mi">0</span><span class="p">),</span><span class="nx">y</span><span class="o">:</span><span class="nx">a</span><span class="o">?</span><span class="nx">g</span><span class="o">-</span><span class="nx">e</span><span class="p">.</span><span class="nx">bottom</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">offset</span><span class="o">-</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">opposite</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">height</span><span class="o">:</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">g</span><span class="o">-</span><span class="nx">e</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">c</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">-</span><span class="nx">e</span><span class="p">.</span><span class="nx">transB</span><span class="p">}},</span><span class="nx">getLabelPosition</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axis</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">transA</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">reversed</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">staggerLines</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="p">(</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">?</span><span class="nx">f</span><span class="o">*</span><span class="nx">j</span><span class="o">*</span><span class="p">(</span><span class="nx">k</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="mi">0</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="p">(</span><span class="nx">f</span><span class="o">&amp;&amp;!</span><span class="nx">d</span><span class="o">?</span><span class="nx">f</span><span class="o">*</span><span class="nx">j</span><span class="o">*</span><span class="p">(</span><span class="nx">k</span><span class="o">?</span><span class="mi">1</span><span class="o">:-</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="mi">0</span><span class="p">);</span><span class="nx">r</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">y</span><span class="p">)</span><span class="o">||</span></div><div class='line' id='LC92'><span class="p">(</span><span class="nx">b</span><span class="o">+=</span><span class="nx">z</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">styles</span><span class="p">.</span><span class="nx">lineHeight</span><span class="p">)</span><span class="o">*</span><span class="mf">0.9</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">getBBox</span><span class="p">().</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">);</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">+=</span><span class="nx">g</span><span class="o">/</span><span class="p">(</span><span class="nx">h</span><span class="o">||</span><span class="mi">1</span><span class="p">)</span><span class="o">%</span><span class="nx">i</span><span class="o">*</span><span class="mi">16</span><span class="p">);</span><span class="k">return</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">b</span><span class="p">}},</span><span class="nx">getMarkPath</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nx">crispLine</span><span class="p">([</span><span class="s2">&quot;M&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;L&quot;</span><span class="p">,</span><span class="nx">a</span><span class="o">+</span><span class="p">(</span><span class="nx">e</span><span class="o">?</span><span class="mi">0</span><span class="o">:-</span><span class="nx">c</span><span class="p">),</span><span class="nx">b</span><span class="o">+</span><span class="p">(</span><span class="nx">e</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="mi">0</span><span class="p">)],</span><span class="nx">d</span><span class="p">)},</span><span class="nx">render</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axis</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">renderer</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">horiz</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">label</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">pos</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">labels</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">gridLine</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">g</span><span class="o">?</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot;Grid&quot;</span><span class="o">:</span><span class="s2">&quot;grid&quot;</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">g</span><span class="o">?</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot;Tick&quot;</span><span class="o">:</span><span class="s2">&quot;tick&quot;</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot;LineWidth&quot;</span><span class="p">],</span><span class="nx">p</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot;LineColor&quot;</span><span class="p">],</span><span class="nx">y</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">l</span><span class="o">+</span><span class="s2">&quot;LineDashStyle&quot;</span><span class="p">],</span><span class="nx">t</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">m</span><span class="o">+</span><span class="s2">&quot;Length&quot;</span><span class="p">],</span><span class="nx">l</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">m</span><span class="o">+</span><span class="s2">&quot;Width&quot;</span><span class="p">]</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">m</span><span class="o">+</span><span class="s2">&quot;Color&quot;</span><span class="p">],</span><span class="nx">r</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">m</span><span class="o">+</span><span class="s2">&quot;Position&quot;</span><span class="p">],</span><span class="nx">m</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">mark</span><span class="p">,</span></div><div class='line' id='LC93'><span class="nx">v</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">step</span><span class="p">,</span><span class="nx">s</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">tickmarkOffset</span><span class="p">,</span><span class="nx">E</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getPosition</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">u</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">S</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">E</span><span class="o">=</span><span class="nx">E</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">staggerLines</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="p">){</span><span class="nx">i</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">getPlotLinePath</span><span class="p">(</span><span class="nx">i</span><span class="o">+</span><span class="nx">u</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="o">===</span><span class="nx">A</span><span class="p">){</span><span class="nx">k</span><span class="o">=</span><span class="p">{</span><span class="nx">stroke</span><span class="o">:</span><span class="nx">p</span><span class="p">,</span><span class="s2">&quot;stroke-width&quot;</span><span class="o">:</span><span class="nx">q</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="p">)</span><span class="nx">k</span><span class="p">.</span><span class="nx">dashstyle</span><span class="o">=</span><span class="nx">y</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">g</span><span class="p">)</span><span class="nx">k</span><span class="p">.</span><span class="nx">zIndex</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">gridLine</span><span class="o">=</span><span class="nx">k</span><span class="o">=</span><span class="nx">q</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">path</span><span class="p">(</span><span class="nx">i</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="nx">k</span><span class="p">).</span><span class="nx">add</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">gridGroup</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">)</span><span class="nx">k</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">isNew</span><span class="o">?</span><span class="s2">&quot;attr&quot;</span><span class="o">:</span><span class="s2">&quot;animate&quot;</span><span class="p">]({</span><span class="nx">d</span><span class="o">:</span><span class="nx">i</span><span class="p">})}</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">)</span><span class="nx">r</span><span class="o">===</span><span class="s2">&quot;inside&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="o">=-</span><span class="nx">t</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">opposite</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="o">=-</span><span class="nx">t</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getMarkPath</span><span class="p">(</span><span class="nx">S</span><span class="p">,</span><span class="nx">E</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">m</span><span class="o">?</span><span class="nx">m</span><span class="p">.</span><span class="nx">animate</span><span class="p">({</span><span class="nx">d</span><span class="o">:</span><span class="nx">g</span><span class="p">})</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">mark</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">path</span><span class="p">(</span><span class="nx">g</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">stroke</span><span class="o">:</span><span class="nx">o</span><span class="p">,</span><span class="s2">&quot;stroke-width&quot;</span><span class="o">:</span><span class="nx">l</span><span class="p">}).</span><span class="nx">add</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">axisGroup</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">&amp;&amp;!</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">S</span><span class="p">))</span><span class="nx">h</span><span class="p">.</span><span class="nx">xy</span><span class="o">=</span><span class="nx">E</span><span class="o">=</span></div><div class='line' id='LC94'><span class="k">this</span><span class="p">.</span><span class="nx">getLabelPosition</span><span class="p">(</span><span class="nx">S</span><span class="p">,</span><span class="nx">E</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">u</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">v</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">isFirst</span><span class="o">&amp;&amp;!</span><span class="nx">n</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">showFirstLabel</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">isLast</span><span class="o">&amp;&amp;!</span><span class="nx">n</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">showLastLabel</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">?</span><span class="nx">s</span><span class="o">=!</span><span class="mi">1</span><span class="o">:!</span><span class="nx">x</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">.</span><span class="nx">overflow</span><span class="o">===</span><span class="s2">&quot;justify&quot;</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">handleOverflow</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">E</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">s</span><span class="o">=!</span><span class="mi">1</span><span class="p">),</span><span class="nx">v</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">%</span><span class="nx">v</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">s</span><span class="o">=!</span><span class="mi">1</span><span class="p">),</span><span class="nx">s</span><span class="o">?</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">isNew</span><span class="o">?</span><span class="s2">&quot;attr&quot;</span><span class="o">:</span><span class="s2">&quot;animate&quot;</span><span class="p">](</span><span class="nx">E</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">isNew</span><span class="o">=!</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">h</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;y&quot;</span><span class="p">,</span><span class="o">-</span><span class="mi">9999</span><span class="p">)},</span><span class="nx">destroy</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">Ga</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">axis</span><span class="p">)}};</span><span class="nx">nb</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">render</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axis</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">horiz</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">pointRange</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">label</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">label</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">to</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">from</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">r</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">dashStyle</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">svgElem</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span></div><div class='line' id='LC95'><span class="p">[],</span><span class="nx">y</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">color</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">zIndex</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">events</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">renderer</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">isLog</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">ka</span><span class="p">(</span><span class="nx">j</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">ka</span><span class="p">(</span><span class="nx">i</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="nx">ka</span><span class="p">(</span><span class="nx">l</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">getPlotLinePath</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">h</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="p">{</span><span class="nx">stroke</span><span class="o">:</span><span class="nx">t</span><span class="p">,</span><span class="s2">&quot;stroke-width&quot;</span><span class="o">:</span><span class="nx">h</span><span class="p">},</span><span class="nx">m</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">dashstyle</span><span class="o">=</span><span class="nx">m</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">min</span><span class="o">-</span><span class="nx">d</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">O</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="o">+</span><span class="nx">d</span><span class="p">),</span><span class="nx">p</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">getPlotBandPath</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="p">{</span><span class="nx">fill</span><span class="o">:</span><span class="nx">t</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">borderWidth</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">stroke</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">borderColor</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="s2">&quot;stroke-width&quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">borderWidth</span><span class="p">}</span><span class="k">else</span> <span class="k">return</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">(</span><span class="nx">o</span><span class="p">))</span><span class="nx">d</span><span class="p">.</span><span class="nx">zIndex</span><span class="o">=</span><span class="nx">o</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="p">)</span><span class="nx">p</span><span class="o">?</span><span class="nx">q</span><span class="p">.</span><span class="nx">animate</span><span class="p">({</span><span class="nx">d</span><span class="o">:</span><span class="nx">p</span><span class="p">},</span><span class="kc">null</span><span class="p">,</span><span class="nx">q</span><span class="p">.</span><span class="nx">onGetPath</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">q</span><span class="p">.</span><span class="nx">hide</span><span class="p">(),</span><span class="nx">q</span><span class="p">.</span><span class="nx">onGetPath</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">q</span><span class="p">.</span><span class="nx">show</span><span class="p">()});</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">svgElem</span><span class="o">=</span><span class="nx">q</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">path</span><span class="p">(</span><span class="nx">p</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="nx">d</span><span class="p">).</span><span class="nx">add</span><span class="p">(),</span><span class="nx">u</span><span class="p">))</span><span class="k">for</span><span class="p">(</span><span class="nx">y</span> <span class="k">in</span> <span class="nx">e</span><span class="o">=</span></div><div class='line' id='LC96'><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">q</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">u</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,[</span><span class="nx">c</span><span class="p">])})},</span><span class="nx">u</span><span class="p">)</span><span class="nx">e</span><span class="p">(</span><span class="nx">y</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">text</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nx">B</span><span class="p">({</span><span class="nx">align</span><span class="o">:</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="s2">&quot;center&quot;</span><span class="p">,</span><span class="nx">x</span><span class="o">:</span><span class="nx">c</span><span class="o">?!</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="mi">4</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span><span class="nx">verticalAlign</span><span class="o">:!</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="s2">&quot;middle&quot;</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">c</span><span class="o">?</span><span class="nx">k</span><span class="o">?</span><span class="mi">16</span><span class="o">:</span><span class="mi">10</span><span class="o">:</span><span class="nx">k</span><span class="o">?</span><span class="mi">6</span><span class="o">:-</span><span class="mi">4</span><span class="p">,</span><span class="nx">rotation</span><span class="o">:</span><span class="nx">c</span><span class="o">&amp;&amp;!</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="mi">90</span><span class="p">},</span><span class="nx">f</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">g</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">label</span><span class="o">=</span><span class="nx">g</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">text</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">text</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">align</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">textAlign</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">align</span><span class="p">,</span><span class="nx">rotation</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">rotation</span><span class="p">,</span><span class="nx">zIndex</span><span class="o">:</span><span class="nx">o</span><span class="p">}).</span><span class="nx">css</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">style</span><span class="p">).</span><span class="nx">add</span><span class="p">();</span><span class="nx">b</span><span class="o">=</span><span class="p">[</span><span class="nx">p</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">p</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="nx">n</span><span class="p">(</span><span class="nx">p</span><span class="p">[</span><span class="mi">6</span><span class="p">],</span><span class="nx">p</span><span class="p">[</span><span class="mi">1</span><span class="p">])];</span><span class="nx">p</span><span class="o">=</span><span class="p">[</span><span class="nx">p</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">p</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span><span class="nx">n</span><span class="p">(</span><span class="nx">p</span><span class="p">[</span><span class="mi">7</span><span class="p">],</span><span class="nx">p</span><span class="p">[</span><span class="mi">2</span><span class="p">])];</span><span class="nx">c</span><span class="o">=</span><span class="nx">Fa</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">k</span><span class="o">=</span><span class="nx">Fa</span><span class="p">(</span><span class="nx">p</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">align</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,{</span><span class="nx">x</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">wa</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="o">-</span><span class="nx">c</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">wa</span><span class="p">(</span><span class="nx">p</span><span class="p">)</span><span class="o">-</span><span class="nx">k</span><span class="p">});</span><span class="nx">g</span><span class="p">.</span><span class="nx">show</span><span class="p">()}</span><span class="k">else</span> <span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">hide</span><span class="p">();</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">destroy</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">ta</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">axis</span><span class="p">.</span><span class="nx">plotLinesAndBands</span><span class="p">,</span></div><div class='line' id='LC97'><span class="k">this</span><span class="p">);</span><span class="nx">Ga</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">axis</span><span class="p">)}};</span><span class="nx">Kb</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">destroy</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">Ga</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">axis</span><span class="p">)},</span><span class="nx">setTotal</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">cum</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">total</span><span class="o">=</span><span class="nx">a</span><span class="p">},</span><span class="nx">render</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">formatter</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">label</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">label</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">text</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">visibility</span><span class="o">:</span><span class="s2">&quot;hidden&quot;</span><span class="p">})</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">label</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axis</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">text</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">style</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">align</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">textAlign</span><span class="p">,</span><span class="nx">rotation</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">rotation</span><span class="p">,</span><span class="nx">visibility</span><span class="o">:</span><span class="s2">&quot;hidden&quot;</span><span class="p">}).</span><span class="nx">add</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">setOffset</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axis</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">inverted</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">isNegative</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">percent</span><span class="o">?</span></div><div class='line' id='LC98'><span class="mi">100</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">total</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="nx">g</span><span class="o">-</span><span class="nx">c</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">xAxis</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">translate</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="p">)</span><span class="o">+</span><span class="nx">a</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">plotHeight</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">e</span><span class="o">?</span><span class="nx">f</span><span class="o">?</span><span class="nx">g</span><span class="o">:</span><span class="nx">g</span><span class="o">-</span><span class="nx">c</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">e</span><span class="o">?</span><span class="nx">i</span><span class="o">-</span><span class="nx">h</span><span class="o">-</span><span class="nx">b</span><span class="o">:</span><span class="nx">f</span><span class="o">?</span><span class="nx">i</span><span class="o">-</span><span class="nx">g</span><span class="o">-</span><span class="nx">c</span><span class="o">:</span><span class="nx">i</span><span class="o">-</span><span class="nx">g</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">e</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">e</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="nx">c</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">label</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">align</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">alignOptions</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">f</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">alignAttr</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">visibility</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">crop</span><span class="o">===!</span><span class="mi">1</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">isInsidePlot</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">y</span><span class="p">)</span><span class="o">?</span><span class="nx">ca</span><span class="o">?</span><span class="s2">&quot;inherit&quot;</span><span class="o">:</span><span class="s2">&quot;visible&quot;</span><span class="o">:</span><span class="s2">&quot;hidden&quot;</span><span class="p">})}};</span><span class="nx">ob</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">defaultOptions</span><span class="o">:</span><span class="p">{</span><span class="nx">dateTimeLabelFormats</span><span class="o">:</span><span class="p">{</span><span class="nx">millisecond</span><span class="o">:</span><span class="s2">&quot;%H:%M:%S.%L&quot;</span><span class="p">,</span><span class="nx">second</span><span class="o">:</span><span class="s2">&quot;%H:%M:%S&quot;</span><span class="p">,</span><span class="nx">minute</span><span class="o">:</span><span class="s2">&quot;%H:%M&quot;</span><span class="p">,</span><span class="nx">hour</span><span class="o">:</span><span class="s2">&quot;%H:%M&quot;</span><span class="p">,</span><span class="nx">day</span><span class="o">:</span><span class="s2">&quot;%e. %b&quot;</span><span class="p">,</span><span class="nx">week</span><span class="o">:</span><span class="s2">&quot;%e. %b&quot;</span><span class="p">,</span><span class="nx">month</span><span class="o">:</span><span class="s2">&quot;%b &#39;%y&quot;</span><span class="p">,</span><span class="nx">year</span><span class="o">:</span><span class="s2">&quot;%Y&quot;</span><span class="p">},</span></div><div class='line' id='LC99'><span class="nx">endOnTick</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">gridLineColor</span><span class="o">:</span><span class="s2">&quot;#C0C0C0&quot;</span><span class="p">,</span><span class="nx">labels</span><span class="o">:</span><span class="nx">G</span><span class="p">,</span><span class="nx">lineColor</span><span class="o">:</span><span class="s2">&quot;#C0D0E0&quot;</span><span class="p">,</span><span class="nx">lineWidth</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">minPadding</span><span class="o">:</span><span class="mf">0.01</span><span class="p">,</span><span class="nx">maxPadding</span><span class="o">:</span><span class="mf">0.01</span><span class="p">,</span><span class="nx">minorGridLineColor</span><span class="o">:</span><span class="s2">&quot;#E0E0E0&quot;</span><span class="p">,</span><span class="nx">minorGridLineWidth</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">minorTickColor</span><span class="o">:</span><span class="s2">&quot;#A0A0A0&quot;</span><span class="p">,</span><span class="nx">minorTickLength</span><span class="o">:</span><span class="mi">2</span><span class="p">,</span><span class="nx">minorTickPosition</span><span class="o">:</span><span class="s2">&quot;outside&quot;</span><span class="p">,</span><span class="nx">startOfWeek</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">startOnTick</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">tickColor</span><span class="o">:</span><span class="s2">&quot;#C0D0E0&quot;</span><span class="p">,</span><span class="nx">tickLength</span><span class="o">:</span><span class="mi">5</span><span class="p">,</span><span class="nx">tickmarkPlacement</span><span class="o">:</span><span class="s2">&quot;between&quot;</span><span class="p">,</span><span class="nx">tickPixelInterval</span><span class="o">:</span><span class="mi">100</span><span class="p">,</span><span class="nx">tickPosition</span><span class="o">:</span><span class="s2">&quot;outside&quot;</span><span class="p">,</span><span class="nx">tickWidth</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">title</span><span class="o">:</span><span class="p">{</span><span class="nx">align</span><span class="o">:</span><span class="s2">&quot;middle&quot;</span><span class="p">,</span><span class="nx">style</span><span class="o">:</span><span class="p">{</span><span class="nx">color</span><span class="o">:</span><span class="s2">&quot;#6D869F&quot;</span><span class="p">,</span><span class="nx">fontWeight</span><span class="o">:</span><span class="s2">&quot;bold&quot;</span><span class="p">}},</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;linear&quot;</span><span class="p">},</span><span class="nx">defaultYAxisOptions</span><span class="o">:</span><span class="p">{</span><span class="nx">endOnTick</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">gridLineWidth</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span></div><div class='line' id='LC100'><span class="nx">tickPixelInterval</span><span class="o">:</span><span class="mi">72</span><span class="p">,</span><span class="nx">showLastLabel</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">labels</span><span class="o">:</span><span class="p">{</span><span class="nx">align</span><span class="o">:</span><span class="s2">&quot;right&quot;</span><span class="p">,</span><span class="nx">x</span><span class="o">:-</span><span class="mi">8</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">3</span><span class="p">},</span><span class="nx">lineWidth</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">maxPadding</span><span class="o">:</span><span class="mf">0.05</span><span class="p">,</span><span class="nx">minPadding</span><span class="o">:</span><span class="mf">0.05</span><span class="p">,</span><span class="nx">startOnTick</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">tickWidth</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">title</span><span class="o">:</span><span class="p">{</span><span class="nx">rotation</span><span class="o">:</span><span class="mi">270</span><span class="p">,</span><span class="nx">text</span><span class="o">:</span><span class="s2">&quot;Y-values&quot;</span><span class="p">},</span><span class="nx">stackLabels</span><span class="o">:</span><span class="p">{</span><span class="nx">enabled</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">formatter</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">total</span><span class="p">},</span><span class="nx">style</span><span class="o">:</span><span class="nx">G</span><span class="p">.</span><span class="nx">style</span><span class="p">}},</span><span class="nx">defaultLeftAxisOptions</span><span class="o">:</span><span class="p">{</span><span class="nx">labels</span><span class="o">:</span><span class="p">{</span><span class="nx">align</span><span class="o">:</span><span class="s2">&quot;right&quot;</span><span class="p">,</span><span class="nx">x</span><span class="o">:-</span><span class="mi">8</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">title</span><span class="o">:</span><span class="p">{</span><span class="nx">rotation</span><span class="o">:</span><span class="mi">270</span><span class="p">}},</span><span class="nx">defaultRightAxisOptions</span><span class="o">:</span><span class="p">{</span><span class="nx">labels</span><span class="o">:</span><span class="p">{</span><span class="nx">align</span><span class="o">:</span><span class="s2">&quot;left&quot;</span><span class="p">,</span><span class="nx">x</span><span class="o">:</span><span class="mi">8</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">title</span><span class="o">:</span><span class="p">{</span><span class="nx">rotation</span><span class="o">:</span><span class="mi">90</span><span class="p">}},</span><span class="nx">defaultBottomAxisOptions</span><span class="o">:</span><span class="p">{</span><span class="nx">labels</span><span class="o">:</span><span class="p">{</span><span class="nx">align</span><span class="o">:</span><span class="s2">&quot;center&quot;</span><span class="p">,</span><span class="nx">x</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">14</span><span class="p">},</span><span class="nx">title</span><span class="o">:</span><span class="p">{</span><span class="nx">rotation</span><span class="o">:</span><span class="mi">0</span><span class="p">}},</span><span class="nx">defaultTopAxisOptions</span><span class="o">:</span><span class="p">{</span><span class="nx">labels</span><span class="o">:</span><span class="p">{</span><span class="nx">align</span><span class="o">:</span><span class="s2">&quot;center&quot;</span><span class="p">,</span></div><div class='line' id='LC101'><span class="nx">x</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">y</span><span class="o">:-</span><span class="mi">5</span><span class="p">},</span><span class="nx">title</span><span class="o">:</span><span class="p">{</span><span class="nx">rotation</span><span class="o">:</span><span class="mi">0</span><span class="p">}},</span><span class="nx">init</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">isX</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">horiz</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">inverted</span><span class="o">?!</span><span class="nx">c</span><span class="o">:</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">xOrY</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">isXAxis</span><span class="o">=</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;x&quot;</span><span class="o">:</span><span class="s2">&quot;y&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">opposite</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">opposite</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">side</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">horiz</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">opposite</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">2</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">opposite</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="mi">3</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">setOptions</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="o">===</span><span class="s2">&quot;datetime&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">labelFormatter</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">labels</span><span class="p">.</span><span class="nx">formatter</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">defaultLabelFormatter</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">staggerLines</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">horiz</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">labels</span><span class="p">.</span><span class="nx">staggerLines</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">userOptions</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">minPixelPadding</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">reversed</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">reversed</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">categories</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">categories</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">isLog</span><span class="o">=</span></div><div class='line' id='LC102'><span class="nx">e</span><span class="o">===</span><span class="s2">&quot;logarithmic&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">isLinked</span><span class="o">=</span><span class="nx">r</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">linkedTo</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">isDatetimeAxis</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">tickmarkOffset</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">categories</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">tickmarkPlacement</span><span class="o">===</span><span class="s2">&quot;between&quot;</span><span class="o">?</span><span class="mf">0.5</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">ticks</span><span class="o">=</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">minorTicks</span><span class="o">=</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">plotLinesAndBands</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">alternateBands</span><span class="o">=</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">len</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">minRange</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">userMinRange</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">minRange</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">maxZoom</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">range</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">range</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">offset</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">offset</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">stacks</span><span class="o">=</span><span class="p">{};</span><span class="k">this</span><span class="p">.</span><span class="nx">min</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">max</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="kd">var</span> <span class="nx">g</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">events</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axes</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">?</span><span class="s2">&quot;xAxis&quot;</span><span class="o">:</span><span class="s2">&quot;yAxis&quot;</span><span class="p">].</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">series</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">inverted</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">reversed</span><span class="o">===</span><span class="nx">A</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">reversed</span><span class="o">=</span></div><div class='line' id='LC103'><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">removePlotLine</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">removePlotBand</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">removePlotBandOrLine</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">addPlotLine</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">addPlotBand</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">addPlotBandOrLine</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span> <span class="k">in</span> <span class="nx">d</span><span class="p">)</span><span class="nx">J</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">g</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">isLog</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">val2lin</span><span class="o">=</span><span class="nx">ka</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">lin2val</span><span class="o">=</span><span class="nx">aa</span><span class="p">},</span><span class="nx">setOptions</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">defaultOptions</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">isXAxis</span><span class="o">?</span><span class="p">{}</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">defaultYAxisOptions</span><span class="p">,[</span><span class="k">this</span><span class="p">.</span><span class="nx">defaultTopAxisOptions</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">defaultRightAxisOptions</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">defaultBottomAxisOptions</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">defaultLeftAxisOptions</span><span class="p">][</span><span class="k">this</span><span class="p">.</span><span class="nx">side</span><span class="p">],</span><span class="nx">B</span><span class="p">(</span><span class="nx">N</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">isXAxis</span><span class="o">?</span><span class="s2">&quot;xAxis&quot;</span><span class="o">:</span><span class="s2">&quot;yAxis&quot;</span><span class="p">],</span><span class="nx">a</span><span class="p">))},</span><span class="nx">defaultLabelFormatter</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span></div><div class='line' id='LC104'><span class="k">this</span><span class="p">.</span><span class="nx">axis</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">value</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">dateTimeLabelFormat</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">numericSymbols</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">isLog</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">tickInterval</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">categories</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">db</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="o">&gt;=</span><span class="mi">1</span><span class="nx">E3</span><span class="p">)</span><span class="k">for</span><span class="p">(;</span><span class="nx">e</span><span class="o">--&amp;&amp;</span><span class="nx">f</span><span class="o">===</span><span class="nx">A</span><span class="p">;)</span><span class="nx">a</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">1</span><span class="nx">E3</span><span class="p">,</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="nx">g</span><span class="o">&gt;=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">!==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">Ja</span><span class="p">(</span><span class="nx">b</span><span class="o">/</span><span class="nx">a</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">+</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">]);</span><span class="nx">f</span><span class="o">===</span><span class="nx">A</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="o">&gt;=</span><span class="mi">1</span><span class="nx">E3</span><span class="o">?</span><span class="nx">Ja</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">Ja</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">));</span><span class="k">return</span> <span class="nx">f</span><span class="p">},</span><span class="nx">getSeriesExtremes</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">stacks</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">f</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasVisibleSeries</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataMin</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataMax</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">visible</span><span class="o">||!</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">ignoreHiddenSeries</span><span class="p">){</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span></div><div class='line' id='LC105'><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">q</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">y</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">threshold</span><span class="p">,</span><span class="nx">u</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="p">[],</span><span class="nx">x</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasVisibleSeries</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">isLog</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="o">&lt;=</span><span class="mi">0</span><span class="p">)</span><span class="nx">o</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">threshold</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">isXAxis</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">xData</span><span class="p">,</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataMin</span><span class="o">=</span><span class="nx">O</span><span class="p">(</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataMin</span><span class="p">,</span><span class="nx">h</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="nx">Fa</span><span class="p">(</span><span class="nx">h</span><span class="p">)),</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataMax</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataMax</span><span class="p">,</span><span class="nx">h</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="nx">wa</span><span class="p">(</span><span class="nx">h</span><span class="p">))}</span><span class="k">else</span><span class="p">{</span><span class="kd">var</span> <span class="nx">z</span><span class="p">,</span><span class="nx">E</span><span class="p">,</span><span class="nx">S</span><span class="p">,</span><span class="nx">w</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">cropped</span><span class="p">,</span><span class="nx">B</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">xAxis</span><span class="p">.</span><span class="nx">getExtremes</span><span class="p">(),</span><span class="nx">C</span><span class="o">=!!</span><span class="nx">g</span><span class="p">.</span><span class="nx">modifyValue</span><span class="p">;</span><span class="nx">i</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">stacking</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">usePercentage</span><span class="o">=</span><span class="nx">i</span><span class="o">===</span><span class="s2">&quot;percent&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span><span class="nx">m</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">stack</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">type</span><span class="o">+</span><span class="nx">n</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">q</span><span class="o">=</span><span class="s2">&quot;-&quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">stackKey</span><span class="o">=</span><span class="nx">l</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">||</span><span class="p">[],</span><span class="nx">d</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">=</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">q</span><span class="p">]</span><span class="o">||</span><span class="p">[],</span><span class="nx">e</span><span class="p">[</span><span class="nx">q</span><span class="p">]</span><span class="o">=</span><span class="nx">k</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">usePercentage</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataMin</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataMax</span><span class="o">=</span><span class="mi">99</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">processedXData</span><span class="p">;</span><span class="nx">p</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">processedYData</span><span class="p">;</span><span class="nx">u</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span></div><div class='line' id='LC106'><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">u</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">t</span><span class="o">=</span><span class="nx">p</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">E</span><span class="o">=</span><span class="p">(</span><span class="nx">z</span><span class="o">=</span><span class="nx">t</span><span class="o">&lt;</span><span class="nx">o</span><span class="p">)</span><span class="o">?</span><span class="nx">k</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">S</span><span class="o">=</span><span class="nx">z</span><span class="o">?</span><span class="nx">q</span><span class="o">:</span><span class="nx">l</span><span class="p">,</span><span class="nx">r</span><span class="p">(</span><span class="nx">E</span><span class="p">[</span><span class="nx">y</span><span class="p">])</span><span class="o">?</span><span class="p">(</span><span class="nx">E</span><span class="p">[</span><span class="nx">y</span><span class="p">]</span><span class="o">=</span><span class="nx">da</span><span class="p">(</span><span class="nx">E</span><span class="p">[</span><span class="nx">y</span><span class="p">]</span><span class="o">+</span><span class="nx">t</span><span class="p">),</span><span class="nx">t</span><span class="o">=</span><span class="p">[</span><span class="nx">t</span><span class="p">,</span><span class="nx">E</span><span class="p">[</span><span class="nx">y</span><span class="p">]])</span><span class="o">:</span><span class="nx">E</span><span class="p">[</span><span class="nx">y</span><span class="p">]</span><span class="o">=</span><span class="nx">t</span><span class="p">,</span><span class="nx">c</span><span class="p">[</span><span class="nx">S</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">S</span><span class="p">]</span><span class="o">=</span><span class="p">{}),</span><span class="nx">c</span><span class="p">[</span><span class="nx">S</span><span class="p">][</span><span class="nx">y</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">S</span><span class="p">][</span><span class="nx">y</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nx">Kb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">stackLabels</span><span class="p">,</span><span class="nx">z</span><span class="p">,</span><span class="nx">y</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">i</span><span class="p">)),</span><span class="nx">c</span><span class="p">[</span><span class="nx">S</span><span class="p">][</span><span class="nx">y</span><span class="p">].</span><span class="nx">setTotal</span><span class="p">(</span><span class="nx">E</span><span class="p">[</span><span class="nx">y</span><span class="p">])),</span><span class="nx">t</span><span class="o">!==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="o">!==</span><span class="nx">A</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">C</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">modifyValue</span><span class="p">(</span><span class="nx">t</span><span class="p">)),</span><span class="nx">w</span><span class="o">||</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="nx">f</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">||</span><span class="nx">y</span><span class="p">)</span><span class="o">&gt;=</span><span class="nx">B</span><span class="p">.</span><span class="nx">min</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="nx">f</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">||</span><span class="nx">y</span><span class="p">)</span><span class="o">&lt;=</span><span class="nx">B</span><span class="p">.</span><span class="nx">max</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">y</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="k">for</span><span class="p">(;</span><span class="nx">y</span><span class="o">--</span><span class="p">;)</span><span class="nx">t</span><span class="p">[</span><span class="nx">y</span><span class="p">]</span><span class="o">!==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">v</span><span class="p">[</span><span class="nx">x</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">y</span><span class="p">]);</span><span class="k">else</span> <span class="nx">v</span><span class="p">[</span><span class="nx">x</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">t</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">usePercentage</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataMin</span><span class="o">=</span><span class="nx">O</span><span class="p">(</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataMin</span><span class="p">,</span><span class="nx">v</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="nx">Fa</span><span class="p">(</span><span class="nx">v</span><span class="p">)),</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataMax</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataMax</span><span class="p">,</span><span class="nx">v</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="nx">wa</span><span class="p">(</span><span class="nx">v</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">(</span><span class="nx">o</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataMin</span><span class="o">&gt;=</span><span class="nx">o</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataMin</span><span class="o">=</span><span class="nx">o</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">ignoreMinPadding</span><span class="o">=</span></div><div class='line' id='LC107'><span class="o">!</span><span class="mi">0</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataMax</span><span class="o">&lt;</span><span class="nx">o</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataMax</span><span class="o">=</span><span class="nx">o</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">ignoreMaxPadding</span><span class="o">=!</span><span class="mi">0</span><span class="p">}}})},</span><span class="nx">translate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">len</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">d</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">oldTransA</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">transA</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">oldMin</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">min</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">ordinal</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">isLog</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">j</span><span class="p">)</span><span class="nx">j</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">transA</span><span class="p">;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">*=-</span><span class="mi">1</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">g</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">reversed</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">*=-</span><span class="mi">1</span><span class="p">,</span><span class="nx">i</span><span class="o">-=</span><span class="nx">h</span><span class="o">*</span><span class="nx">g</span><span class="p">);</span><span class="nx">b</span><span class="o">?</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">reversed</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">g</span><span class="o">-</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">/</span><span class="nx">j</span><span class="o">+</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">lin2val</span><span class="p">(</span><span class="nx">a</span><span class="p">)))</span><span class="o">:</span><span class="p">(</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">val2lin</span><span class="p">(</span><span class="nx">a</span><span class="p">)),</span><span class="nx">a</span><span class="o">=</span><span class="nx">h</span><span class="o">*</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="nx">d</span><span class="p">)</span><span class="o">*</span><span class="nx">j</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="nx">h</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">minPixelPadding</span><span class="o">+</span><span class="p">(</span><span class="nx">f</span><span class="o">?</span><span class="nx">j</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">pointRange</span><span class="o">/</span><span class="mi">2</span><span class="o">:</span><span class="mi">0</span><span class="p">));</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">getPlotLinePath</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">left</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">top</span><span class="p">,</span></div><div class='line' id='LC108'><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">oldChartHeight</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">chartHeight</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">oldChartWidth</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">chartWidth</span><span class="p">,</span><span class="nx">l</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">transB</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">h</span><span class="o">=</span><span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="nx">g</span><span class="p">);</span><span class="nx">g</span><span class="o">=</span><span class="nx">i</span><span class="o">=</span><span class="nx">u</span><span class="p">(</span><span class="nx">j</span><span class="o">-</span><span class="nx">a</span><span class="o">-</span><span class="nx">g</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="nx">l</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">horiz</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">j</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">bottom</span><span class="p">,</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">e</span><span class="o">||</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">e</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="p">)</span><span class="nx">l</span><span class="o">=!</span><span class="mi">0</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">k</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">right</span><span class="p">,</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">f</span><span class="o">||</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">f</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">)</span><span class="nx">l</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="nx">l</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">crispLine</span><span class="p">([</span><span class="s2">&quot;M&quot;</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="s2">&quot;L&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">],</span><span class="nx">b</span><span class="o">||</span><span class="mi">0</span><span class="p">)},</span><span class="nx">getPlotBandPath</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getPlotLinePath</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getPlotLinePath</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="nx">c</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span><span class="nx">c</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">c</span><span class="p">[</span><span class="mi">2</span><span class="p">])</span><span class="o">:</span><span class="nx">d</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">return</span> <span class="nx">d</span><span class="p">},</span><span class="nx">getLinearTickPositions</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC109'><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">da</span><span class="p">(</span><span class="nx">U</span><span class="p">(</span><span class="nx">b</span><span class="o">/</span><span class="nx">a</span><span class="p">)</span><span class="o">*</span><span class="nx">a</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">da</span><span class="p">(</span><span class="nx">za</span><span class="p">(</span><span class="nx">c</span><span class="o">/</span><span class="nx">a</span><span class="p">)</span><span class="o">*</span><span class="nx">a</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="p">[];</span><span class="nx">b</span><span class="o">&lt;=</span><span class="nx">c</span><span class="p">;){</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">b</span><span class="o">=</span><span class="nx">da</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">===</span><span class="nx">d</span><span class="p">)</span><span class="k">break</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="k">return</span> <span class="nx">e</span><span class="p">},</span><span class="nx">getLogTickPositions</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">len</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_minorAutoInterval</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&gt;=</span><span class="mf">0.5</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getLinearTickPositions</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&gt;=</span><span class="mf">0.08</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">U</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="o">&gt;</span><span class="mf">0.3</span><span class="o">?</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">]</span><span class="o">:</span><span class="nx">a</span><span class="o">&gt;</span><span class="mf">0.15</span><span class="o">?</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">8</span><span class="p">]</span><span class="o">:</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">,</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">];</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">c</span><span class="o">+</span><span class="mi">1</span><span class="o">&amp;&amp;!</span><span class="nx">l</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">){</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">i</span><span class="o">&amp;&amp;!</span><span class="nx">l</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">)</span><span class="nx">j</span><span class="o">=</span><span class="nx">ka</span><span class="p">(</span><span class="nx">aa</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">*</span><span class="nx">e</span><span class="p">[</span><span class="nx">h</span><span class="p">]),</span><span class="nx">j</span><span class="o">&gt;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">k</span><span class="p">),</span><span class="nx">k</span><span class="o">&gt;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="o">=!</span><span class="mi">0</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nx">j</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">aa</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="nx">aa</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">d</span><span class="o">?</span><span class="s2">&quot;minorTickInterval&quot;</span><span class="o">:</span></div><div class='line' id='LC110'><span class="s2">&quot;tickInterval&quot;</span><span class="p">],</span><span class="nx">a</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="o">===</span><span class="s2">&quot;auto&quot;</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">_minorAutoInterval</span><span class="p">,(</span><span class="nx">c</span><span class="o">-</span><span class="nx">b</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">tickPixelInterval</span><span class="o">/</span><span class="p">(</span><span class="nx">d</span><span class="o">?</span><span class="mi">5</span><span class="o">:</span><span class="mi">1</span><span class="p">))</span><span class="o">/</span><span class="p">((</span><span class="nx">d</span><span class="o">?</span><span class="nx">f</span><span class="o">/</span><span class="k">this</span><span class="p">.</span><span class="nx">tickPositions</span><span class="p">.</span><span class="nx">length</span><span class="o">:</span><span class="nx">f</span><span class="p">)</span><span class="o">||</span><span class="mi">1</span><span class="p">)),</span><span class="nx">a</span><span class="o">=</span><span class="nx">hb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">K</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="nx">U</span><span class="p">(</span><span class="nx">K</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">/</span><span class="nx">K</span><span class="p">.</span><span class="nx">LN10</span><span class="p">))),</span><span class="nx">g</span><span class="o">=</span><span class="nx">Ta</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getLinearTickPositions</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">ka</span><span class="p">),</span><span class="o">!</span><span class="nx">d</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">_minorAutoInterval</span><span class="o">=</span><span class="nx">a</span><span class="o">/</span><span class="mi">5</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">tickInterval</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="nx">g</span><span class="p">},</span><span class="nx">getMinorTickPositions</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">tickPositions</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">minorTickInterval</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="p">[],</span><span class="nx">e</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">isLog</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getLogTickPositions</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="o">!</span><span class="mi">0</span><span class="p">))}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">isDatetimeAxis</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC111'><span class="nx">a</span><span class="p">.</span><span class="nx">minorTickInterval</span><span class="o">===</span><span class="s2">&quot;auto&quot;</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">Cb</span><span class="p">(</span><span class="nx">Ab</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">min</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">max</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">startOfWeek</span><span class="p">));</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">min</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">min</span><span class="p">)</span><span class="o">%</span><span class="nx">c</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">max</span><span class="p">;</span><span class="nx">b</span><span class="o">+=</span><span class="nx">c</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="nx">d</span><span class="p">},</span><span class="nx">adjustForMinRange</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">min</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">max</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">dataMax</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">dataMin</span><span class="o">&gt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">minRange</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">isXAxis</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">minRange</span><span class="o">===</span><span class="nx">A</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">isLog</span><span class="p">)</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">min</span><span class="p">)</span><span class="o">||</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">max</span><span class="p">)</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">minRange</span><span class="o">=</span><span class="kc">null</span><span class="o">:</span><span class="p">(</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">xData</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">xIncrement</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">g</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">--</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">-</span><span class="nx">i</span><span class="p">[</span><span class="nx">g</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="nx">f</span><span class="o">===</span><span class="nx">A</span><span class="o">||</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">f</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">h</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">minRange</span><span class="o">=</span><span class="nx">O</span><span class="p">(</span><span class="nx">f</span><span class="o">*</span><span class="mi">5</span><span class="p">,</span></div><div class='line' id='LC112'><span class="k">this</span><span class="p">.</span><span class="nx">dataMax</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">dataMin</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">-</span><span class="nx">b</span><span class="o">&lt;</span><span class="k">this</span><span class="p">.</span><span class="nx">minRange</span><span class="p">){</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">minRange</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="nx">k</span><span class="o">-</span><span class="nx">c</span><span class="o">+</span><span class="nx">b</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="p">[</span><span class="nx">b</span><span class="o">-</span><span class="nx">d</span><span class="p">,</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">min</span><span class="p">,</span><span class="nx">b</span><span class="o">-</span><span class="nx">d</span><span class="p">)];</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="nx">d</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">dataMin</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">wa</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">,</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">max</span><span class="p">,</span><span class="nx">b</span><span class="o">+</span><span class="nx">k</span><span class="p">)];</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">dataMax</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">Fa</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">c</span><span class="o">-</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="o">-</span><span class="nx">k</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">min</span><span class="p">,</span><span class="nx">c</span><span class="o">-</span><span class="nx">k</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">wa</span><span class="p">(</span><span class="nx">d</span><span class="p">))}</span><span class="k">this</span><span class="p">.</span><span class="nx">min</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">max</span><span class="o">=</span><span class="nx">c</span><span class="p">},</span><span class="nx">setAxisTranslation</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">max</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">min</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">linkedParent</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">transA</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">isXAxis</span><span class="p">)</span><span class="nx">f</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">minPointOffset</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">pointRangePadding</span><span class="p">)</span><span class="o">:</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pointRange</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">pointPlacement</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">closestPointRange</span><span class="p">;</span></div><div class='line' id='LC113'><span class="nx">b</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">f</span><span class="o">/</span><span class="mi">2</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="o">===</span><span class="s2">&quot;on&quot;</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">f</span><span class="p">);</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">noSharedTooltip</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">r</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="nx">O</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">k</span><span class="p">)</span><span class="o">:</span><span class="nx">k</span><span class="p">)}),</span><span class="k">this</span><span class="p">.</span><span class="nx">minPointOffset</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">pointRangePadding</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">pointRange</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">closestPointRange</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">oldTransA</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">translationSlope</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">transA</span><span class="o">=</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">len</span><span class="o">/</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="nx">e</span><span class="o">||</span><span class="mi">1</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">transB</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">horiz</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">left</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">bottom</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">minPixelPadding</span><span class="o">=</span><span class="nx">g</span><span class="o">*</span><span class="nx">d</span><span class="p">},</span><span class="nx">setTickPositions</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">isLog</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">isDatetimeAxis</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">isXAxis</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">isLinked</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tickPositioner</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">maxPadding</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">minPadding</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">tickInterval</span><span class="p">,</span></div><div class='line' id='LC114'><span class="nx">m</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">minTickInterval</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">tickPixelInterval</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">categories</span><span class="p">;</span><span class="nx">h</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">linkedParent</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">g</span><span class="o">?</span><span class="s2">&quot;xAxis&quot;</span><span class="o">:</span><span class="s2">&quot;yAxis&quot;</span><span class="p">][</span><span class="nx">d</span><span class="p">.</span><span class="nx">linkedTo</span><span class="p">],</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">linkedParent</span><span class="p">.</span><span class="nx">getExtremes</span><span class="p">(),</span><span class="nx">b</span><span class="p">.</span><span class="nx">min</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">min</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">dataMin</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">max</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">dataMax</span><span class="p">),</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="o">!==</span><span class="nx">b</span><span class="p">.</span><span class="nx">linkedParent</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="nx">Oa</span><span class="p">(</span><span class="mi">11</span><span class="p">,</span><span class="mi">1</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">min</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">userMin</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">min</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">dataMin</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">userMax</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">max</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">dataMax</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">!</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">O</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">min</span><span class="p">,</span><span class="nx">n</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">dataMin</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">min</span><span class="p">))</span><span class="o">&lt;=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">Oa</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">min</span><span class="o">=</span><span class="nx">da</span><span class="p">(</span><span class="nx">ka</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">min</span><span class="p">)),</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="o">=</span><span class="nx">da</span><span class="p">(</span><span class="nx">ka</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">range</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">userMin</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">min</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">min</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">range</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">userMax</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="p">,</span><span class="nx">a</span><span class="p">))</span><span class="nx">b</span><span class="p">.</span><span class="nx">range</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">adjustForMinRange</span><span class="p">();</span></div><div class='line' id='LC115'><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">p</span><span class="o">&amp;&amp;!</span><span class="nx">b</span><span class="p">.</span><span class="nx">usePercentage</span><span class="o">&amp;&amp;!</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">min</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">min</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">r</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">min</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">r</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">userMin</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">dataMin</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">||!</span><span class="nx">b</span><span class="p">.</span><span class="nx">ignoreMinPadding</span><span class="p">))</span><span class="nx">b</span><span class="p">.</span><span class="nx">min</span><span class="o">-=</span><span class="nx">c</span><span class="o">*</span><span class="nx">k</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">r</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">max</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">r</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">userMax</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">dataMax</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">||!</span><span class="nx">b</span><span class="p">.</span><span class="nx">ignoreMaxPadding</span><span class="p">))</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="o">+=</span><span class="nx">c</span><span class="o">*</span><span class="nx">j</span><span class="p">}</span><span class="nx">b</span><span class="p">.</span><span class="nx">tickInterval</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">min</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">min</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="o">===</span><span class="k">void</span> <span class="mi">0</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="nx">h</span><span class="o">&amp;&amp;!</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">q</span><span class="o">===</span><span class="nx">b</span><span class="p">.</span><span class="nx">linkedParent</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tickPixelInterval</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">linkedParent</span><span class="p">.</span><span class="nx">tickInterval</span><span class="o">:</span><span class="nx">n</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">p</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">min</span><span class="p">)</span><span class="o">*</span><span class="nx">q</span><span class="o">/</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">len</span><span class="o">||</span><span class="mi">1</span><span class="p">));</span><span class="nx">g</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">processData</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">min</span><span class="o">!==</span><span class="nx">b</span><span class="p">.</span><span class="nx">oldMin</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="o">!==</span><span class="nx">b</span><span class="p">.</span><span class="nx">oldMax</span><span class="p">)});</span><span class="nx">b</span><span class="p">.</span><span class="nx">setAxisTranslation</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span></div><div class='line' id='LC116'><span class="nx">b</span><span class="p">.</span><span class="nx">beforeSetTickPositions</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">beforeSetTickPositions</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">postProcessTickInterval</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">tickInterval</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">postProcessTickInterval</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">tickInterval</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">tickInterval</span><span class="o">&lt;</span><span class="nx">m</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">tickInterval</span><span class="o">=</span><span class="nx">m</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">f</span><span class="o">&amp;&amp;!</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">K</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span><span class="nx">U</span><span class="p">(</span><span class="nx">K</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">tickInterval</span><span class="p">)</span><span class="o">/</span><span class="nx">K</span><span class="p">.</span><span class="nx">LN10</span><span class="p">)),</span><span class="o">!</span><span class="nx">l</span><span class="p">))</span><span class="nx">b</span><span class="p">.</span><span class="nx">tickInterval</span><span class="o">=</span><span class="nx">hb</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">tickInterval</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">minorTickInterval</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">minorTickInterval</span><span class="o">===</span><span class="s2">&quot;auto&quot;</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">tickInterval</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">tickInterval</span><span class="o">/</span><span class="mi">5</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">minorTickInterval</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">tickPositions</span><span class="o">=</span><span class="nx">i</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">tickPositions</span><span class="o">||</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,[</span><span class="nx">b</span><span class="p">.</span><span class="nx">min</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">i</span><span class="p">)</span><span class="nx">i</span><span class="o">=</span><span class="nx">f</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">getNonLinearTimeTicks</span><span class="o">||</span><span class="nx">Cb</span><span class="p">)(</span><span class="nx">Ab</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">tickInterval</span><span class="p">,</span></div><div class='line' id='LC117'><span class="nx">d</span><span class="p">.</span><span class="nx">units</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">min</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">startOfWeek</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">ordinalPositions</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">closestPointRange</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">e</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">getLogTickPositions</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">tickInterval</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">min</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">getLinearTickPositions</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">tickInterval</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">min</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">tickPositions</span><span class="o">=</span><span class="nx">i</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">h</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">minPointOffset</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">startOnTick</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">min</span><span class="o">=</span><span class="nx">e</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">min</span><span class="o">-</span><span class="nx">h</span><span class="o">&gt;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">shift</span><span class="p">(),</span><span class="nx">d</span><span class="p">.</span><span class="nx">endOnTick</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="o">=</span><span class="nx">f</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="o">+</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">min</span><span class="o">-=</span><span class="mf">1.0</span><span class="nx">E</span><span class="o">-</span><span class="mi">9</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">max</span><span class="o">+=</span><span class="mf">1.0</span><span class="nx">E</span><span class="o">-</span><span class="mi">9</span><span class="p">)},</span><span class="nx">setMaxTicks</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">maxTicks</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">tickPositions</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">xOrY</span><span class="p">;</span><span class="nx">b</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="mi">0</span><span class="p">});</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">isLinked</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC118'><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">isDatetimeAxis</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">alignTicks</span><span class="o">!==!</span><span class="mi">1</span><span class="p">)</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">maxTicks</span><span class="o">=</span><span class="nx">b</span><span class="p">},</span><span class="nx">adjustTickAmount</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">xOrY</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">tickPositions</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">maxTicks</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">isDatetimeAxis</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">categories</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">isLinked</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">alignTicks</span><span class="o">!==!</span><span class="mi">1</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">tickAmount</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">tickAmount</span><span class="o">=</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">a</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">;)</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">da</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">tickInterval</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">transA</span><span class="o">*=</span><span class="p">(</span><span class="nx">e</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">max</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">]}</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">!==</span><span class="nx">d</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">isDirty</span><span class="o">=!</span><span class="mi">0</span><span class="p">}},</span><span class="nx">setScale</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span></div><div class='line' id='LC119'><span class="k">this</span><span class="p">.</span><span class="nx">stacks</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">oldMin</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">min</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">oldMax</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">max</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">oldAxisLength</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">len</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">setAxisSize</span><span class="p">();</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">len</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">oldAxisLength</span><span class="p">;</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">isDirtyData</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">isDirty</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">xAxis</span><span class="p">.</span><span class="nx">isDirty</span><span class="p">)</span><span class="nx">d</span><span class="o">=!</span><span class="mi">0</span><span class="p">});</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">||</span><span class="nx">d</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">isLinked</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">userMin</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">oldUserMin</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">userMax</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">oldUserMax</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">getSeriesExtremes</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">setTickPositions</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">oldUserMin</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">userMin</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">oldUserMax</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">userMax</span><span class="p">,</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">isDirty</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">isDirty</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">min</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">oldMin</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">max</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">oldMax</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">isXAxis</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">])</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">][</span><span class="nx">c</span><span class="p">].</span><span class="nx">cum</span><span class="o">=</span></div><div class='line' id='LC120'><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">][</span><span class="nx">c</span><span class="p">].</span><span class="nx">total</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">setMaxTicks</span><span class="p">()},</span><span class="nx">setExtremes</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="nx">e</span><span class="p">,{</span><span class="nx">min</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">max</span><span class="o">:</span><span class="nx">b</span><span class="p">});</span><span class="nx">F</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="s2">&quot;setExtremes&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">f</span><span class="p">.</span><span class="nx">userMin</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">userMax</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">f</span><span class="p">.</span><span class="nx">isDirtyExtremes</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">redraw</span><span class="p">(</span><span class="nx">d</span><span class="p">)})},</span><span class="nx">zoom</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">setExtremes</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">A</span><span class="p">,{</span><span class="nx">trigger</span><span class="o">:</span><span class="s2">&quot;zoom&quot;</span><span class="p">});</span><span class="k">return</span><span class="o">!</span><span class="mi">0</span><span class="p">},</span><span class="nx">setAxisSize</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">offsetLeft</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">offsetRight</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">left</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotLeft</span><span class="o">+</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">top</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">top</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotTop</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotWidth</span><span class="o">-</span><span class="nx">c</span><span class="o">+</span><span class="nx">d</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotHeight</span><span class="p">);</span></div><div class='line' id='LC121'><span class="k">this</span><span class="p">.</span><span class="nx">bottom</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">chartHeight</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">top</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">right</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">chartWidth</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">left</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">len</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">horiz</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="mi">0</span><span class="p">)},</span><span class="nx">getExtremes</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">isLog</span><span class="p">;</span><span class="k">return</span><span class="p">{</span><span class="nx">min</span><span class="o">:</span><span class="nx">a</span><span class="o">?</span><span class="nx">da</span><span class="p">(</span><span class="nx">aa</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">min</span><span class="p">))</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">min</span><span class="p">,</span><span class="nx">max</span><span class="o">:</span><span class="nx">a</span><span class="o">?</span><span class="nx">da</span><span class="p">(</span><span class="nx">aa</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">max</span><span class="p">))</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">max</span><span class="p">,</span><span class="nx">dataMin</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">dataMin</span><span class="p">,</span><span class="nx">dataMax</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">dataMax</span><span class="p">,</span><span class="nx">userMin</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">userMin</span><span class="p">,</span><span class="nx">userMax</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">userMax</span><span class="p">}},</span><span class="nx">getThreshold</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">isLog</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="o">?</span><span class="nx">aa</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">min</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">min</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">?</span><span class="nx">aa</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">max</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">max</span><span class="p">;</span><span class="nx">c</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">||</span><span class="nx">a</span><span class="o">===</span><span class="kc">null</span><span class="o">?</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="o">:</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)},</span><span class="nx">addPlotBandOrLine</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span></div><div class='line' id='LC122'><span class="p">(</span><span class="k">new</span> <span class="nx">nb</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">)).</span><span class="nx">render</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">plotLinesAndBands</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">getOffset</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">renderer</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">tickPositions</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">ticks</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">horiz</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">side</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">title</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">labels</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">axisOffset</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="nx">h</span><span class="p">],</span><span class="nx">H</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasData</span><span class="o">=</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasVisibleSeries</span><span class="o">||</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">min</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">max</span><span class="p">)</span><span class="o">&amp;&amp;!!</span><span class="nx">e</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">showAxis</span><span class="o">=</span><span class="nx">i</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="nx">n</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">showEmpty</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisGroup</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">gridGroup</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;grid&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">zIndex</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">gridZIndex</span><span class="o">||</span><span class="mi">1</span><span class="p">}).</span><span class="nx">add</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisGroup</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;axis&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">zIndex</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">zIndex</span><span class="o">||</span><span class="mi">2</span><span class="p">}).</span><span class="nx">add</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">labelGroup</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;axis-labels&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">zIndex</span><span class="o">:</span><span class="nx">q</span><span class="p">.</span><span class="nx">zIndex</span><span class="o">||</span></div><div class='line' id='LC123'><span class="mi">7</span><span class="p">}).</span><span class="nx">add</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">isLinked</span><span class="p">)</span><span class="nx">o</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">?</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">addLabel</span><span class="p">()</span><span class="o">:</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nx">Qa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}),</span><span class="nx">o</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">===</span><span class="mi">0</span><span class="o">||</span><span class="nx">h</span><span class="o">===</span><span class="mi">2</span><span class="o">||</span><span class="p">{</span><span class="mi">1</span><span class="o">:</span><span class="s2">&quot;left&quot;</span><span class="p">,</span><span class="mi">3</span><span class="o">:</span><span class="s2">&quot;right&quot;</span><span class="p">}[</span><span class="nx">h</span><span class="p">]</span><span class="o">===</span><span class="nx">q</span><span class="p">.</span><span class="nx">align</span><span class="p">)</span><span class="nx">p</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">getLabelSize</span><span class="p">(),</span><span class="nx">p</span><span class="p">)}),</span><span class="nx">a</span><span class="p">.</span><span class="nx">staggerLines</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">p</span><span class="o">+=</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">staggerLines</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="mi">16</span><span class="p">);</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">H</span> <span class="k">in</span> <span class="nx">f</span><span class="p">)</span><span class="nx">f</span><span class="p">[</span><span class="nx">H</span><span class="p">].</span><span class="nx">destroy</span><span class="p">(),</span><span class="k">delete</span> <span class="nx">f</span><span class="p">[</span><span class="nx">H</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="p">.</span><span class="nx">text</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisTitle</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisTitle</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">text</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">text</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">useHTML</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">zIndex</span><span class="o">:</span><span class="mi">7</span><span class="p">,</span><span class="nx">rotation</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">rotation</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">align</span><span class="o">:</span><span class="nx">m</span><span class="p">.</span><span class="nx">textAlign</span><span class="o">||</span><span class="p">{</span><span class="nx">low</span><span class="o">:</span><span class="s2">&quot;left&quot;</span><span class="p">,</span><span class="nx">middle</span><span class="o">:</span><span class="s2">&quot;center&quot;</span><span class="p">,</span><span class="nx">high</span><span class="o">:</span><span class="s2">&quot;right&quot;</span><span class="p">}[</span><span class="nx">m</span><span class="p">.</span><span class="nx">align</span><span class="p">]}).</span><span class="nx">css</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">style</span><span class="p">).</span><span class="nx">add</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisGroup</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisTitle</span><span class="p">.</span><span class="nx">isNew</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span><span class="nx">j</span><span class="o">=</span></div><div class='line' id='LC124'><span class="nx">a</span><span class="p">.</span><span class="nx">axisTitle</span><span class="p">.</span><span class="nx">getBBox</span><span class="p">()[</span><span class="nx">g</span><span class="o">?</span><span class="s2">&quot;height&quot;</span><span class="o">:</span><span class="s2">&quot;width&quot;</span><span class="p">],</span><span class="nx">l</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">margin</span><span class="p">,</span><span class="nx">g</span><span class="o">?</span><span class="mi">5</span><span class="o">:</span><span class="mi">10</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">offset</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisTitle</span><span class="p">[</span><span class="nx">i</span><span class="o">?</span><span class="s2">&quot;show&quot;</span><span class="o">:</span><span class="s2">&quot;hide&quot;</span><span class="p">]()}</span><span class="nx">a</span><span class="p">.</span><span class="nx">offset</span><span class="o">=</span><span class="nx">t</span><span class="o">*</span><span class="nx">n</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">offset</span><span class="p">,</span><span class="nx">y</span><span class="p">[</span><span class="nx">h</span><span class="p">]);</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisTitleMargin</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">p</span><span class="o">+</span><span class="nx">l</span><span class="o">+</span><span class="p">(</span><span class="nx">h</span><span class="o">!==</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="o">*</span><span class="nx">d</span><span class="p">.</span><span class="nx">labels</span><span class="p">[</span><span class="nx">g</span><span class="o">?</span><span class="s2">&quot;y&quot;</span><span class="o">:</span><span class="s2">&quot;x&quot;</span><span class="p">]));</span><span class="nx">y</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="nx">y</span><span class="p">[</span><span class="nx">h</span><span class="p">],</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisTitleMargin</span><span class="o">+</span><span class="nx">j</span><span class="o">+</span><span class="nx">t</span><span class="o">*</span><span class="nx">a</span><span class="p">.</span><span class="nx">offset</span><span class="p">)},</span><span class="nx">getLinePath</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">opposite</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">offset</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">horiz</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">left</span><span class="o">+</span><span class="p">(</span><span class="nx">c</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">:</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">lineTop</span><span class="o">=</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">chartHeight</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">bottom</span><span class="o">-</span><span class="p">(</span><span class="nx">c</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">:</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="nx">d</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">crispLine</span><span class="p">([</span><span class="s2">&quot;M&quot;</span><span class="p">,</span><span class="nx">e</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">left</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">top</span><span class="p">,</span><span class="s2">&quot;L&quot;</span><span class="p">,</span><span class="nx">e</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">chartWidth</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">right</span><span class="o">:</span></div><div class='line' id='LC125'><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="o">?</span><span class="nx">c</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">chartHeight</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">bottom</span><span class="p">],</span><span class="nx">a</span><span class="p">)},</span><span class="nx">getTitlePosition</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">horiz</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">left</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">top</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">len</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">title</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">opposite</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">offset</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">z</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">fontSize</span><span class="o">||</span><span class="mi">12</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="p">{</span><span class="nx">low</span><span class="o">:</span><span class="nx">f</span><span class="o">+</span><span class="p">(</span><span class="nx">a</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">d</span><span class="p">),</span><span class="nx">middle</span><span class="o">:</span><span class="nx">f</span><span class="o">+</span><span class="nx">d</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">high</span><span class="o">:</span><span class="nx">f</span><span class="o">+</span><span class="p">(</span><span class="nx">a</span><span class="o">?</span><span class="nx">d</span><span class="o">:</span><span class="mi">0</span><span class="p">)}[</span><span class="nx">e</span><span class="p">.</span><span class="nx">align</span><span class="p">],</span><span class="nx">b</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="o">?</span><span class="nx">c</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">:</span><span class="nx">b</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">a</span><span class="o">?</span><span class="mi">1</span><span class="o">:-</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="nx">g</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="k">this</span><span class="p">.</span><span class="nx">axisTitleMargin</span><span class="o">+</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">side</span><span class="o">===</span><span class="mi">2</span><span class="o">?</span><span class="nx">i</span><span class="o">:</span><span class="mi">0</span><span class="p">);</span><span class="k">return</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">a</span><span class="o">?</span><span class="nx">d</span><span class="o">:</span><span class="nx">b</span><span class="o">+</span><span class="p">(</span><span class="nx">g</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">width</span><span class="o">:</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="nx">h</span><span class="o">+</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">x</span><span class="o">||</span><span class="mi">0</span><span class="p">),</span><span class="nx">y</span><span class="o">:</span><span class="nx">a</span><span class="o">?</span><span class="nx">b</span><span class="o">-</span><span class="p">(</span><span class="nx">g</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">height</span><span class="o">:</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="nx">h</span><span class="o">:</span><span class="nx">d</span><span class="o">+</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">y</span><span class="o">||</span><span class="mi">0</span><span class="p">)}},</span><span class="nx">render</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">renderer</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">isLog</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">isLinked</span><span class="p">,</span></div><div class='line' id='LC126'><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">tickPositions</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisTitle</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">stacks</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">ticks</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">minorTicks</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">alternateBands</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">stackLabels</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">alternateGridColor</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">tickmarkOffset</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">lineWidth</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">H</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">hasRendered</span><span class="o">&amp;&amp;</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">oldMin</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">oldMin</span><span class="p">),</span><span class="nx">u</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">showAxis</span><span class="p">,</span><span class="nx">v</span><span class="p">,</span><span class="nx">s</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasData</span><span class="o">||</span><span class="nx">f</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">minorTickInterval</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">categories</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">getMinorTickPositions</span><span class="p">(),</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">k</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">k</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nx">Qa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;minor&quot;</span><span class="p">));</span><span class="nx">H</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">isNew</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">render</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">k</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">isActive</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">k</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">render</span><span class="p">()}),</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">).</span><span class="nx">concat</span><span class="p">([</span><span class="nx">g</span><span class="p">[</span><span class="mi">0</span><span class="p">]]),</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">===</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">c</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">f</span><span class="o">||</span></div><div class='line' id='LC127'><span class="nx">b</span><span class="o">&gt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">min</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&lt;=</span><span class="nx">a</span><span class="p">.</span><span class="nx">max</span><span class="p">)</span><span class="nx">j</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nx">Qa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)),</span><span class="nx">H</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">isNew</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">render</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">j</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">isActive</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">j</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">render</span><span class="p">(</span><span class="nx">c</span><span class="p">)}),</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">%</span><span class="mi">2</span><span class="o">===</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">max</span><span class="p">)</span><span class="nx">l</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">||</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="k">new</span> <span class="nx">nb</span><span class="p">(</span><span class="nx">a</span><span class="p">)),</span><span class="nx">v</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="nx">p</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">!==</span><span class="nx">A</span><span class="o">?</span><span class="nx">g</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">p</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">max</span><span class="p">,</span><span class="nx">l</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">options</span><span class="o">=</span><span class="p">{</span><span class="nx">from</span><span class="o">:</span><span class="nx">e</span><span class="o">?</span><span class="nx">aa</span><span class="p">(</span><span class="nx">v</span><span class="p">)</span><span class="o">:</span><span class="nx">v</span><span class="p">,</span><span class="nx">to</span><span class="o">:</span><span class="nx">e</span><span class="o">?</span><span class="nx">aa</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span><span class="o">:</span><span class="nx">s</span><span class="p">,</span><span class="nx">color</span><span class="o">:</span><span class="nx">q</span><span class="p">},</span><span class="nx">l</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">render</span><span class="p">(),</span><span class="nx">l</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">isActive</span><span class="o">=!</span><span class="mi">0</span><span class="p">}),</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">_addedPlotLB</span><span class="p">)</span><span class="nx">o</span><span class="p">((</span><span class="nx">d</span><span class="p">.</span><span class="nx">plotLines</span><span class="o">||</span><span class="p">[]).</span><span class="nx">concat</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">plotBands</span><span class="o">||</span><span class="p">[]),</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">addPlotBandOrLine</span><span class="p">(</span><span class="nx">b</span><span class="p">)}),</span><span class="nx">a</span><span class="p">.</span><span class="nx">_addedPlotLB</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">o</span><span class="p">([</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">isActive</span><span class="o">?</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">isActive</span><span class="o">=!</span><span class="mi">1</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">destroy</span><span class="p">(),</span><span class="k">delete</span> <span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">])});</span></div><div class='line' id='LC128'><span class="k">if</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="nx">t</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getLinePath</span><span class="p">(</span><span class="nx">n</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisLine</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisLine</span><span class="p">.</span><span class="nx">animate</span><span class="p">({</span><span class="nx">d</span><span class="o">:</span><span class="nx">t</span><span class="p">})</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisLine</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">path</span><span class="p">(</span><span class="nx">t</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">stroke</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">lineColor</span><span class="p">,</span><span class="s2">&quot;stroke-width&quot;</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">zIndex</span><span class="o">:</span><span class="mi">7</span><span class="p">}).</span><span class="nx">add</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisGroup</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">axisLine</span><span class="p">[</span><span class="nx">u</span><span class="o">?</span><span class="s2">&quot;show&quot;</span><span class="o">:</span><span class="s2">&quot;hide&quot;</span><span class="p">]();</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">u</span><span class="p">)</span><span class="nx">h</span><span class="p">[</span><span class="nx">h</span><span class="p">.</span><span class="nx">isNew</span><span class="o">?</span><span class="s2">&quot;attr&quot;</span><span class="o">:</span><span class="s2">&quot;animate&quot;</span><span class="p">](</span><span class="nx">a</span><span class="p">.</span><span class="nx">getTitlePosition</span><span class="p">()),</span><span class="nx">h</span><span class="p">.</span><span class="nx">isNew</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="p">.</span><span class="nx">enabled</span><span class="p">){</span><span class="kd">var</span> <span class="nx">x</span><span class="p">,</span><span class="nx">E</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">stackTotalGroup</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">stackTotalGroup</span><span class="o">=</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;stack-labels&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">visibility</span><span class="o">:</span><span class="s2">&quot;visible&quot;</span><span class="p">,</span><span class="nx">zIndex</span><span class="o">:</span><span class="mi">6</span><span class="p">}).</span><span class="nx">add</span><span class="p">();</span><span class="nx">d</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">plotLeft</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">plotTop</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">x</span> <span class="k">in</span> <span class="nx">i</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">E</span> <span class="k">in</span> <span class="nx">b</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="nx">x</span><span class="p">],</span><span class="nx">b</span><span class="p">)</span><span class="nx">b</span><span class="p">[</span><span class="nx">E</span><span class="p">].</span><span class="nx">render</span><span class="p">(</span><span class="nx">d</span><span class="p">)}</span><span class="nx">a</span><span class="p">.</span><span class="nx">isDirty</span><span class="o">=!</span><span class="mi">1</span><span class="p">},</span><span class="nx">removePlotBandOrLine</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span></div><div class='line' id='LC129'><span class="k">this</span><span class="p">.</span><span class="nx">plotLinesAndBands</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">c</span><span class="o">--</span><span class="p">;)</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">id</span><span class="o">===</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">destroy</span><span class="p">()},</span><span class="nx">setTitle</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axisTitle</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">title</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">title</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">axisTitle</span><span class="o">=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">destroy</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">isDirty</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">n</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">redraw</span><span class="p">()},</span><span class="nx">redraw</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">tracker</span><span class="p">.</span><span class="nx">resetTracker</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">tracker</span><span class="p">.</span><span class="nx">resetTracker</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">render</span><span class="p">();</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">plotLinesAndBands</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">render</span><span class="p">()});</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">isDirty</span><span class="o">=!</span><span class="mi">0</span><span class="p">})},</span><span class="nx">setCategories</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">categories</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">userOptions</span><span class="p">.</span><span class="nx">categories</span><span class="o">=</span></div><div class='line' id='LC130'><span class="nx">a</span><span class="p">;</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">translate</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">setTooltipPoints</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">)});</span><span class="k">this</span><span class="p">.</span><span class="nx">isDirty</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">n</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">redraw</span><span class="p">()},</span><span class="nx">destroy</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">stacks</span><span class="p">,</span><span class="nx">c</span><span class="p">;</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">b</span><span class="p">)</span><span class="nx">Ga</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]),</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">o</span><span class="p">([</span><span class="nx">a</span><span class="p">.</span><span class="nx">ticks</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">minorTicks</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">alternateBands</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotLinesAndBands</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">Ga</span><span class="p">(</span><span class="nx">a</span><span class="p">)});</span><span class="nx">o</span><span class="p">(</span><span class="s2">&quot;stackTotalGroup,axisLine,axisGroup,gridGroup,labelGroup,axisTitle&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">destroy</span><span class="p">())})}};</span><span class="nx">pb</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">destroy</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">crosshairs</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">destroy</span><span class="p">()});</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">label</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">label</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">label</span><span class="p">.</span><span class="nx">destroy</span><span class="p">()},</span></div><div class='line' id='LC131'><span class="nx">move</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">now</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">animation</span><span class="o">!==!</span><span class="mi">1</span><span class="o">&amp;&amp;!</span><span class="nx">e</span><span class="p">.</span><span class="nx">isHidden</span><span class="p">;</span><span class="nx">x</span><span class="p">(</span><span class="nx">f</span><span class="p">,{</span><span class="nx">x</span><span class="o">:</span><span class="nx">g</span><span class="o">?</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="nx">f</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="nx">a</span><span class="p">)</span><span class="o">/</span><span class="mi">3</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">g</span><span class="o">?</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">b</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">anchorX</span><span class="o">:</span><span class="nx">g</span><span class="o">?</span><span class="p">(</span><span class="mi">2</span><span class="o">*</span><span class="nx">f</span><span class="p">.</span><span class="nx">anchorX</span><span class="o">+</span><span class="nx">c</span><span class="p">)</span><span class="o">/</span><span class="mi">3</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">anchorY</span><span class="o">:</span><span class="nx">g</span><span class="o">?</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">anchorY</span><span class="o">+</span><span class="nx">d</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="o">:</span><span class="nx">d</span><span class="p">});</span><span class="nx">e</span><span class="p">.</span><span class="nx">label</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">f</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">M</span><span class="p">(</span><span class="nx">a</span><span class="o">-</span><span class="nx">f</span><span class="p">.</span><span class="nx">x</span><span class="p">)</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">||</span><span class="nx">M</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="nx">f</span><span class="p">.</span><span class="nx">y</span><span class="p">)</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">))</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">tooltipTimeout</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">tooltipTimeout</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">move</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="mi">32</span><span class="p">)},</span><span class="nx">hide</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">isHidden</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">hoverPoints</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">label</span><span class="p">.</span><span class="nx">hide</span><span class="p">();</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">setState</span><span class="p">()});</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">hoverPoints</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">isHidden</span><span class="o">=!</span><span class="mi">0</span><span class="p">}},</span><span class="nx">hideCrosshairs</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">crosshairs</span><span class="p">,</span></div><div class='line' id='LC132'><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">hide</span><span class="p">()})},</span><span class="nx">getAnchor</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">inverted</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">la</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">tooltipPos</span><span class="p">;</span><span class="nx">c</span><span class="o">||</span><span class="p">(</span><span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">series</span><span class="p">.</span><span class="nx">yAxis</span><span class="p">;</span><span class="nx">f</span><span class="o">+=</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotX</span><span class="p">;</span><span class="nx">g</span><span class="o">+=</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotLow</span><span class="o">?</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotLow</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotHigh</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotY</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="o">!</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">top</span><span class="o">-</span><span class="nx">d</span><span class="p">.</span><span class="nx">plotTop</span><span class="o">:</span><span class="mi">0</span><span class="p">)}),</span><span class="nx">f</span><span class="o">/=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">g</span><span class="o">/=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="nx">e</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">plotWidth</span><span class="o">-</span><span class="nx">g</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">shared</span><span class="o">&amp;&amp;!</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">chartY</span><span class="o">-</span><span class="nx">d</span><span class="p">.</span><span class="nx">plotTop</span><span class="o">:</span><span class="nx">e</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">plotHeight</span><span class="o">-</span><span class="nx">f</span><span class="o">:</span><span class="nx">g</span><span class="p">]);</span><span class="k">return</span> <span class="nx">Ta</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">u</span><span class="p">)},</span><span class="nx">getPosition</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">plotLeft</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">plotTop</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">plotWidth</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">plotHeight</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">distance</span><span class="p">,</span><span class="mi">12</span><span class="p">),</span></div><div class='line' id='LC133'><span class="nx">j</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotX</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotY</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">j</span><span class="o">+</span><span class="nx">e</span><span class="o">+</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">inverted</span><span class="o">?</span><span class="nx">i</span><span class="o">:-</span><span class="nx">a</span><span class="o">-</span><span class="nx">i</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nx">c</span><span class="o">-</span><span class="nx">b</span><span class="o">+</span><span class="nx">f</span><span class="o">+</span><span class="mi">15</span><span class="p">,</span><span class="nx">l</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="mi">7</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="o">+</span><span class="nx">s</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="nx">i</span><span class="p">);</span><span class="nx">d</span><span class="o">+</span><span class="nx">a</span><span class="o">&gt;</span><span class="nx">e</span><span class="o">+</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">-=</span><span class="nx">d</span><span class="o">+</span><span class="nx">a</span><span class="o">-</span><span class="p">(</span><span class="nx">e</span><span class="o">+</span><span class="nx">g</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="nx">c</span><span class="o">-</span><span class="nx">b</span><span class="o">+</span><span class="nx">f</span><span class="o">-</span><span class="nx">i</span><span class="p">,</span><span class="nx">l</span><span class="o">=!</span><span class="mi">0</span><span class="p">);</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">f</span><span class="o">+</span><span class="mi">5</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">f</span><span class="o">+</span><span class="mi">5</span><span class="p">,</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&gt;=</span><span class="nx">k</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&lt;=</span><span class="nx">k</span><span class="o">+</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="nx">f</span><span class="o">+</span><span class="nx">i</span><span class="p">));</span><span class="nx">k</span><span class="o">+</span><span class="nx">b</span><span class="o">&gt;</span><span class="nx">f</span><span class="o">+</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">f</span><span class="o">+</span><span class="nx">h</span><span class="o">-</span><span class="nx">b</span><span class="o">-</span><span class="nx">i</span><span class="p">));</span><span class="k">return</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">k</span><span class="p">}},</span><span class="nx">refresh</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">points</span><span class="o">||</span><span class="nx">la</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">series</span><span class="p">,</span><span class="nx">c</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">tooltipHeaderFormatter</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">key</span><span class="p">)];</span><span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">series</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">tooltipFormatter</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">tooltipFormatter</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">point</span><span class="p">.</span><span class="nx">tooltipFormatter</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">tooltipOptions</span><span class="p">.</span><span class="nx">pointFormat</span><span class="p">))});</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">footerFormat</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">)}</span></div><div class='line' id='LC134'><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">label</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="p">{},</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="p">[];</span><span class="nx">k</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">formatter</span><span class="o">||</span><span class="nx">c</span><span class="p">;</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">hoverPoints</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">crosshairs</span><span class="p">;</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">shared</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getAnchor</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">g</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">series</span><span class="o">||!</span><span class="nx">a</span><span class="p">.</span><span class="nx">series</span><span class="p">.</span><span class="nx">noSharedTooltip</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">hoverPoints</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">setState</span><span class="p">()}),</span><span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">setState</span><span class="p">(</span><span class="s2">&quot;hover&quot;</span><span class="p">);</span><span class="nx">l</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">getLabelConfig</span><span class="p">())}),</span><span class="nx">j</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">category</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">y</span><span class="p">},</span><span class="nx">j</span><span class="p">.</span><span class="nx">points</span><span class="o">=</span><span class="nx">l</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">:</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getLabelConfig</span><span class="p">();</span><span class="nx">k</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">j</span><span class="p">);</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">series</span><span class="p">;</span><span class="nx">i</span><span class="o">=</span><span class="nx">i</span><span class="o">||!</span><span class="nx">j</span><span class="p">.</span><span class="nx">isCartesian</span><span class="o">||</span><span class="nx">j</span><span class="p">.</span><span class="nx">tooltipOutsidePlot</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">isInsidePlot</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="nx">k</span><span class="o">===!</span><span class="mi">1</span><span class="o">||!</span><span class="nx">i</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">hide</span><span class="p">()</span><span class="o">:</span></div><div class='line' id='LC135'><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">isHidden</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">show</span><span class="p">(),</span><span class="nx">e</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">text</span><span class="o">:</span><span class="nx">k</span><span class="p">}),</span><span class="nx">m</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">borderColor</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">color</span><span class="o">||</span><span class="nx">j</span><span class="p">.</span><span class="nx">color</span><span class="o">||</span><span class="s2">&quot;#606060&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">stroke</span><span class="o">:</span><span class="nx">m</span><span class="p">}),</span><span class="nx">e</span><span class="o">=</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">positioner</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">getPosition</span><span class="p">).</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">height</span><span class="p">,{</span><span class="nx">plotX</span><span class="o">:</span><span class="nx">g</span><span class="p">,</span><span class="nx">plotY</span><span class="o">:</span><span class="nx">h</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">move</span><span class="p">(</span><span class="nx">u</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">x</span><span class="p">),</span><span class="nx">u</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">y</span><span class="p">),</span><span class="nx">g</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">plotLeft</span><span class="p">,</span><span class="nx">h</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">plotTop</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">isHidden</span><span class="o">=!</span><span class="mi">1</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="p">){</span><span class="nx">q</span><span class="o">=</span><span class="nx">la</span><span class="p">(</span><span class="nx">q</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">q</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">--</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">series</span><span class="p">[</span><span class="nx">e</span><span class="o">?</span><span class="s2">&quot;yAxis&quot;</span><span class="o">:</span><span class="s2">&quot;xAxis&quot;</span><span class="p">],</span><span class="nx">q</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">getPlotLinePath</span><span class="p">(</span><span class="nx">e</span><span class="o">?</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">stackY</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">crosshairs</span><span class="p">[</span><span class="nx">e</span><span class="p">])</span><span class="k">this</span><span class="p">.</span><span class="nx">crosshairs</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">attr</span><span class="p">({</span><span class="nx">d</span><span class="o">:</span><span class="nx">i</span><span class="p">,</span><span class="nx">visibility</span><span class="o">:</span><span class="s2">&quot;visible&quot;</span><span class="p">});</span><span class="k">else</span><span class="p">{</span><span class="nx">j</span><span class="o">=</span><span class="p">{</span><span class="s2">&quot;stroke-width&quot;</span><span class="o">:</span><span class="nx">q</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">width</span><span class="o">||</span><span class="mi">1</span><span class="p">,</span><span class="nx">stroke</span><span class="o">:</span><span class="nx">q</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">color</span><span class="o">||</span></div><div class='line' id='LC136'><span class="s2">&quot;#C0C0C0&quot;</span><span class="p">,</span><span class="nx">zIndex</span><span class="o">:</span><span class="nx">q</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">zIndex</span><span class="o">||</span><span class="mi">2</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">dashStyle</span><span class="p">)</span><span class="nx">j</span><span class="p">.</span><span class="nx">dashstyle</span><span class="o">=</span><span class="nx">q</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">dashStyle</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">crosshairs</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">path</span><span class="p">(</span><span class="nx">i</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="nx">j</span><span class="p">).</span><span class="nx">add</span><span class="p">()}}</span><span class="nx">F</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;tooltipRefresh&quot;</span><span class="p">,{</span><span class="nx">text</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">x</span><span class="o">:</span><span class="nx">g</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">plotLeft</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">h</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">plotTop</span><span class="p">,</span><span class="nx">borderColor</span><span class="o">:</span><span class="nx">m</span><span class="p">})}};</span><span class="nx">qb</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">normalizeMouseEvent</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="nx">L</span><span class="p">.</span><span class="nx">event</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">srcElement</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="nx">Pb</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">touches</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">touches</span><span class="p">.</span><span class="nx">item</span><span class="p">(</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">chartPosition</span><span class="o">=</span><span class="nx">b</span><span class="o">=</span><span class="nx">Vb</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">container</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">pageX</span><span class="o">===</span><span class="nx">A</span><span class="o">?</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">pageX</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">left</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">pageY</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">top</span><span class="p">);</span><span class="k">return</span> <span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">,{</span><span class="nx">chartX</span><span class="o">:</span><span class="nx">u</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">chartY</span><span class="o">:</span><span class="nx">u</span><span class="p">(</span><span class="nx">b</span><span class="p">)})},</span><span class="nx">getMouseCoordinates</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span></div><div class='line' id='LC137'><span class="p">{</span><span class="nx">xAxis</span><span class="o">:</span><span class="p">[],</span><span class="nx">yAxis</span><span class="o">:</span><span class="p">[]},</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">;</span><span class="nx">o</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">axes</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">isXAxis</span><span class="p">;</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="o">?</span><span class="s2">&quot;xAxis&quot;</span><span class="o">:</span><span class="s2">&quot;yAxis&quot;</span><span class="p">].</span><span class="nx">push</span><span class="p">({</span><span class="nx">axis</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">value</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">translate</span><span class="p">(((</span><span class="nx">c</span><span class="p">.</span><span class="nx">inverted</span><span class="o">?!</span><span class="nx">e</span><span class="o">:</span><span class="nx">e</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">chartX</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotLeft</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">len</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">chartY</span><span class="p">)</span><span class="o">-</span><span class="nx">d</span><span class="p">.</span><span class="nx">minPixelPadding</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)})});</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">getIndex</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">inverted</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">plotHeight</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">plotTop</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">chartY</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">chartX</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">plotLeft</span><span class="p">},</span><span class="nx">onmousemove</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">tooltip</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">hoverPoint</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">hoverSeries</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">chartWidth</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getIndex</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tooltip</span><span class="p">.</span><span class="nx">shared</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">g</span><span class="o">||</span></div><div class='line' id='LC138'><span class="o">!</span><span class="nx">g</span><span class="p">.</span><span class="nx">noSharedTooltip</span><span class="p">)){</span><span class="nx">e</span><span class="o">=</span><span class="p">[];</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">visible</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">options</span><span class="p">.</span><span class="nx">enableMouseTracking</span><span class="o">!==!</span><span class="mi">1</span><span class="o">&amp;&amp;!</span><span class="nx">c</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">noSharedTooltip</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">tooltipPoints</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">tooltipPoints</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">tooltipPoints</span><span class="p">[</span><span class="nx">k</span><span class="p">],</span><span class="nx">b</span><span class="p">.</span><span class="nx">_dist</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="nx">k</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">xAxis</span><span class="p">.</span><span class="nx">tooltipPosName</span><span class="o">||</span><span class="s2">&quot;plotX&quot;</span><span class="p">]),</span><span class="nx">j</span><span class="o">=</span><span class="nx">O</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">_dist</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">h</span><span class="o">--</span><span class="p">;)</span><span class="nx">e</span><span class="p">[</span><span class="nx">h</span><span class="p">].</span><span class="nx">_dist</span><span class="o">&gt;</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">plotX</span><span class="o">!==</span><span class="k">this</span><span class="p">.</span><span class="nx">hoverX</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">refresh</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">hoverX</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">plotX</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">tracker</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">tooltipPoints</span><span class="p">[</span><span class="nx">k</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">!==</span><span class="nx">f</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">onMouseOver</span><span class="p">()},</span><span class="nx">resetTracker</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span></div><div class='line' id='LC139'><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">hoverSeries</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">hoverPoint</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">tooltip</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">shared</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">hoverPoints</span><span class="o">:</span><span class="nx">d</span><span class="p">;(</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">la</span><span class="p">(</span><span class="nx">b</span><span class="p">)[</span><span class="mi">0</span><span class="p">].</span><span class="nx">plotX</span><span class="o">===</span><span class="nx">A</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">=!</span><span class="mi">1</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">refresh</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">onMouseOut</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">onMouseOut</span><span class="p">();</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">hide</span><span class="p">(),</span><span class="nx">e</span><span class="p">.</span><span class="nx">hideCrosshairs</span><span class="p">());</span><span class="k">this</span><span class="p">.</span><span class="nx">hoverX</span><span class="o">=</span><span class="kc">null</span><span class="p">}},</span><span class="nx">setDOMEvents</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">selectionMarker</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="p">{</span><span class="nx">xAxis</span><span class="o">:</span><span class="p">[],</span><span class="nx">yAxis</span><span class="o">:</span><span class="p">[]},</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">selectionMarker</span><span class="p">.</span><span class="nx">getBBox</span><span class="p">(),</span><span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotLeft</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotTop</span><span class="p">,</span><span class="nx">m</span><span class="p">;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">o</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">axes</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">zoomEnabled</span><span class="o">!==!</span><span class="mi">1</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">isXAxis</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">inverted</span><span class="o">?!</span><span class="nx">b</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="nx">d</span><span class="o">?</span><span class="nx">h</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotHeight</span><span class="o">-</span><span class="nx">l</span><span class="o">-</span></div><div class='line' id='LC140'><span class="nx">g</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">translate</span><span class="p">((</span><span class="nx">d</span><span class="o">?</span><span class="nx">h</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">width</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotHeight</span><span class="o">-</span><span class="nx">l</span><span class="p">)</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">a</span><span class="p">.</span><span class="nx">minPixelPadding</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="o">!</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">b</span><span class="o">?</span><span class="s2">&quot;xAxis&quot;</span><span class="o">:</span><span class="s2">&quot;yAxis&quot;</span><span class="p">].</span><span class="nx">push</span><span class="p">({</span><span class="nx">axis</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">min</span><span class="o">:</span><span class="nx">O</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">max</span><span class="o">:</span><span class="nx">s</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">)}),</span><span class="nx">m</span><span class="o">=!</span><span class="mi">0</span><span class="p">)}}),</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="nx">F</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;selection&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">zoom</span><span class="p">(</span><span class="nx">a</span><span class="p">)}));</span><span class="nx">b</span><span class="p">.</span><span class="nx">selectionMarker</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">selectionMarker</span><span class="p">.</span><span class="nx">destroy</span><span class="p">()}</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="nx">I</span><span class="p">(</span><span class="nx">d</span><span class="p">,{</span><span class="nx">cursor</span><span class="o">:</span><span class="s2">&quot;auto&quot;</span><span class="p">}),</span><span class="nx">c</span><span class="p">.</span><span class="nx">cancelClick</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">mouseIsDown</span><span class="o">=</span><span class="nx">e</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">R</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="s2">&quot;mouseup&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">Ba</span><span class="o">&amp;&amp;</span><span class="nx">R</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="s2">&quot;touchend&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">container</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">zoomX</span><span class="o">&amp;&amp;!</span><span class="nx">c</span><span class="p">.</span><span class="nx">inverted</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">zoomY</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">inverted</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">zoomY</span><span class="o">&amp;&amp;!</span><span class="nx">c</span><span class="p">.</span><span class="nx">inverted</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">zoomX</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">inverted</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">hideTooltipOnMouseMove</span><span class="o">=</span></div><div class='line' id='LC141'><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">Pb</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">chartPosition</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">hoverSeries</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">hoverSeries</span><span class="p">.</span><span class="nx">isCartesian</span><span class="o">&amp;&amp;!</span><span class="nx">c</span><span class="p">.</span><span class="nx">isInsidePlot</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageX</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">chartPosition</span><span class="p">.</span><span class="nx">left</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotLeft</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">pageY</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">chartPosition</span><span class="p">.</span><span class="nx">top</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotTop</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">resetTracker</span><span class="p">()};</span><span class="nx">b</span><span class="p">.</span><span class="nx">hideTooltipOnMouseLeave</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">resetTracker</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">chartPosition</span><span class="o">=</span><span class="kc">null</span><span class="p">};</span><span class="nx">d</span><span class="p">.</span><span class="nx">onmousedown</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">normalizeMouseEvent</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;touch&quot;</span><span class="p">)</span><span class="o">===-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">preventDefault</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">mouseIsDown</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">cancelClick</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">mouseDownX</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">mouseDownX</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">chartX</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">mouseDownY</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">chartY</span><span class="p">;</span><span class="nx">J</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="s2">&quot;mouseup&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">Ba</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC142'><span class="nx">J</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="s2">&quot;touchend&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)};</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="o">||!</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">touches</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">touches</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="p">)){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">normalizeMouseEvent</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">chartX</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">chartY</span><span class="p">,</span><span class="nx">m</span><span class="o">=!</span><span class="nx">c</span><span class="p">.</span><span class="nx">isInsidePlot</span><span class="p">(</span><span class="nx">h</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotLeft</span><span class="p">,</span><span class="nx">l</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotTop</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;touch&quot;</span><span class="p">)</span><span class="o">===-</span><span class="mi">1</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">returnValue</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">d</span><span class="o">===</span><span class="s2">&quot;touchstart&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">,</span><span class="s2">&quot;isTracker&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">runTrackerClick</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">()</span><span class="o">:!</span><span class="nx">c</span><span class="p">.</span><span class="nx">runChartClick</span><span class="o">&amp;&amp;!</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">preventDefault</span><span class="p">());</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotLeft</span><span class="o">?</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotLeft</span><span class="o">:</span><span class="nx">h</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotLeft</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotWidth</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotLeft</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotWidth</span><span class="p">),</span><span class="nx">l</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotTop</span><span class="o">?</span><span class="nx">l</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotTop</span><span class="o">:</span><span class="nx">l</span><span class="o">&gt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotTop</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotHeight</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotTop</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotHeight</span><span class="p">);</span></div><div class='line' id='LC143'><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">mouseIsDown</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">!==</span><span class="s2">&quot;touchstart&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nb">Math</span><span class="p">.</span><span class="nx">sqrt</span><span class="p">(</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">mouseDownX</span><span class="o">-</span><span class="nx">h</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="o">+</span><span class="nb">Math</span><span class="p">.</span><span class="nx">pow</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">mouseDownY</span><span class="o">-</span><span class="nx">l</span><span class="p">,</span><span class="mi">2</span><span class="p">)),</span><span class="nx">e</span><span class="o">&gt;</span><span class="mi">10</span><span class="p">)){</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">isInsidePlot</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">mouseDownX</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotLeft</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">mouseDownY</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotTop</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">hasCartesianSeries</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">zoomX</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">zoomY</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&amp;&amp;!</span><span class="nx">b</span><span class="p">.</span><span class="nx">selectionMarker</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">selectionMarker</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotLeft</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotTop</span><span class="p">,</span><span class="nx">f</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotWidth</span><span class="p">,</span><span class="nx">g</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotHeight</span><span class="p">,</span><span class="mi">0</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">fill</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">selectionMarkerFill</span><span class="o">||</span><span class="s2">&quot;rgba(69,114,167,0.25)&quot;</span><span class="p">,</span><span class="nx">zIndex</span><span class="o">:</span><span class="mi">7</span><span class="p">}).</span><span class="nx">add</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">selectionMarker</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">q</span><span class="o">=</span><span class="nx">h</span><span class="o">-</span><span class="nx">b</span><span class="p">.</span><span class="nx">mouseDownX</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">selectionMarker</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">width</span><span class="o">:</span><span class="nx">M</span><span class="p">(</span><span class="nx">q</span><span class="p">),</span></div><div class='line' id='LC144'><span class="nx">x</span><span class="o">:</span><span class="p">(</span><span class="nx">q</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">q</span><span class="p">)</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">mouseDownX</span><span class="p">})}</span><span class="nx">b</span><span class="p">.</span><span class="nx">selectionMarker</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="o">-=</span><span class="nx">b</span><span class="p">.</span><span class="nx">mouseDownY</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">selectionMarker</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">height</span><span class="o">:</span><span class="nx">M</span><span class="p">(</span><span class="nx">l</span><span class="p">),</span><span class="nx">y</span><span class="o">:</span><span class="p">(</span><span class="nx">l</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">l</span><span class="p">)</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">mouseDownY</span><span class="p">}));</span><span class="nx">d</span><span class="o">&amp;&amp;!</span><span class="nx">b</span><span class="p">.</span><span class="nx">selectionMarker</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">panning</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">pan</span><span class="p">(</span><span class="nx">h</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">m</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">onmousemove</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">m</span><span class="o">||!</span><span class="nx">c</span><span class="p">.</span><span class="nx">hasCartesianSeries</span><span class="p">}};</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="sr">/Android 4\.0/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">na</span><span class="p">))</span><span class="nx">d</span><span class="p">.</span><span class="nx">onmousemove</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="nx">J</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;mouseleave&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">hideTooltipOnMouseLeave</span><span class="p">);</span><span class="nx">Ba</span><span class="o">||</span><span class="nx">J</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="s2">&quot;mousemove&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">hideTooltipOnMouseMove</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">ontouchstart</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">zoomX</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">zoomY</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">onmousedown</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">)};</span><span class="nx">d</span><span class="p">.</span><span class="nx">ontouchmove</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">ontouchend</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">resetTracker</span><span class="p">()};</span></div><div class='line' id='LC145'><span class="nx">d</span><span class="p">.</span><span class="nx">onclick</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">hoverPoint</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">normalizeMouseEvent</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">cancelBubble</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">cancelClick</span><span class="p">)</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">,</span><span class="s2">&quot;isTracker&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">,</span><span class="s2">&quot;isTracker&quot;</span><span class="p">))</span><span class="o">?</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">plotX</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">plotY</span><span class="p">,</span><span class="nx">x</span><span class="p">(</span><span class="nx">d</span><span class="p">,{</span><span class="nx">pageX</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">chartPosition</span><span class="p">.</span><span class="nx">left</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotLeft</span><span class="o">+</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">inverted</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotWidth</span><span class="o">-</span><span class="nx">f</span><span class="o">:</span><span class="nx">e</span><span class="p">),</span><span class="nx">pageY</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">chartPosition</span><span class="p">.</span><span class="nx">top</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotTop</span><span class="o">+</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">inverted</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotHeight</span><span class="o">-</span><span class="nx">e</span><span class="o">:</span><span class="nx">f</span><span class="p">)}),</span><span class="nx">F</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">,{</span><span class="nx">point</span><span class="o">:</span><span class="nx">d</span><span class="p">})),</span><span class="nx">d</span><span class="p">.</span><span class="nx">firePointEvent</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">getMouseCoordinates</span><span class="p">(</span><span class="nx">a</span><span class="p">)),</span><span class="nx">c</span><span class="p">.</span><span class="nx">isInsidePlot</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">chartX</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotLeft</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">chartY</span><span class="o">-</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotTop</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">F</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">))}},</span></div><div class='line' id='LC146'><span class="nx">destroy</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">container</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">trackerGroup</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">trackerGroup</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">trackerGroup</span><span class="p">.</span><span class="nx">destroy</span><span class="p">();</span><span class="nx">R</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;mouseleave&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">hideTooltipOnMouseLeave</span><span class="p">);</span><span class="nx">R</span><span class="p">(</span><span class="nx">C</span><span class="p">,</span><span class="s2">&quot;mousemove&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">hideTooltipOnMouseMove</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">onclick</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">onmousedown</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">onmousemove</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">ontouchstart</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">ontouchend</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">ontouchmove</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">clearInterval</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">tooltipTimeout</span><span class="p">)},</span><span class="nx">init</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">trackerGroup</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">trackerGroup</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;tracker&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">zIndex</span><span class="o">:</span><span class="mi">9</span><span class="p">}).</span><span class="nx">add</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">enabled</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">tooltip</span><span class="o">=</span><span class="k">new</span> <span class="nx">pb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">setDOMEvents</span><span class="p">()}};</span><span class="nx">rb</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">init</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span></div><div class='line' id='LC147'><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">legend</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">enabled</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">itemStyle</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">padding</span><span class="p">,</span><span class="mi">8</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">itemMarginTop</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">baseline</span><span class="o">=</span><span class="nx">z</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">fontSize</span><span class="p">)</span><span class="o">+</span><span class="mi">3</span><span class="o">+</span><span class="nx">f</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">itemStyle</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">itemHiddenStyle</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">itemHiddenStyle</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">itemMarginTop</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">padding</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">initialItemX</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">initialItemY</span><span class="o">=</span><span class="nx">e</span><span class="o">-</span><span class="mi">5</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">maxItemWidth</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">chart</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">itemHeight</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">lastLineHeight</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">render</span><span class="p">();</span><span class="nx">J</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="s2">&quot;endResize&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">positionCheckboxes</span><span class="p">()})}},</span><span class="nx">colorizeItem</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">legendItem</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">legendLine</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">legendSymbol</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">itemHiddenStyle</span><span class="p">.</span><span class="nx">color</span><span class="p">,</span></div><div class='line' id='LC148'><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">itemStyle</span><span class="p">.</span><span class="nx">color</span><span class="o">:</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">color</span><span class="o">:</span><span class="nx">g</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">marker</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="p">{</span><span class="nx">stroke</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">fill</span><span class="o">:</span><span class="nx">h</span><span class="p">},</span><span class="nx">j</span><span class="p">;</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">css</span><span class="p">({</span><span class="nx">fill</span><span class="o">:</span><span class="nx">c</span><span class="p">});</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">stroke</span><span class="o">:</span><span class="nx">h</span><span class="p">});</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">j</span> <span class="k">in</span> <span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">convertAttribs</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">g</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">j</span><span class="p">],</span><span class="nx">d</span><span class="o">!==</span><span class="nx">A</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="p">[</span><span class="nx">j</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">);</span><span class="nx">f</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">i</span><span class="p">)}},</span><span class="nx">positionItem</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">symbolPadding</span><span class="p">,</span><span class="nx">b</span><span class="o">=!</span><span class="nx">b</span><span class="p">.</span><span class="nx">rtl</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">_legendItemPos</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">checkbox</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">legendGroup</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">legendGroup</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="nx">b</span><span class="o">?</span><span class="nx">e</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">legendWidth</span><span class="o">-</span><span class="nx">e</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">c</span><span class="o">-</span><span class="mi">4</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="nx">f</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">d</span><span class="p">},</span><span class="nx">destroyItem</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">checkbox</span><span class="p">;</span><span class="nx">o</span><span class="p">([</span><span class="s2">&quot;legendItem&quot;</span><span class="p">,</span><span class="s2">&quot;legendLine&quot;</span><span class="p">,</span><span class="s2">&quot;legendSymbol&quot;</span><span class="p">,</span></div><div class='line' id='LC149'><span class="s2">&quot;legendGroup&quot;</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">destroy</span><span class="p">()});</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">Na</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">checkbox</span><span class="p">)},</span><span class="nx">destroy</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">group</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">box</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">box</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">destroy</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">group</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">destroy</span><span class="p">()},</span><span class="nx">positionCheckboxes</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">group</span><span class="p">.</span><span class="nx">alignAttr</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">clipHeight</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">legendHeight</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">translateY</span><span class="p">,</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">allItems</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">checkbox</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="p">(</span><span class="nx">a</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="mi">3</span><span class="p">,</span><span class="nx">I</span><span class="p">(</span><span class="nx">f</span><span class="p">,{</span><span class="nx">left</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">translateX</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">legendItemWidth</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="mi">20</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">top</span><span class="o">:</span><span class="nx">g</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">display</span><span class="o">:</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">c</span><span class="o">-</span><span class="mi">6</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">c</span><span class="o">+</span><span class="nx">d</span><span class="o">-</span><span class="mi">6</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="nx">Q</span><span class="p">}))})},</span><span class="nx">renderItem</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">p</span><span class="p">;</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span></div><div class='line' id='LC150'><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">renderer</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">layout</span><span class="o">===</span><span class="s2">&quot;horizontal&quot;</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">symbolWidth</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">symbolPadding</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">itemStyle</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">itemHiddenStyle</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">padding</span><span class="p">,</span><span class="nx">l</span><span class="o">=!</span><span class="nx">e</span><span class="p">.</span><span class="nx">rtl</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">itemMarginBottom</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">itemMarginTop</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">initialItemX</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">legendItem</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">series</span><span class="o">||</span><span class="nx">a</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="nx">u</span><span class="p">.</span><span class="nx">showCheckbox</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">useHTML</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">legendGroup</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;legend-item&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">zIndex</span><span class="o">:</span><span class="mi">1</span><span class="p">}).</span><span class="nx">add</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">scrollGroup</span><span class="p">),</span><span class="nx">r</span><span class="p">.</span><span class="nx">drawLegendSymbol</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">legendItem</span><span class="o">=</span><span class="nx">t</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">text</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">labelFormatter</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">l</span><span class="o">?</span><span class="nx">g</span><span class="o">+</span><span class="nx">h</span><span class="o">:-</span><span class="nx">h</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">baseline</span><span class="p">,</span><span class="nx">x</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="nx">B</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">visible</span><span class="o">?</span><span class="nx">i</span><span class="o">:</span><span class="nx">j</span><span class="p">)).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">align</span><span class="o">:</span><span class="nx">l</span><span class="o">?</span><span class="s2">&quot;left&quot;</span><span class="o">:</span><span class="s2">&quot;right&quot;</span><span class="p">,</span></div><div class='line' id='LC151'><span class="nx">zIndex</span><span class="o">:</span><span class="mi">2</span><span class="p">}).</span><span class="nx">add</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">legendGroup</span><span class="p">),(</span><span class="nx">x</span><span class="o">?</span><span class="nx">t</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">legendGroup</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;mouseover&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">setState</span><span class="p">(</span><span class="s2">&quot;hover&quot;</span><span class="p">);</span><span class="nx">t</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">itemHoverStyle</span><span class="p">)}).</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;mouseout&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">t</span><span class="p">.</span><span class="nx">css</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">visible</span><span class="o">?</span><span class="nx">i</span><span class="o">:</span><span class="nx">j</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">setState</span><span class="p">()}).</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">setVisible</span><span class="p">()},</span><span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="nx">browserEvent</span><span class="o">:</span><span class="nx">b</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">firePointEvent</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">firePointEvent</span><span class="p">(</span><span class="s2">&quot;legendItemClick&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;legendItemClick&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">colorizeItem</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">visible</span><span class="p">),</span><span class="nx">u</span><span class="o">&amp;&amp;</span><span class="nx">v</span><span class="p">))</span><span class="nx">a</span><span class="p">.</span><span class="nx">checkbox</span><span class="o">=</span><span class="nx">T</span><span class="p">(</span><span class="s2">&quot;input&quot;</span><span class="p">,{</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;checkbox&quot;</span><span class="p">,</span><span class="nx">checked</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">selected</span><span class="p">,</span><span class="nx">defaultChecked</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">selected</span><span class="p">},</span><span class="nx">e</span><span class="p">.</span><span class="nx">itemCheckboxStyle</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">container</span><span class="p">),</span></div><div class='line' id='LC152'><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">checkbox</span><span class="p">,</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;checkboxClick&quot;</span><span class="p">,{</span><span class="nx">checked</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">checked</span><span class="p">},</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">select</span><span class="p">()})});</span><span class="nx">d</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">getBBox</span><span class="p">();</span><span class="nx">p</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">legendItemWidth</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">itemWidth</span><span class="o">||</span><span class="nx">g</span><span class="o">+</span><span class="nx">h</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="o">+</span><span class="nx">k</span><span class="o">+</span><span class="p">(</span><span class="nx">v</span><span class="o">?</span><span class="mi">20</span><span class="o">:</span><span class="mi">0</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">p</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">itemHeight</span><span class="o">=</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">itemX</span><span class="o">-</span><span class="nx">o</span><span class="o">+</span><span class="nx">e</span><span class="o">&gt;</span><span class="p">(</span><span class="nx">m</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">chartWidth</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">k</span><span class="o">-</span><span class="nx">o</span><span class="p">))</span><span class="nx">b</span><span class="p">.</span><span class="nx">itemX</span><span class="o">=</span><span class="nx">o</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">itemY</span><span class="o">+=</span><span class="nx">n</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">lastLineHeight</span><span class="o">+</span><span class="nx">q</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">lastLineHeight</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">maxItemWidth</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">maxItemWidth</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">lastItemY</span><span class="o">=</span><span class="nx">n</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">itemY</span><span class="o">+</span><span class="nx">q</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">lastLineHeight</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">lastLineHeight</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">_legendItemPos</span><span class="o">=</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">itemX</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">itemY</span><span class="p">];</span><span class="nx">f</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">itemX</span><span class="o">+=</span><span class="nx">e</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">itemY</span><span class="o">+=</span><span class="nx">n</span><span class="o">+</span><span class="nx">g</span><span class="o">+</span><span class="nx">q</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">lastLineHeight</span><span class="o">=</span><span class="nx">g</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="o">=</span></div><div class='line' id='LC153'><span class="nx">m</span><span class="o">||</span><span class="nx">s</span><span class="p">(</span><span class="nx">f</span><span class="o">?</span><span class="nx">b</span><span class="p">.</span><span class="nx">itemX</span><span class="o">-</span><span class="nx">o</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="p">)},</span><span class="nx">render</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">renderer</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">group</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">box</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">padding</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">borderWidth</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">backgroundColor</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">itemX</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">initialItemX</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">itemY</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">initialItemY</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">lastItemY</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">d</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">group</span><span class="o">=</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;legend&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">zIndex</span><span class="o">:</span><span class="mi">7</span><span class="p">}).</span><span class="nx">add</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">contentGroup</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">g</span><span class="p">().</span><span class="nx">attr</span><span class="p">({</span><span class="nx">zIndex</span><span class="o">:</span><span class="mi">1</span><span class="p">}).</span><span class="nx">add</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">scrollGroup</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">g</span><span class="p">().</span><span class="nx">add</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">contentGroup</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">clipRect</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">clipRect</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">9999</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">chartHeight</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">contentGroup</span><span class="p">.</span><span class="nx">clip</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">clipRect</span><span class="p">);</span><span class="nx">e</span><span class="o">=</span><span class="p">[];</span><span class="nx">o</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">;</span></div><div class='line' id='LC154'><span class="nx">b</span><span class="p">.</span><span class="nx">showInLegend</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">legendItems</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">legendType</span><span class="o">===</span><span class="s2">&quot;point&quot;</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="o">:</span><span class="nx">a</span><span class="p">)))});</span><span class="nx">Ib</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">legendIndex</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">-</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">legendIndex</span><span class="o">||</span><span class="mi">0</span><span class="p">)});</span><span class="nx">j</span><span class="p">.</span><span class="nx">reversed</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">reverse</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">allItems</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">display</span><span class="o">=</span><span class="nx">f</span><span class="o">=!!</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">o</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">renderItem</span><span class="p">(</span><span class="nx">b</span><span class="p">)});</span><span class="nx">g</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">width</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">lastItemY</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">lastLineHeight</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">handleOverflow</span><span class="p">(</span><span class="nx">h</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="o">||</span><span class="nx">m</span><span class="p">){</span><span class="nx">g</span><span class="o">+=</span><span class="nx">k</span><span class="p">;</span><span class="nx">h</span><span class="o">+=</span><span class="nx">k</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span><span class="nx">i</span><span class="p">[</span><span class="nx">i</span><span class="p">.</span><span class="nx">isNew</span><span class="o">?</span><span class="s2">&quot;attr&quot;</span><span class="o">:</span><span class="s2">&quot;animate&quot;</span><span class="p">](</span><span class="nx">i</span><span class="p">.</span><span class="nx">crisp</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">)),</span><span class="nx">i</span><span class="p">.</span><span class="nx">isNew</span><span class="o">=!</span><span class="mi">1</span><span class="p">}</span><span class="k">else</span> <span class="nx">a</span><span class="p">.</span><span class="nx">box</span><span class="o">=</span><span class="nx">i</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">j</span><span class="p">.</span><span class="nx">borderRadius</span><span class="p">,</span></div><div class='line' id='LC155'><span class="nx">l</span><span class="o">||</span><span class="mi">0</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">stroke</span><span class="o">:</span><span class="nx">j</span><span class="p">.</span><span class="nx">borderColor</span><span class="p">,</span><span class="s2">&quot;stroke-width&quot;</span><span class="o">:</span><span class="nx">l</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">fill</span><span class="o">:</span><span class="nx">m</span><span class="o">||</span><span class="nx">Q</span><span class="p">}).</span><span class="nx">add</span><span class="p">(</span><span class="nx">d</span><span class="p">).</span><span class="nx">shadow</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">shadow</span><span class="p">),</span><span class="nx">i</span><span class="p">.</span><span class="nx">isNew</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="p">[</span><span class="nx">f</span><span class="o">?</span><span class="s2">&quot;show&quot;</span><span class="o">:</span><span class="s2">&quot;hide&quot;</span><span class="p">]()}</span><span class="nx">a</span><span class="p">.</span><span class="nx">legendWidth</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">legendHeight</span><span class="o">=</span><span class="nx">h</span><span class="p">;</span><span class="nx">o</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">positionItem</span><span class="p">(</span><span class="nx">b</span><span class="p">)});</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">align</span><span class="p">(</span><span class="nx">x</span><span class="p">({</span><span class="nx">width</span><span class="o">:</span><span class="nx">g</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">h</span><span class="p">},</span><span class="nx">j</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">spacingBox</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">isResizing</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">positionCheckboxes</span><span class="p">()},</span><span class="nx">handleOverflow</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">renderer</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">spacingBox</span><span class="p">.</span><span class="nx">height</span><span class="o">+</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">verticalAlign</span><span class="o">===</span><span class="s2">&quot;top&quot;</span><span class="o">?-</span><span class="nx">f</span><span class="o">:</span><span class="nx">f</span><span class="p">)</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">padding</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">maxHeight</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">clipRect</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">navigation</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">animation</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span></div><div class='line' id='LC156'><span class="nx">i</span><span class="p">.</span><span class="nx">arrowSize</span><span class="o">||</span><span class="mi">12</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">nav</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">layout</span><span class="o">===</span><span class="s2">&quot;horizontal&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">/=</span><span class="mi">2</span><span class="p">);</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">O</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">));</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&gt;</span><span class="nx">f</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">clipHeight</span><span class="o">=</span><span class="nx">c</span><span class="o">=</span><span class="nx">f</span><span class="o">-</span><span class="mi">20</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">pageCount</span><span class="o">=</span><span class="nx">za</span><span class="p">(</span><span class="nx">a</span><span class="o">/</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">currentPage</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">currentPage</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">fullHeight</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">h</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">height</span><span class="o">:</span><span class="nx">c</span><span class="p">});</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">l</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">nav</span><span class="o">=</span><span class="nx">l</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">g</span><span class="p">().</span><span class="nx">attr</span><span class="p">({</span><span class="nx">zIndex</span><span class="o">:</span><span class="mi">1</span><span class="p">}).</span><span class="nx">add</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">group</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">up</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">symbol</span><span class="p">(</span><span class="s2">&quot;triangle&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">k</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">scroll</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="nx">j</span><span class="p">)}).</span><span class="nx">add</span><span class="p">(</span><span class="nx">l</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">pager</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">text</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="mi">15</span><span class="p">,</span><span class="mi">10</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">style</span><span class="p">).</span><span class="nx">add</span><span class="p">(</span><span class="nx">l</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">down</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">symbol</span><span class="p">(</span><span class="s2">&quot;triangle-down&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">k</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">scroll</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nx">j</span><span class="p">)}).</span><span class="nx">add</span><span class="p">(</span><span class="nx">l</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">scroll</span><span class="p">(</span><span class="mi">0</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">f</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span><span class="nx">h</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">height</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">chartHeight</span><span class="p">}),</span></div><div class='line' id='LC157'><span class="nx">l</span><span class="p">.</span><span class="nx">hide</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">scrollGroup</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">translateY</span><span class="o">:</span><span class="mi">1</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">clipHeight</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">scroll</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">pageCount</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">currentPage</span><span class="o">+</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">clipHeight</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">navigation</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">activeColor</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">inactiveColor</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">pager</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">padding</span><span class="p">;</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">)</span><span class="nx">b</span><span class="o">!==</span><span class="nx">A</span><span class="o">&amp;&amp;</span><span class="nx">xa</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">nav</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">translateX</span><span class="o">:</span><span class="nx">i</span><span class="p">,</span><span class="nx">translateY</span><span class="o">:</span><span class="nx">e</span><span class="o">+</span><span class="mi">7</span><span class="p">,</span><span class="nx">visibility</span><span class="o">:</span><span class="s2">&quot;visible&quot;</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">up</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">fill</span><span class="o">:</span><span class="nx">d</span><span class="o">===</span><span class="mi">1</span><span class="o">?</span><span class="nx">h</span><span class="o">:</span><span class="nx">g</span><span class="p">}).</span><span class="nx">css</span><span class="p">({</span><span class="nx">cursor</span><span class="o">:</span><span class="nx">d</span><span class="o">===</span><span class="mi">1</span><span class="o">?</span><span class="s2">&quot;default&quot;</span><span class="o">:</span><span class="s2">&quot;pointer&quot;</span><span class="p">}),</span><span class="nx">f</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">text</span><span class="o">:</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;/&quot;</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">pageCount</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">down</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="mi">18</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">pager</span><span class="p">.</span><span class="nx">getBBox</span><span class="p">().</span><span class="nx">width</span><span class="p">,</span></div><div class='line' id='LC158'><span class="nx">fill</span><span class="o">:</span><span class="nx">d</span><span class="o">===</span><span class="nx">c</span><span class="o">?</span><span class="nx">h</span><span class="o">:</span><span class="nx">g</span><span class="p">}).</span><span class="nx">css</span><span class="p">({</span><span class="nx">cursor</span><span class="o">:</span><span class="nx">d</span><span class="o">===</span><span class="nx">c</span><span class="o">?</span><span class="s2">&quot;default&quot;</span><span class="o">:</span><span class="s2">&quot;pointer&quot;</span><span class="p">}),</span><span class="nx">e</span><span class="o">=-</span><span class="nx">O</span><span class="p">(</span><span class="nx">e</span><span class="o">*</span><span class="p">(</span><span class="nx">d</span><span class="o">-</span><span class="mi">1</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">fullHeight</span><span class="o">-</span><span class="nx">e</span><span class="o">+</span><span class="nx">i</span><span class="p">)</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">scrollGroup</span><span class="p">.</span><span class="nx">animate</span><span class="p">({</span><span class="nx">translateY</span><span class="o">:</span><span class="nx">e</span><span class="p">}),</span><span class="nx">f</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">text</span><span class="o">:</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;/&quot;</span><span class="o">+</span><span class="nx">c</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">currentPage</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">positionCheckboxes</span><span class="p">(</span><span class="nx">e</span><span class="p">)}};</span><span class="nx">sb</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">init</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">series</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">series</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="nx">N</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">series</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">series</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">margin</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">Y</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">?</span><span class="nx">e</span><span class="o">:</span><span class="p">[</span><span class="nx">e</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">e</span><span class="p">];</span><span class="k">this</span><span class="p">.</span><span class="nx">optionsMarginTop</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">marginTop</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">optionsMarginRight</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">marginRight</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">optionsMarginBottom</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">marginBottom</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="mi">2</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">optionsMarginLeft</span><span class="o">=</span></div><div class='line' id='LC159'><span class="nx">n</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">marginLeft</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="mi">3</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">runChartClick</span><span class="o">=</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">events</span><span class="p">)</span><span class="o">&amp;&amp;!!</span><span class="nx">e</span><span class="p">.</span><span class="nx">click</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">callback</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">isResizing</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">axes</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">series</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">hasCartesianSeries</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">showAxes</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">index</span><span class="o">=</span><span class="nx">Ha</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">Ha</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">reflow</span><span class="o">!==!</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">J</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;load&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">initReflow</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span> <span class="k">in</span> <span class="nx">e</span><span class="p">)</span><span class="nx">J</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">xAxis</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">yAxis</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">animation</span><span class="o">=</span><span class="nx">V</span><span class="o">?!</span><span class="mi">1</span><span class="o">:</span><span class="nx">n</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">animation</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">pointCount</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">counters</span><span class="o">=</span><span class="k">new</span> <span class="nx">Hb</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">firstRender</span><span class="p">()},</span><span class="nx">initSeries</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">new</span> <span class="nx">$</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">defaultSeriesType</span><span class="p">];</span></div><div class='line' id='LC160'><span class="nx">b</span><span class="p">.</span><span class="nx">init</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">addSeries</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">xa</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">F</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;addSeries&quot;</span><span class="p">,{</span><span class="nx">options</span><span class="o">:</span><span class="nx">a</span><span class="p">},</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">initSeries</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">isDirtyLegend</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">redraw</span><span class="p">()}));</span><span class="k">return</span> <span class="nx">d</span><span class="p">},</span><span class="nx">isInsidePlot</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="o">?</span><span class="nx">b</span><span class="o">:</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="o">?</span><span class="nx">a</span><span class="o">:</span><span class="nx">b</span><span class="p">;</span><span class="k">return</span> <span class="nx">d</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">&lt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotWidth</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">&lt;=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotHeight</span><span class="p">},</span><span class="nx">adjustTickAmounts</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">alignTicks</span><span class="o">!==!</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">axes</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">adjustTickAmount</span><span class="p">()});</span><span class="k">this</span><span class="p">.</span><span class="nx">maxTicks</span><span class="o">=</span><span class="kc">null</span><span class="p">},</span><span class="nx">redraw</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axes</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">tracker</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">legend</span><span class="p">,</span></div><div class='line' id='LC161'><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">isDirtyLegend</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">isDirtyBox</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">i</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">isHidden</span><span class="p">(),</span><span class="nx">m</span><span class="o">=</span><span class="p">[];</span><span class="nx">xa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="k">this</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">cloneRenderTo</span><span class="p">();</span><span class="nx">j</span><span class="o">--</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">j</span><span class="p">],</span><span class="nx">a</span><span class="p">.</span><span class="nx">isDirty</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">stacking</span><span class="p">){</span><span class="nx">g</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">i</span><span class="p">;</span><span class="nx">j</span><span class="o">--</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">j</span><span class="p">],</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">stacking</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">isDirty</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">o</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">isDirty</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">legendType</span><span class="o">===</span><span class="s2">&quot;point&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=!</span><span class="mi">0</span><span class="p">)});</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">enabled</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">render</span><span class="p">(),</span><span class="k">this</span><span class="p">.</span><span class="nx">isDirtyLegend</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">hasCartesianSeries</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">isResizing</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">maxTicks</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">o</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">setScale</span><span class="p">()});</span><span class="k">this</span><span class="p">.</span><span class="nx">adjustTickAmounts</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">getMargins</span><span class="p">();</span></div><div class='line' id='LC162'><span class="nx">o</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">isDirtyExtremes</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">isDirtyExtremes</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;afterSetExtremes&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">getExtremes</span><span class="p">())});</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">isDirty</span><span class="o">||</span><span class="nx">h</span><span class="o">||</span><span class="nx">g</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">redraw</span><span class="p">(),</span><span class="nx">h</span><span class="o">=!</span><span class="mi">0</span><span class="p">})}</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">drawChartBox</span><span class="p">();</span><span class="nx">o</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">isDirty</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">visible</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">isCartesian</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">xAxis</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">redraw</span><span class="p">()});</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">resetTracker</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">resetTracker</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">k</span><span class="p">.</span><span class="nx">draw</span><span class="p">();</span><span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;redraw&quot;</span><span class="p">);</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">cloneRenderTo</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">o</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">call</span><span class="p">()})},</span><span class="nx">showLoading</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">loadingDiv</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">loading</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">loadingDiv</span><span class="o">=</span><span class="nx">c</span><span class="o">=</span><span class="nx">T</span><span class="p">(</span><span class="nx">ga</span><span class="p">,{</span><span class="nx">className</span><span class="o">:</span><span class="s2">&quot;highcharts-loading&quot;</span><span class="p">},</span></div><div class='line' id='LC163'><span class="nx">x</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">style</span><span class="p">,{</span><span class="nx">left</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">plotLeft</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">top</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">plotTop</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">plotWidth</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">plotHeight</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">zIndex</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span><span class="nx">display</span><span class="o">:</span><span class="nx">Q</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">loadingSpan</span><span class="o">=</span><span class="nx">T</span><span class="p">(</span><span class="s2">&quot;span&quot;</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">labelStyle</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">loadingSpan</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">lang</span><span class="p">.</span><span class="nx">loading</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">loadingShown</span><span class="p">)</span><span class="nx">I</span><span class="p">(</span><span class="nx">c</span><span class="p">,{</span><span class="nx">opacity</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">display</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">}),</span><span class="nx">xb</span><span class="p">(</span><span class="nx">c</span><span class="p">,{</span><span class="nx">opacity</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">opacity</span><span class="p">},{</span><span class="nx">duration</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">showDuration</span><span class="o">||</span><span class="mi">0</span><span class="p">}),</span><span class="k">this</span><span class="p">.</span><span class="nx">loadingShown</span><span class="o">=!</span><span class="mi">0</span><span class="p">},</span><span class="nx">hideLoading</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">loadingDiv</span><span class="p">;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">xb</span><span class="p">(</span><span class="nx">b</span><span class="p">,{</span><span class="nx">opacity</span><span class="o">:</span><span class="mi">0</span><span class="p">},{</span><span class="nx">duration</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">loading</span><span class="p">.</span><span class="nx">hideDuration</span><span class="o">||</span><span class="mi">100</span><span class="p">,</span><span class="nx">complete</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">I</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span></div><div class='line' id='LC164'><span class="p">{</span><span class="nx">display</span><span class="o">:</span><span class="nx">Q</span><span class="p">})}});</span><span class="k">this</span><span class="p">.</span><span class="nx">loadingShown</span><span class="o">=!</span><span class="mi">1</span><span class="p">},</span><span class="nx">get</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axes</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">options</span><span class="p">.</span><span class="nx">id</span><span class="o">===</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">options</span><span class="p">.</span><span class="nx">id</span><span class="o">===</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">points</span><span class="o">||</span><span class="p">[];</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">b</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">id</span><span class="o">===</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span> <span class="nx">e</span><span class="p">[</span><span class="nx">b</span><span class="p">]}</span><span class="k">return</span> <span class="kc">null</span><span class="p">},</span><span class="nx">getAxes</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">xAxis</span><span class="o">||</span><span class="p">{},</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">yAxis</span><span class="o">||</span><span class="p">{},</span><span class="nx">c</span><span class="o">=</span><span class="nx">la</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">o</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">index</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">isX</span><span class="o">=!</span><span class="mi">0</span><span class="p">});</span><span class="nx">b</span><span class="o">=</span><span class="nx">la</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">o</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">index</span><span class="o">=</span><span class="nx">b</span><span class="p">});</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="nx">o</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">new</span> <span class="nx">ob</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC165'><span class="nx">b</span><span class="p">)});</span><span class="nx">a</span><span class="p">.</span><span class="nx">adjustTickAmounts</span><span class="p">()},</span><span class="nx">getSelectedPoints</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">[];</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">Ob</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">points</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">selected</span><span class="p">}))});</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">getSelectedSeries</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">Ob</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">selected</span><span class="p">})},</span><span class="nx">showResetZoom</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">N</span><span class="p">.</span><span class="nx">lang</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">resetZoomButton</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">theme</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">states</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">relativeTo</span><span class="o">===</span><span class="s2">&quot;chart&quot;</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="s2">&quot;plotBox&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">resetZoomButton</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">button</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">resetZoom</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">zoomOut</span><span class="p">()},</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">hover</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">align</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">position</span><span class="p">.</span><span class="nx">align</span><span class="p">,</span></div><div class='line' id='LC166'><span class="nx">title</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">resetZoomTitle</span><span class="p">}).</span><span class="nx">add</span><span class="p">().</span><span class="nx">align</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">position</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">resetZoomButton</span><span class="p">.</span><span class="nx">alignTo</span><span class="o">=</span><span class="nx">f</span><span class="p">},</span><span class="nx">zoomOut</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">resetZoomButton</span><span class="p">;</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;selection&quot;</span><span class="p">,{</span><span class="nx">resetSelection</span><span class="o">:!</span><span class="mi">0</span><span class="p">},</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">zoom</span><span class="p">()});</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">resetZoomButton</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">destroy</span><span class="p">()},</span><span class="nx">zoom</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="p">;</span><span class="o">!</span><span class="nx">a</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">resetSelection</span><span class="o">?</span><span class="nx">o</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">axes</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">zoom</span><span class="p">()})</span><span class="o">:</span><span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">xAxis</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">yAxis</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axis</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">tracker</span><span class="p">[</span><span class="nx">e</span><span class="p">.</span><span class="nx">isXAxis</span><span class="o">?</span><span class="s2">&quot;zoomX&quot;</span><span class="o">:</span><span class="s2">&quot;zoomY&quot;</span><span class="p">])</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">zoom</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">min</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">max</span><span class="p">)});</span><span class="nx">b</span><span class="p">.</span><span class="nx">resetZoomButton</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">showResetZoom</span><span class="p">();</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">redraw</span><span class="p">(</span><span class="nx">n</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">animation</span><span class="p">,</span></div><div class='line' id='LC167'><span class="nx">b</span><span class="p">.</span><span class="nx">pointCount</span><span class="o">&lt;</span><span class="mi">100</span><span class="p">))},</span><span class="nx">pan</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">xAxis</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseDownX</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">pointRange</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">getExtremes</span><span class="p">(),</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="nx">c</span><span class="o">-</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">+</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">plotWidth</span><span class="o">-</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">-</span><span class="nx">d</span><span class="p">;(</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">hoverPoints</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">setState</span><span class="p">()});</span><span class="nx">b</span><span class="p">.</span><span class="nx">series</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="o">&gt;</span><span class="nx">O</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">dataMin</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">min</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&lt;</span><span class="nx">s</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">dataMax</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">max</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">setExtremes</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,{</span><span class="nx">trigger</span><span class="o">:</span><span class="s2">&quot;pan&quot;</span><span class="p">});</span><span class="k">this</span><span class="p">.</span><span class="nx">mouseDownX</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">I</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">,{</span><span class="nx">cursor</span><span class="o">:</span><span class="s2">&quot;move&quot;</span><span class="p">})},</span><span class="nx">setTitle</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">chartTitleOptions</span><span class="o">=</span><span class="nx">e</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">title</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">chartSubtitleOptions</span><span class="o">=</span><span class="nx">d</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">subtitle</span><span class="p">,</span></div><div class='line' id='LC168'><span class="nx">b</span><span class="p">);</span><span class="nx">o</span><span class="p">([[</span><span class="s2">&quot;title&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">],[</span><span class="s2">&quot;subtitle&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">]],</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">2</span><span class="p">];</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">destroy</span><span class="p">());</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">text</span><span class="o">&amp;&amp;!</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">text</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">text</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">useHTML</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">align</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">align</span><span class="p">,</span><span class="s2">&quot;class&quot;</span><span class="o">:</span><span class="s2">&quot;highcharts-&quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">,</span><span class="nx">zIndex</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">zIndex</span><span class="o">||</span><span class="mi">4</span><span class="p">}).</span><span class="nx">css</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">style</span><span class="p">).</span><span class="nx">add</span><span class="p">().</span><span class="nx">align</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">spacingBox</span><span class="p">))})},</span><span class="nx">getChartSize</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">renderToClone</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">renderTo</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">containerWidth</span><span class="o">=</span><span class="nx">eb</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;width&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">containerHeight</span><span class="o">=</span><span class="nx">eb</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;height&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">chartWidth</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">containerWidth</span><span class="p">,</span><span class="mi">600</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">chartHeight</span><span class="o">=</span></div><div class='line' id='LC169'><span class="nx">s</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">containerHeight</span><span class="o">&gt;</span><span class="mi">19</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">containerHeight</span><span class="o">:</span><span class="mi">400</span><span class="p">))},</span><span class="nx">cloneRenderTo</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">renderToClone</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="p">;</span><span class="nx">a</span><span class="o">?</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">renderTo</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">Na</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="k">delete</span> <span class="k">this</span><span class="p">.</span><span class="nx">renderToClone</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">renderTo</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">renderToClone</span><span class="o">=</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">renderTo</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(</span><span class="mi">0</span><span class="p">),</span><span class="nx">I</span><span class="p">(</span><span class="nx">b</span><span class="p">,{</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;absolute&quot;</span><span class="p">,</span><span class="nx">top</span><span class="o">:</span><span class="s2">&quot;-9999px&quot;</span><span class="p">,</span><span class="nx">display</span><span class="o">:</span><span class="s2">&quot;block&quot;</span><span class="p">}),</span><span class="nx">C</span><span class="p">.</span><span class="nx">body</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">c</span><span class="p">))},</span><span class="nx">getContainer</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">renderTo</span><span class="o">=</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">renderTo</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="s2">&quot;highcharts-&quot;</span><span class="o">+</span><span class="nx">tb</span><span class="o">++</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">ja</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">this</span><span class="p">.</span><span class="nx">renderTo</span><span class="o">=</span></div><div class='line' id='LC170'><span class="nx">a</span><span class="o">=</span><span class="nx">C</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">a</span><span class="o">||</span><span class="nx">Oa</span><span class="p">(</span><span class="mi">13</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">z</span><span class="p">(</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;data-highcharts-chart&quot;</span><span class="p">));</span><span class="o">!</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">Ha</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">Ha</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">destroy</span><span class="p">();</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;data-highcharts-chart&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">index</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetWidth</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">cloneRenderTo</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">getChartSize</span><span class="p">();</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chartWidth</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chartHeight</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">container</span><span class="o">=</span><span class="nx">a</span><span class="o">=</span><span class="nx">T</span><span class="p">(</span><span class="nx">ga</span><span class="p">,{</span><span class="nx">className</span><span class="o">:</span><span class="s2">&quot;highcharts-container&quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">className</span><span class="o">?</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">b</span><span class="p">.</span><span class="nx">className</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">id</span><span class="o">:</span><span class="nx">e</span><span class="p">},</span><span class="nx">x</span><span class="p">({</span><span class="nx">position</span><span class="o">:</span><span class="s2">&quot;relative&quot;</span><span class="p">,</span><span class="nx">overflow</span><span class="o">:</span><span class="s2">&quot;hidden&quot;</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">c</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">textAlign</span><span class="o">:</span><span class="s2">&quot;left&quot;</span><span class="p">,</span><span class="nx">lineHeight</span><span class="o">:</span><span class="s2">&quot;normal&quot;</span><span class="p">,</span><span class="nx">zIndex</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">renderToClone</span><span class="o">||</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="o">=</span></div><div class='line' id='LC171'><span class="nx">b</span><span class="p">.</span><span class="nx">forExport</span><span class="o">?</span><span class="k">new</span> <span class="nx">sa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="k">new</span> <span class="nx">Sa</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">V</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">create</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">)},</span><span class="nx">getMargins</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">spacingTop</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">spacingRight</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">spacingBottom</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">spacingLeft</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">legend</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">optionsMarginTop</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">optionsMarginLeft</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">optionsMarginRight</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">optionsMarginBottom</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chartTitleOptions</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chartSubtitleOptions</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">legend</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">margin</span><span class="p">,</span><span class="mi">10</span><span class="p">),</span><span class="nx">p</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">align</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">verticalAlign</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">resetMargins</span><span class="p">();</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">axisOffset</span><span class="p">;</span><span class="k">if</span><span class="p">((</span><span class="k">this</span><span class="p">.</span><span class="nx">title</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">subtitle</span><span class="p">)</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC172'><span class="o">!</span><span class="nx">r</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">optionsMarginTop</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">title</span><span class="o">&amp;&amp;!</span><span class="nx">k</span><span class="p">.</span><span class="nx">floating</span><span class="o">&amp;&amp;!</span><span class="nx">k</span><span class="p">.</span><span class="nx">verticalAlign</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">.</span><span class="nx">y</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">subtitle</span><span class="o">&amp;&amp;!</span><span class="nx">l</span><span class="p">.</span><span class="nx">floating</span><span class="o">&amp;&amp;!</span><span class="nx">l</span><span class="p">.</span><span class="nx">verticalAlign</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">.</span><span class="nx">y</span><span class="o">||</span><span class="mi">0</span><span class="p">))</span><span class="k">this</span><span class="p">.</span><span class="nx">plotTop</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">plotTop</span><span class="p">,</span><span class="nx">l</span><span class="o">+</span><span class="nx">n</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">margin</span><span class="p">,</span><span class="mi">15</span><span class="p">)</span><span class="o">+</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">display</span><span class="o">&amp;&amp;!</span><span class="nx">m</span><span class="p">.</span><span class="nx">floating</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="o">===</span><span class="s2">&quot;right&quot;</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">r</span><span class="p">(</span><span class="nx">i</span><span class="p">))</span><span class="k">this</span><span class="p">.</span><span class="nx">marginRight</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">marginRight</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">legendWidth</span><span class="o">-</span><span class="nx">p</span><span class="o">+</span><span class="nx">q</span><span class="o">+</span><span class="nx">c</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="o">===</span><span class="s2">&quot;left&quot;</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">r</span><span class="p">(</span><span class="nx">h</span><span class="p">))</span><span class="k">this</span><span class="p">.</span><span class="nx">plotLeft</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">plotLeft</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">legendWidth</span><span class="o">+</span><span class="nx">p</span><span class="o">+</span><span class="nx">q</span><span class="o">+</span><span class="nx">a</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">u</span><span class="o">===</span><span class="s2">&quot;top&quot;</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">r</span><span class="p">(</span><span class="nx">g</span><span class="p">))</span><span class="k">this</span><span class="p">.</span><span class="nx">plotTop</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">plotTop</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">legendHeight</span><span class="o">+</span><span class="nx">y</span><span class="o">+</span><span class="nx">q</span><span class="o">+</span><span class="nx">b</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">u</span><span class="o">===</span><span class="s2">&quot;bottom&quot;</span><span class="o">&amp;&amp;!</span><span class="nx">r</span><span class="p">(</span><span class="nx">j</span><span class="p">))</span><span class="k">this</span><span class="p">.</span><span class="nx">marginBottom</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">marginBottom</span><span class="p">,</span></div><div class='line' id='LC173'><span class="nx">f</span><span class="p">.</span><span class="nx">legendHeight</span><span class="o">-</span><span class="nx">y</span><span class="o">+</span><span class="nx">q</span><span class="o">+</span><span class="nx">d</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">extraBottomMargin</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">marginBottom</span><span class="o">+=</span><span class="k">this</span><span class="p">.</span><span class="nx">extraBottomMargin</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">extraTopMargin</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">plotTop</span><span class="o">+=</span><span class="k">this</span><span class="p">.</span><span class="nx">extraTopMargin</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">hasCartesianSeries</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">axes</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">getOffset</span><span class="p">()});</span><span class="nx">r</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">plotLeft</span><span class="o">+=</span><span class="nx">e</span><span class="p">[</span><span class="mi">3</span><span class="p">]);</span><span class="nx">r</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">plotTop</span><span class="o">+=</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">]);</span><span class="nx">r</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">marginBottom</span><span class="o">+=</span><span class="nx">e</span><span class="p">[</span><span class="mi">2</span><span class="p">]);</span><span class="nx">r</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">marginRight</span><span class="o">+=</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">setChartSize</span><span class="p">()},</span><span class="nx">initReflow</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">width</span><span class="o">||</span><span class="nx">eb</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;width&quot;</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">height</span><span class="o">||</span><span class="nx">eb</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;height&quot;</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">target</span><span class="o">:</span><span class="nx">L</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">hasUserSize</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="o">===</span><span class="nx">L</span><span class="o">||</span><span class="nx">a</span><span class="o">===</span><span class="nx">C</span><span class="p">)){</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">!==</span></div><div class='line' id='LC174'><span class="nx">b</span><span class="p">.</span><span class="nx">containerWidth</span><span class="o">||</span><span class="nx">h</span><span class="o">!==</span><span class="nx">b</span><span class="p">.</span><span class="nx">containerHeight</span><span class="p">)</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">reflowTimeout</span><span class="o">=</span><span class="nx">e</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">container</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">setSize</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">hasUserSize</span><span class="o">=</span><span class="kc">null</span><span class="p">},</span><span class="mi">100</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">containerWidth</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">containerHeight</span><span class="o">=</span><span class="nx">h</span><span class="p">}}</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">renderTo</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="nx">J</span><span class="p">(</span><span class="nx">L</span><span class="p">,</span><span class="s2">&quot;resize&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">J</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;destroy&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">R</span><span class="p">(</span><span class="nx">L</span><span class="p">,</span><span class="s2">&quot;resize&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)})},</span><span class="nx">setSize</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">resetZoomButton</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">title</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">subtitle</span><span class="p">,</span><span class="nx">j</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">isResizing</span><span class="o">+=</span><span class="mi">1</span><span class="p">;</span><span class="nx">j</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">F</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;endResize&quot;</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">isResizing</span><span class="o">-=</span><span class="mi">1</span><span class="p">})};</span><span class="nx">xa</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">oldChartHeight</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">chartHeight</span><span class="p">;</span></div><div class='line' id='LC175'><span class="nx">d</span><span class="p">.</span><span class="nx">oldChartWidth</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">chartWidth</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="nx">d</span><span class="p">.</span><span class="nx">chartWidth</span><span class="o">=</span><span class="nx">e</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">u</span><span class="p">(</span><span class="nx">a</span><span class="p">)),</span><span class="nx">d</span><span class="p">.</span><span class="nx">hasUserSize</span><span class="o">=!!</span><span class="nx">e</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">(</span><span class="nx">b</span><span class="p">))</span><span class="nx">d</span><span class="p">.</span><span class="nx">chartHeight</span><span class="o">=</span><span class="nx">f</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">u</span><span class="p">(</span><span class="nx">b</span><span class="p">));</span><span class="nx">I</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">container</span><span class="p">,{</span><span class="nx">width</span><span class="o">:</span><span class="nx">e</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">f</span><span class="o">+</span><span class="s2">&quot;px&quot;</span><span class="p">});</span><span class="nx">d</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">setSize</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">plotWidth</span><span class="o">=</span><span class="nx">e</span><span class="o">-</span><span class="nx">d</span><span class="p">.</span><span class="nx">plotLeft</span><span class="o">-</span><span class="nx">d</span><span class="p">.</span><span class="nx">marginRight</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">plotHeight</span><span class="o">=</span><span class="nx">f</span><span class="o">-</span><span class="nx">d</span><span class="p">.</span><span class="nx">plotTop</span><span class="o">-</span><span class="nx">d</span><span class="p">.</span><span class="nx">marginBottom</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">maxTicks</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">o</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">axes</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">isDirty</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">setScale</span><span class="p">()});</span><span class="nx">o</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">isDirty</span><span class="o">=!</span><span class="mi">0</span><span class="p">});</span><span class="nx">d</span><span class="p">.</span><span class="nx">isDirtyLegend</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">isDirtyBox</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">getMargins</span><span class="p">();</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">spacingBox</span><span class="p">;</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">align</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">align</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">align</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">align</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span></div><div class='line' id='LC176'><span class="kc">null</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">g</span><span class="p">.</span><span class="nx">alignTo</span><span class="p">]);</span><span class="nx">d</span><span class="p">.</span><span class="nx">redraw</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">oldChartHeight</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">F</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;resize&quot;</span><span class="p">);</span><span class="nx">Pa</span><span class="o">===!</span><span class="mi">1</span><span class="o">?</span><span class="nx">j</span><span class="p">()</span><span class="o">:</span><span class="nx">setTimeout</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">Pa</span><span class="o">&amp;&amp;</span><span class="nx">Pa</span><span class="p">.</span><span class="nx">duration</span><span class="o">||</span><span class="mi">500</span><span class="p">)},</span><span class="nx">setChartSize</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">inverted</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chartWidth</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chartHeight</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">spacingTop</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">spacingRight</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">spacingBottom</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">spacingLeft</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">plotLeft</span><span class="o">=</span><span class="nx">i</span><span class="o">=</span><span class="nx">u</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">plotLeft</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">plotTop</span><span class="o">=</span><span class="nx">j</span><span class="o">=</span><span class="nx">u</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">plotTop</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">plotWidth</span><span class="o">=</span><span class="nx">k</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">u</span><span class="p">(</span><span class="nx">b</span><span class="o">-</span><span class="nx">i</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">marginRight</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">plotHeight</span><span class="o">=</span><span class="nx">l</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">u</span><span class="p">(</span><span class="nx">c</span><span class="o">-</span><span class="nx">j</span><span class="o">-</span><span class="k">this</span><span class="p">.</span><span class="nx">marginBottom</span><span class="p">));</span><span class="k">this</span><span class="p">.</span><span class="nx">plotSizeX</span><span class="o">=</span><span class="nx">a</span><span class="o">?</span><span class="nx">l</span><span class="o">:</span><span class="nx">k</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">plotSizeY</span><span class="o">=</span><span class="nx">a</span><span class="o">?</span><span class="nx">k</span><span class="o">:</span><span class="nx">l</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">plotBorderWidth</span><span class="o">=</span></div><div class='line' id='LC177'><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">plotBorderWidth</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">spacingBox</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">b</span><span class="o">-</span><span class="nx">h</span><span class="o">-</span><span class="nx">f</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">c</span><span class="o">-</span><span class="nx">e</span><span class="o">-</span><span class="nx">g</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">plotBox</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">i</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">k</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">l</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">clipBox</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">a</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">a</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">plotSizeX</span><span class="o">-</span><span class="nx">a</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">plotSizeY</span><span class="o">-</span><span class="nx">a</span><span class="p">};</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">axes</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">setAxisSize</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">setAxisTranslation</span><span class="p">()})},</span><span class="nx">resetMargins</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">spacingRight</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">spacingBottom</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">spacingLeft</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">plotTop</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">optionsMarginTop</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">spacingTop</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">marginRight</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">optionsMarginRight</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">marginBottom</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">optionsMarginBottom</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">plotLeft</span><span class="o">=</span></div><div class='line' id='LC178'><span class="nx">n</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">optionsMarginLeft</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">axisOffset</span><span class="o">=</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">]},</span><span class="nx">drawChartBox</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">renderer</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chartWidth</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chartHeight</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chartBackground</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotBackground</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotBorder</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotBGImage</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">borderWidth</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">backgroundColor</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotBackgroundColor</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotBackgroundImage</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotBorderWidth</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotLeft</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotTop</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotWidth</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotHeight</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotBox</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">clipRect</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">clipBox</span><span class="p">;</span><span class="nx">n</span><span class="o">=</span><span class="nx">i</span><span class="o">+</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">shadow</span><span class="o">?</span><span class="mi">8</span><span class="o">:</span><span class="mi">0</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="o">||</span><span class="nx">j</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">animate</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">crisp</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span></div><div class='line' id='LC179'><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">c</span><span class="o">-</span><span class="nx">n</span><span class="p">,</span><span class="nx">d</span><span class="o">-</span><span class="nx">n</span><span class="p">));</span><span class="k">else</span><span class="p">{</span><span class="nx">e</span><span class="o">=</span><span class="p">{</span><span class="nx">fill</span><span class="o">:</span><span class="nx">j</span><span class="o">||</span><span class="nx">Q</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">stroke</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">borderColor</span><span class="p">,</span><span class="nx">e</span><span class="p">[</span><span class="s2">&quot;stroke-width&quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">i</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">chartBackground</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">n</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">n</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">c</span><span class="o">-</span><span class="nx">n</span><span class="p">,</span><span class="nx">d</span><span class="o">-</span><span class="nx">n</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">borderRadius</span><span class="p">,</span><span class="nx">i</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="nx">e</span><span class="p">).</span><span class="nx">add</span><span class="p">().</span><span class="nx">shadow</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">shadow</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="nx">f</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">animate</span><span class="p">(</span><span class="nx">u</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">plotBackground</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="mi">0</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">fill</span><span class="o">:</span><span class="nx">k</span><span class="p">}).</span><span class="nx">add</span><span class="p">().</span><span class="nx">shadow</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotShadow</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span><span class="nx">h</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">animate</span><span class="p">(</span><span class="nx">u</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">plotBGImage</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">image</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">).</span><span class="nx">add</span><span class="p">();</span><span class="nx">v</span><span class="o">?</span><span class="nx">v</span><span class="p">.</span><span class="nx">animate</span><span class="p">({</span><span class="nx">width</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nx">height</span><span class="p">})</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">clipRect</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">clipRect</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span><span class="nx">g</span><span class="o">?</span><span class="nx">g</span><span class="p">.</span><span class="nx">animate</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">crisp</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">p</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">))</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">plotBorder</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">m</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">stroke</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotBorderColor</span><span class="p">,</span></div><div class='line' id='LC180'><span class="s2">&quot;stroke-width&quot;</span><span class="o">:</span><span class="nx">m</span><span class="p">,</span><span class="nx">zIndex</span><span class="o">:</span><span class="mi">1</span><span class="p">}).</span><span class="nx">add</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">isDirtyBox</span><span class="o">=!</span><span class="mi">1</span><span class="p">},</span><span class="nx">propFromSeries</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="nx">o</span><span class="p">([</span><span class="s2">&quot;inverted&quot;</span><span class="p">,</span><span class="s2">&quot;angular&quot;</span><span class="p">,</span><span class="s2">&quot;polar&quot;</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">g</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">$</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">defaultSeriesType</span><span class="p">];</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">||</span><span class="nx">b</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">||</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="nx">g</span><span class="p">];</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="o">!</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">--</span><span class="p">;)(</span><span class="nx">c</span><span class="o">=</span><span class="nx">$</span><span class="p">[</span><span class="nx">d</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">type</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="o">=!</span><span class="mi">0</span><span class="p">);</span><span class="nx">a</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">})},</span><span class="nx">render</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axes</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">renderer</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">labels</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">credits</span><span class="p">,</span><span class="nx">f</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">setTitle</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">legend</span><span class="o">=</span><span class="k">new</span> <span class="nx">rb</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">o</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">setScale</span><span class="p">()});</span><span class="nx">a</span><span class="p">.</span><span class="nx">getMargins</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">maxTicks</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span></div><div class='line' id='LC181'><span class="nx">o</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">setTickPositions</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">setMaxTicks</span><span class="p">()});</span><span class="nx">a</span><span class="p">.</span><span class="nx">adjustTickAmounts</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">getMargins</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">drawChartBox</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasCartesianSeries</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">render</span><span class="p">()});</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">seriesGroup</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">seriesGroup</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;series-group&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">zIndex</span><span class="o">:</span><span class="mi">3</span><span class="p">}).</span><span class="nx">add</span><span class="p">();</span><span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">translate</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">setTooltipPoints</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">render</span><span class="p">()});</span><span class="nx">e</span><span class="p">.</span><span class="nx">items</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">items</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">x</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">style</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">z</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">left</span><span class="p">)</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotLeft</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">z</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">top</span><span class="p">)</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotTop</span><span class="o">+</span><span class="mi">12</span><span class="p">;</span><span class="k">delete</span> <span class="nx">d</span><span class="p">.</span><span class="nx">left</span><span class="p">;</span><span class="k">delete</span> <span class="nx">d</span><span class="p">.</span><span class="nx">top</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">text</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">html</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">j</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">zIndex</span><span class="o">:</span><span class="mi">2</span><span class="p">}).</span><span class="nx">css</span><span class="p">(</span><span class="nx">d</span><span class="p">).</span><span class="nx">add</span><span class="p">()});</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">enabled</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC182'><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">credits</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">href</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">credits</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">text</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">text</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;click&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="nx">location</span><span class="p">.</span><span class="nx">href</span><span class="o">=</span><span class="nx">f</span><span class="p">}).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">align</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">position</span><span class="p">.</span><span class="nx">align</span><span class="p">,</span><span class="nx">zIndex</span><span class="o">:</span><span class="mi">8</span><span class="p">}).</span><span class="nx">css</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">style</span><span class="p">).</span><span class="nx">add</span><span class="p">().</span><span class="nx">align</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">position</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasRendered</span><span class="o">=!</span><span class="mi">0</span><span class="p">},</span><span class="nx">destroy</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">axes</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">container</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">;</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;destroy&quot;</span><span class="p">);</span><span class="nx">Ha</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">index</span><span class="p">]</span><span class="o">=</span><span class="nx">A</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">renderTo</span><span class="p">.</span><span class="nx">removeAttribute</span><span class="p">(</span><span class="s2">&quot;data-highcharts-chart&quot;</span><span class="p">);</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">--</span><span class="p">;)</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">destroy</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">--</span><span class="p">;)</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">].</span><span class="nx">destroy</span><span class="p">();</span><span class="nx">o</span><span class="p">(</span><span class="s2">&quot;title,subtitle,chartBackground,plotBackground,plotBGImage,plotBorder,seriesGroup,clipRect,credits,tracker,scroller,rangeSelector,legend,resetZoomButton,tooltip,renderer&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">),</span></div><div class='line' id='LC183'><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">destroy</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">destroy</span><span class="p">())});</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">R</span><span class="p">(</span><span class="nx">d</span><span class="p">),</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">Na</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">delete</span> <span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">]},</span><span class="nx">isReadyToRender</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">return</span><span class="o">!</span><span class="nx">ca</span><span class="o">&amp;&amp;</span><span class="nx">L</span><span class="o">==</span><span class="nx">L</span><span class="p">.</span><span class="nx">top</span><span class="o">&amp;&amp;</span><span class="nx">C</span><span class="p">.</span><span class="nx">readyState</span><span class="o">!==</span><span class="s2">&quot;complete&quot;</span><span class="o">||</span><span class="nx">V</span><span class="o">&amp;&amp;!</span><span class="nx">L</span><span class="p">.</span><span class="nx">canvg</span><span class="o">?</span><span class="p">(</span><span class="nx">V</span><span class="o">?</span><span class="nx">Rb</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstRender</span><span class="p">()},</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">global</span><span class="p">.</span><span class="nx">canvasToolsURL</span><span class="p">)</span><span class="o">:</span><span class="nx">C</span><span class="p">.</span><span class="nx">attachEvent</span><span class="p">(</span><span class="s2">&quot;onreadystatechange&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">C</span><span class="p">.</span><span class="nx">detachEvent</span><span class="p">(</span><span class="s2">&quot;onreadystatechange&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstRender</span><span class="p">);</span><span class="nx">C</span><span class="p">.</span><span class="nx">readyState</span><span class="o">===</span><span class="s2">&quot;complete&quot;</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstRender</span><span class="p">()}),</span><span class="o">!</span><span class="mi">1</span><span class="p">)</span><span class="o">:!</span><span class="mi">0</span><span class="p">},</span><span class="nx">firstRender</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">callback</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">isReadyToRender</span><span class="p">()){</span><span class="nx">a</span><span class="p">.</span><span class="nx">getContainer</span><span class="p">();</span></div><div class='line' id='LC184'><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;init&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">Highcharts</span><span class="p">.</span><span class="nx">RangeSelector</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">rangeSelector</span><span class="p">.</span><span class="nx">enabled</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">rangeSelector</span><span class="o">=</span><span class="k">new</span> <span class="nx">Highcharts</span><span class="p">.</span><span class="nx">RangeSelector</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">resetMargins</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">setChartSize</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">propFromSeries</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">getAxes</span><span class="p">();</span><span class="nx">o</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">series</span><span class="o">||</span><span class="p">[],</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">initSeries</span><span class="p">(</span><span class="nx">b</span><span class="p">)});</span><span class="k">if</span><span class="p">(</span><span class="nx">Highcharts</span><span class="p">.</span><span class="nx">Scroller</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">navigator</span><span class="p">.</span><span class="nx">enabled</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">scrollbar</span><span class="p">.</span><span class="nx">enabled</span><span class="p">))</span><span class="nx">a</span><span class="p">.</span><span class="nx">scroller</span><span class="o">=</span><span class="k">new</span> <span class="nx">Highcharts</span><span class="p">.</span><span class="nx">Scroller</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">tracker</span><span class="o">=</span><span class="k">new</span> <span class="nx">qb</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">render</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">draw</span><span class="p">();</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,[</span><span class="nx">a</span><span class="p">]);</span><span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">callbacks</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,[</span><span class="nx">a</span><span class="p">])});</span><span class="nx">a</span><span class="p">.</span><span class="nx">cloneRenderTo</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;load&quot;</span><span class="p">)}}};</span><span class="nx">sb</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">callbacks</span><span class="o">=</span><span class="p">[];</span></div><div class='line' id='LC185'><span class="kd">var</span> <span class="nx">Ua</span><span class="o">=</span><span class="kd">function</span><span class="p">(){};</span><span class="nx">Ua</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">init</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">counters</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">series</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">applyOptions</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">pointAttr</span><span class="o">=</span><span class="p">{};</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">colorByPoint</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">colors</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">color</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">color</span><span class="o">||</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">color</span><span class="o">++</span><span class="p">],</span><span class="nx">d</span><span class="p">.</span><span class="nx">wrapColor</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">pointCount</span><span class="o">++</span><span class="p">;</span><span class="k">return</span> <span class="k">this</span><span class="p">},</span><span class="nx">applyOptions</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">config</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">===</span><span class="s2">&quot;number&quot;</span><span class="o">||</span><span class="nx">a</span><span class="o">===</span><span class="kc">null</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;number&quot;</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">===</span><span class="s2">&quot;object&quot;</span><span class="o">&amp;&amp;</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">!==</span><span class="s2">&quot;number&quot;</span><span class="p">){</span><span class="nx">x</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="o">=</span></div><div class='line' id='LC186'><span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataLabels</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">_hasPointLabels</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">marker</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">_hasPointMarkers</span><span class="o">=!</span><span class="mi">0</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;string&quot;</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">===</span><span class="nx">A</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">x</span><span class="o">=</span><span class="nx">b</span><span class="o">===</span><span class="nx">A</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">autoIncrement</span><span class="p">()</span><span class="o">:</span><span class="nx">b</span><span class="p">},</span><span class="nx">destroy</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">series</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">hoverPoints</span><span class="p">,</span><span class="nx">c</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">pointCount</span><span class="o">--</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">setState</span><span class="p">(),</span><span class="nx">ta</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">),</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">))</span><span class="nx">a</span><span class="p">.</span><span class="nx">hoverPoints</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">hoverPoint</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">onMouseOut</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">graphic</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">dataLabel</span><span class="p">)</span><span class="nx">R</span><span class="p">(</span><span class="k">this</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">destroyElements</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">legendItem</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">legend</span><span class="p">.</span><span class="nx">destroyItem</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="k">this</span><span class="p">)</span><span class="k">this</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="p">},</span><span class="nx">destroyElements</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span></div><div class='line' id='LC187'><span class="s2">&quot;graphic,tracker,dataLabel,dataLabelUpper,group,connector,shadowGroup&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">),</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="mi">6</span><span class="p">;</span><span class="nx">c</span><span class="o">--</span><span class="p">;)</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="p">],</span><span class="k">this</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">destroy</span><span class="p">())},</span><span class="nx">getLabelConfig</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">category</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">key</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">category</span><span class="p">,</span><span class="nx">series</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="nx">point</span><span class="o">:</span><span class="k">this</span><span class="p">,</span><span class="nx">percentage</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">percentage</span><span class="p">,</span><span class="nx">total</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">total</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">stackTotal</span><span class="p">}},</span><span class="nx">select</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">series</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">selected</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">firePointEvent</span><span class="p">(</span><span class="nx">a</span><span class="o">?</span><span class="s2">&quot;select&quot;</span><span class="o">:</span><span class="s2">&quot;unselect&quot;</span><span class="p">,{</span><span class="nx">accumulate</span><span class="o">:</span><span class="nx">b</span><span class="p">},</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">selected</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">setState</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;select&quot;</span><span class="p">);</span><span class="nx">b</span><span class="o">||</span><span class="nx">o</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">getSelectedPoints</span><span class="p">(),</span></div><div class='line' id='LC188'><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">selected</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">!==</span><span class="nx">c</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">selected</span><span class="o">=!</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">setState</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">a</span><span class="p">.</span><span class="nx">firePointEvent</span><span class="p">(</span><span class="s2">&quot;unselect&quot;</span><span class="p">)})})},</span><span class="nx">onMouseOver</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">tooltip</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">hoverPoint</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="o">!==</span><span class="k">this</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">onMouseOut</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">firePointEvent</span><span class="p">(</span><span class="s2">&quot;mouseOver&quot;</span><span class="p">);</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">shared</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">noSharedTooltip</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">refresh</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">setState</span><span class="p">(</span><span class="s2">&quot;hover&quot;</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">hoverPoint</span><span class="o">=</span><span class="k">this</span><span class="p">},</span><span class="nx">onMouseOut</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">series</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">hoverPoints</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="o">||</span><span class="nx">Ub</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">===-</span><span class="mi">1</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">firePointEvent</span><span class="p">(</span><span class="s2">&quot;mouseOut&quot;</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">setState</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">hoverPoint</span><span class="o">=</span><span class="kc">null</span><span class="p">},</span><span class="nx">tooltipFormatter</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span></div><div class='line' id='LC189'><span class="k">this</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">tooltipOptions</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">match</span><span class="p">(</span><span class="sr">/\{(series|point)\.[a-zA-Z]+\}/g</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="sr">/[{\.}]/</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="p">{</span><span class="nx">y</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">open</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">high</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">low</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">close</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">percentage</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">total</span><span class="o">:</span><span class="mi">1</span><span class="p">};</span><span class="nx">c</span><span class="p">.</span><span class="nx">valuePrefix</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">valuePrefix</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">yPrefix</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">valueDecimals</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">valueDecimals</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">yDecimals</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">valueSuffix</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">valueSuffix</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">ySuffix</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span> <span class="k">in</span> <span class="nx">d</span><span class="p">)</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">ja</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">g</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="p">{</span><span class="nx">point</span><span class="o">:</span><span class="k">this</span><span class="p">,</span><span class="nx">series</span><span class="o">:</span><span class="nx">b</span><span class="p">}[</span><span class="nx">h</span><span class="p">[</span><span class="mi">1</span><span class="p">]],</span><span class="nx">h</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">f</span><span class="o">===</span><span class="k">this</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">?</span><span class="nx">h</span><span class="o">:</span><span class="s2">&quot;value&quot;</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">+</span><span class="s2">&quot;Prefix&quot;</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">Ja</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">h</span><span class="p">],</span><span class="nx">n</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">+</span><span class="s2">&quot;Decimals&quot;</span><span class="p">],</span><span class="o">-</span><span class="mi">1</span><span class="p">))</span><span class="o">+</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="o">+</span><span class="s2">&quot;Suffix&quot;</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">))</span><span class="o">:</span><span class="nx">f</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">h</span><span class="p">],</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span></div><div class='line' id='LC190'><span class="nx">f</span><span class="p">));</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">update</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">graphic</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">firePointEvent</span><span class="p">(</span><span class="s2">&quot;update&quot;</span><span class="p">,{</span><span class="nx">options</span><span class="o">:</span><span class="nx">a</span><span class="p">},</span><span class="kd">function</span><span class="p">(){</span><span class="nx">d</span><span class="p">.</span><span class="nx">applyOptions</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">Y</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">getAttribs</span><span class="p">(),</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">pointAttr</span><span class="p">[</span><span class="nx">e</span><span class="p">.</span><span class="nx">state</span><span class="p">]));</span><span class="k">for</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">i</span><span class="p">;</span><span class="nx">g</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">===</span><span class="nx">d</span><span class="p">){</span><span class="nx">e</span><span class="p">.</span><span class="nx">xData</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">x</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">yData</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">toYData</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">toYData</span><span class="p">()</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">y</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">data</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="nx">e</span><span class="p">.</span><span class="nx">isDirty</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">isDirtyData</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">.</span><span class="nx">redraw</span><span class="p">(</span><span class="nx">c</span><span class="p">)})},</span><span class="nx">remove</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">xa</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">e</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">firePointEvent</span><span class="p">(</span><span class="s2">&quot;remove&quot;</span><span class="p">,</span></div><div class='line' id='LC191'><span class="kc">null</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">===</span><span class="nx">c</span><span class="p">){</span><span class="nx">g</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">data</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">xData</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">yData</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">break</span><span class="p">}</span><span class="nx">c</span><span class="p">.</span><span class="nx">destroy</span><span class="p">();</span><span class="nx">d</span><span class="p">.</span><span class="nx">isDirty</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="p">.</span><span class="nx">isDirtyData</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">redraw</span><span class="p">()})},</span><span class="nx">firePointEvent</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">series</span><span class="p">.</span><span class="nx">options</span><span class="p">;(</span><span class="nx">e</span><span class="p">.</span><span class="nx">point</span><span class="p">.</span><span class="nx">events</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">options</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">events</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">events</span><span class="p">[</span><span class="nx">a</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">importEvents</span><span class="p">();</span><span class="nx">a</span><span class="o">===</span><span class="s2">&quot;click&quot;</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">allowPointSelect</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">d</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="kc">null</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">ctrlKey</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">metaKey</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">shiftKey</span><span class="p">)});</span><span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">importEvents</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="k">this</span><span class="p">.</span><span class="nx">hasImportedEvents</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span></div><div class='line' id='LC192'><span class="nx">B</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">series</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">point</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">).</span><span class="nx">events</span><span class="p">,</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">events</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">J</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]);</span><span class="k">this</span><span class="p">.</span><span class="nx">hasImportedEvents</span><span class="o">=!</span><span class="mi">0</span><span class="p">}},</span><span class="nx">setState</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotX</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotY</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">states</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">X</span><span class="p">[</span><span class="nx">d</span><span class="p">.</span><span class="nx">type</span><span class="p">].</span><span class="nx">marker</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">marker</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="o">&amp;&amp;!</span><span class="nx">f</span><span class="p">.</span><span class="nx">enabled</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">states</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">i</span><span class="o">=</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">enabled</span><span class="o">===!</span><span class="mi">1</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">stateMarkerGraphic</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">pointAttr</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="p">(</span><span class="nx">a</span><span class="o">===</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">selected</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="o">!==</span><span class="s2">&quot;select&quot;</span><span class="o">||</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">enabled</span><span class="o">===!</span><span class="mi">1</span><span class="o">||</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">||</span><span class="nx">g</span><span class="o">&amp;&amp;!</span><span class="nx">h</span><span class="p">.</span><span class="nx">enabled</span><span class="p">))){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">graphic</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">graphic</span><span class="p">.</span><span class="nx">symbolName</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">r</span><span class="p">,</span></div><div class='line' id='LC193'><span class="k">this</span><span class="p">.</span><span class="nx">graphic</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">B</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">e</span><span class="o">?</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">b</span><span class="o">-</span><span class="nx">e</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">c</span><span class="o">-</span><span class="nx">e</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="mi">2</span><span class="o">*</span><span class="nx">e</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="mi">2</span><span class="o">*</span><span class="nx">e</span><span class="p">}</span><span class="o">:</span><span class="p">{}));</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">radius</span><span class="p">,</span><span class="nx">j</span><span class="o">?</span><span class="nx">j</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="nx">b</span><span class="o">-</span><span class="nx">e</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">c</span><span class="o">-</span><span class="nx">e</span><span class="p">})</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">stateMarkerGraphic</span><span class="o">=</span><span class="nx">j</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">symbol</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">symbol</span><span class="p">,</span><span class="nx">b</span><span class="o">-</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="o">-</span><span class="nx">e</span><span class="p">,</span><span class="mi">2</span><span class="o">*</span><span class="nx">e</span><span class="p">,</span><span class="mi">2</span><span class="o">*</span><span class="nx">e</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="nx">l</span><span class="p">[</span><span class="nx">a</span><span class="p">]).</span><span class="nx">add</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">markerGroup</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="nx">j</span><span class="p">[</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">.</span><span class="nx">isInsidePlot</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;show&quot;</span><span class="o">:</span><span class="s2">&quot;hide&quot;</span><span class="p">]()}</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="o">=</span><span class="nx">a</span><span class="p">}}};</span><span class="kd">var</span> <span class="nx">P</span><span class="o">=</span><span class="kd">function</span><span class="p">(){};</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="p">{</span><span class="nx">isCartesian</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;line&quot;</span><span class="p">,</span><span class="nx">pointClass</span><span class="o">:</span><span class="nx">Ua</span><span class="p">,</span><span class="nx">sorted</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">requireSorting</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">pointAttrToOptions</span><span class="o">:</span><span class="p">{</span><span class="nx">stroke</span><span class="o">:</span><span class="s2">&quot;lineColor&quot;</span><span class="p">,</span><span class="s2">&quot;stroke-width&quot;</span><span class="o">:</span><span class="s2">&quot;lineWidth&quot;</span><span class="p">,</span><span class="nx">fill</span><span class="o">:</span><span class="s2">&quot;fillColor&quot;</span><span class="p">,</span><span class="nx">r</span><span class="o">:</span><span class="s2">&quot;radius&quot;</span><span class="p">},</span><span class="nx">init</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="o">=</span></div><div class='line' id='LC194'><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="o">=</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">setOptions</span><span class="p">(</span><span class="nx">b</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">bindAxes</span><span class="p">();</span><span class="nx">x</span><span class="p">(</span><span class="k">this</span><span class="p">,{</span><span class="nx">name</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="nx">state</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">pointAttr</span><span class="o">:</span><span class="p">{},</span><span class="nx">visible</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">visible</span><span class="o">!==!</span><span class="mi">1</span><span class="p">,</span><span class="nx">selected</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">selected</span><span class="o">===!</span><span class="mi">0</span><span class="p">});</span><span class="k">if</span><span class="p">(</span><span class="nx">V</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">animation</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">events</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">d</span><span class="p">)</span><span class="nx">J</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">click</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">point</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">point</span><span class="p">.</span><span class="nx">events</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">point</span><span class="p">.</span><span class="nx">events</span><span class="p">.</span><span class="nx">click</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">allowPointSelect</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">runTrackerClick</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">getColor</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">getSymbol</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">setData</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">isCartesian</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasCartesianSeries</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">series</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">Ib</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">index</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">-</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">index</span><span class="o">||</span><span class="mi">0</span><span class="p">)});</span><span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span></div><div class='line' id='LC195'><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">index</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="o">||</span><span class="s2">&quot;Series &quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="mi">1</span><span class="p">)})},</span><span class="nx">bindAxes</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">isCartesian</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">([</span><span class="s2">&quot;xAxis&quot;</span><span class="p">,</span><span class="s2">&quot;yAxis&quot;</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">o</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">options</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">===</span><span class="nx">d</span><span class="p">.</span><span class="nx">index</span><span class="o">||</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">===</span><span class="nx">A</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">index</span><span class="o">===</span><span class="mi">0</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">series</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">isDirty</span><span class="o">=!</span><span class="mi">0</span><span class="p">})})},</span><span class="nx">autoIncrement</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">xIncrement</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">pointStart</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">pointInterval</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">pointInterval</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">pointInterval</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">xIncrement</span><span class="o">=</span><span class="nx">b</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">pointInterval</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">getSegments</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=-</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="p">[],</span></div><div class='line' id='LC196'><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">points</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">connectNulls</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="nx">c</span><span class="o">--</span><span class="p">;)</span><span class="nx">d</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">y</span><span class="o">===</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="p">[</span><span class="nx">d</span><span class="p">])}</span><span class="k">else</span> <span class="nx">o</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">){</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">===</span><span class="kc">null</span><span class="o">?</span><span class="p">(</span><span class="nx">g</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">+</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">g</span><span class="p">)),</span><span class="nx">a</span><span class="o">=</span><span class="nx">g</span><span class="p">)</span><span class="o">:</span><span class="nx">g</span><span class="o">===</span><span class="nx">e</span><span class="o">-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="nx">g</span><span class="o">+</span><span class="mi">1</span><span class="p">))});</span><span class="k">this</span><span class="p">.</span><span class="nx">segments</span><span class="o">=</span><span class="nx">b</span><span class="p">},</span><span class="nx">setOptions</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">plotOptions</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="k">this</span><span class="p">.</span><span class="nx">type</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">c</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">tooltipOptions</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">tooltip</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">tooltip</span><span class="p">);</span><span class="nx">d</span><span class="p">.</span><span class="nx">marker</span><span class="o">===</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="k">delete</span> <span class="nx">c</span><span class="p">.</span><span class="nx">marker</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">getColor</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span></div><div class='line' id='LC197'><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">colors</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">counters</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">color</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">color</span><span class="o">||!</span><span class="nx">a</span><span class="p">.</span><span class="nx">colorByPoint</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">color</span><span class="o">++</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;gray&quot;</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">wrapColor</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">)},</span><span class="nx">getSymbol</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">marker</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">symbols</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">counters</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">symbol</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">symbol</span><span class="o">||</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">symbol</span><span class="o">++</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="sr">/^url/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">symbol</span><span class="p">))</span><span class="nx">a</span><span class="p">.</span><span class="nx">radius</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">wrapSymbol</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">)},</span><span class="nx">drawLegendSymbol</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">marker</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">symbolWidth</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">renderer</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">legendGroup</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">baseline</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineWidth</span><span class="p">){</span><span class="nx">g</span><span class="o">=</span><span class="p">{</span><span class="s2">&quot;stroke-width&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineWidth</span><span class="p">};</span></div><div class='line' id='LC198'><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">dashStyle</span><span class="p">)</span><span class="nx">g</span><span class="p">.</span><span class="nx">dashstyle</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">dashStyle</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">legendLine</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">path</span><span class="p">([</span><span class="s2">&quot;M&quot;</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="o">-</span><span class="mi">4</span><span class="p">,</span><span class="s2">&quot;L&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="o">-</span><span class="mi">4</span><span class="p">]).</span><span class="nx">attr</span><span class="p">(</span><span class="nx">g</span><span class="p">).</span><span class="nx">add</span><span class="p">(</span><span class="nx">f</span><span class="p">)}</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">enabled</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">radius</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">legendSymbol</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">symbol</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">symbol</span><span class="p">,</span><span class="nx">d</span><span class="o">/</span><span class="mi">2</span><span class="o">-</span><span class="nx">b</span><span class="p">,</span><span class="nx">a</span><span class="o">-</span><span class="mi">4</span><span class="o">-</span><span class="nx">b</span><span class="p">,</span><span class="mi">2</span><span class="o">*</span><span class="nx">b</span><span class="p">,</span><span class="mi">2</span><span class="o">*</span><span class="nx">b</span><span class="p">).</span><span class="nx">add</span><span class="p">(</span><span class="nx">f</span><span class="p">)},</span><span class="nx">addPoint</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">graph</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">area</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">xData</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">yData</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">shift</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="nx">q</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">pointClass</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="nx">xa</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">i</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">)</span><span class="nx">g</span><span class="p">.</span><span class="nx">shift</span><span class="o">=</span><span class="nx">l</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="nx">h</span><span class="p">.</span><span class="nx">shift</span><span class="o">=</span><span class="nx">l</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">h</span><span class="p">.</span><span class="nx">isArea</span><span class="o">=!</span><span class="mi">0</span><span class="p">}</span><span class="nx">b</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="p">{</span><span class="nx">series</span><span class="o">:</span><span class="k">this</span><span class="p">};</span><span class="nx">q</span><span class="p">.</span><span class="nx">applyOptions</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">d</span><span class="p">,[</span><span class="nx">a</span><span class="p">]);</span><span class="nx">j</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">x</span><span class="p">);</span><span class="nx">k</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">q</span><span class="p">.</span><span class="nx">toYData</span><span class="o">?</span></div><div class='line' id='LC199'><span class="nx">q</span><span class="p">.</span><span class="nx">toYData</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">y</span><span class="p">);</span><span class="nx">m</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">legendType</span><span class="o">===</span><span class="s2">&quot;point&quot;</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">generatePoints</span><span class="p">();</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">remove</span><span class="o">?</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">remove</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">shift</span><span class="p">(),</span><span class="nx">j</span><span class="p">.</span><span class="nx">shift</span><span class="p">(),</span><span class="nx">k</span><span class="p">.</span><span class="nx">shift</span><span class="p">(),</span><span class="nx">m</span><span class="p">.</span><span class="nx">shift</span><span class="p">()));</span><span class="k">this</span><span class="p">.</span><span class="nx">getAttribs</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">isDirtyData</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">isDirty</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">redraw</span><span class="p">()},</span><span class="nx">setData</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">points</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">initialColor</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">xAxis</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">pointClass</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">xIncrement</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">pointRange</span><span class="o">=</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">categories</span><span class="o">?</span><span class="mi">1</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">pointRange</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="nx">f</span><span class="p">.</span><span class="nx">counters</span><span class="p">.</span><span class="nx">color</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="p">[],</span><span class="nx">k</span><span class="o">=</span><span class="p">[],</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">:</span><span class="p">[],</span><span class="nx">m</span><span class="o">=</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">pointArrayMap</span><span class="p">)</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC200'><span class="nx">i</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="o">&gt;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">turboThreshold</span><span class="o">||</span><span class="mi">1</span><span class="nx">E3</span><span class="p">)){</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">g</span><span class="o">===</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;)</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">i</span><span class="o">++</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">Da</span><span class="p">(</span><span class="nx">g</span><span class="p">)){</span><span class="nx">j</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">pointStart</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="nx">d</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">pointInterval</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="nx">e</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">j</span><span class="o">+=</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">xIncrement</span><span class="o">=</span><span class="nx">j</span><span class="p">}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">Ia</span><span class="p">(</span><span class="nx">g</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">e</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">k</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="nx">m</span><span class="o">+</span><span class="mi">1</span><span class="p">);</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">e</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">k</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">]}</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">l</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="p">{</span><span class="nx">series</span><span class="o">:</span><span class="k">this</span><span class="p">},</span><span class="nx">j</span><span class="p">.</span><span class="nx">applyOptions</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">d</span><span class="p">,[</span><span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">]]),</span><span class="nx">e</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">k</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">toYData</span><span class="o">?</span><span class="nx">j</span><span class="p">.</span><span class="nx">toYData</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">y</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">requireSorting</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">Oa</span><span class="p">(</span><span class="mi">15</span><span class="p">);</span><span class="nx">ja</span><span class="p">(</span><span class="nx">k</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="nx">Oa</span><span class="p">(</span><span class="mi">14</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="p">[];</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span></div><div class='line' id='LC201'><span class="nx">a</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">xData</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">yData</span><span class="o">=</span><span class="nx">k</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="o">||</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">--</span><span class="p">;)</span><span class="nx">c</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">destroy</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">destroy</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="nx">h</span><span class="p">.</span><span class="nx">minRange</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">userMinRange</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">isDirty</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">isDirtyData</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">isDirtyBox</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">n</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">redraw</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">)},</span><span class="nx">remove</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="p">.</span><span class="nx">isRemoving</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">isRemoving</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">F</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;remove&quot;</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">c</span><span class="p">.</span><span class="nx">destroy</span><span class="p">();</span><span class="nx">d</span><span class="p">.</span><span class="nx">isDirtyLegend</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">isDirtyBox</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">redraw</span><span class="p">(</span><span class="nx">b</span><span class="p">)});</span><span class="nx">c</span><span class="p">.</span><span class="nx">isRemoving</span><span class="o">=!</span><span class="mi">1</span><span class="p">},</span><span class="nx">processData</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">xData</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">yData</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">xAxis</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">cropThreshold</span><span class="p">,</span></div><div class='line' id='LC202'><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">isCartesian</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">isDirty</span><span class="o">&amp;&amp;!</span><span class="nx">i</span><span class="p">.</span><span class="nx">isDirty</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">yAxis</span><span class="p">.</span><span class="nx">isDirty</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">)</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">sorted</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">k</span><span class="o">||</span><span class="nx">d</span><span class="o">&gt;</span><span class="nx">k</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">forceCrop</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">getExtremes</span><span class="p">(),</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">min</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">max</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">&lt;</span><span class="nx">i</span><span class="o">||</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&gt;</span><span class="nx">k</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="o">=</span><span class="p">[];</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">&lt;</span><span class="nx">i</span><span class="o">||</span><span class="nx">b</span><span class="p">[</span><span class="nx">d</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">&gt;</span><span class="nx">k</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">&gt;=</span><span class="nx">i</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="o">-</span><span class="mi">1</span><span class="p">);</span><span class="k">break</span><span class="p">}</span><span class="k">for</span><span class="p">(;</span><span class="nx">a</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">a</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">&gt;</span><span class="nx">k</span><span class="p">){</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="k">break</span><span class="p">}</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">);</span><span class="nx">g</span><span class="o">=!</span><span class="mi">0</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">a</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">;</span><span class="nx">a</span><span class="o">--</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">-</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="nx">d</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">h</span><span class="o">===</span><span class="nx">A</span><span class="o">||</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">))</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">cropped</span><span class="o">=</span><span class="nx">g</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">cropStart</span><span class="o">=</span><span class="nx">e</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">processedXData</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">processedYData</span><span class="o">=</span><span class="nx">c</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">pointRange</span><span class="o">===</span><span class="kc">null</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">pointRange</span><span class="o">=</span></div><div class='line' id='LC203'><span class="nx">h</span><span class="o">||</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">closestPointRange</span><span class="o">=</span><span class="nx">h</span><span class="p">},</span><span class="nx">generatePoints</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">processedXData</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">processedYData</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">pointClass</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">cropStart</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">hasGroupedData</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="p">[],</span><span class="nx">m</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="o">&amp;&amp;!</span><span class="nx">j</span><span class="p">)</span><span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">m</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">m</span><span class="o">++</span><span class="p">)</span><span class="nx">i</span><span class="o">=</span><span class="nx">h</span><span class="o">+</span><span class="nx">m</span><span class="p">,</span><span class="nx">j</span><span class="o">?</span><span class="nx">l</span><span class="p">[</span><span class="nx">m</span><span class="p">]</span><span class="o">=</span><span class="p">(</span><span class="k">new</span> <span class="nx">f</span><span class="p">).</span><span class="nx">init</span><span class="p">(</span><span class="k">this</span><span class="p">,[</span><span class="nx">d</span><span class="p">[</span><span class="nx">m</span><span class="p">]].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">la</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">m</span><span class="p">])))</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">?</span><span class="nx">k</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">:</span><span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">!==</span><span class="nx">A</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span><span class="o">=</span><span class="nx">k</span><span class="o">=</span><span class="p">(</span><span class="k">new</span> <span class="nx">f</span><span class="p">).</span><span class="nx">init</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">d</span><span class="p">[</span><span class="nx">m</span><span class="p">])),</span><span class="nx">l</span><span class="p">[</span><span class="nx">m</span><span class="p">]</span><span class="o">=</span><span class="nx">k</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="o">!==</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">)</span><span class="o">||</span><span class="nx">j</span><span class="p">))</span><span class="k">for</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">m</span><span class="o">&lt;</span><span class="nx">c</span><span class="p">;</span><span class="nx">m</span><span class="o">++</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="o">===</span><span class="nx">h</span><span class="o">&amp;&amp;!</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">m</span><span class="o">+=</span><span class="nx">g</span><span class="p">),</span><span class="nx">b</span><span class="p">[</span><span class="nx">m</span><span class="p">])</span><span class="nx">b</span><span class="p">[</span><span class="nx">m</span><span class="p">].</span><span class="nx">destroyElements</span><span class="p">(),</span></div><div class='line' id='LC204'><span class="nx">b</span><span class="p">[</span><span class="nx">m</span><span class="p">].</span><span class="nx">plotX</span><span class="o">=</span><span class="nx">A</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">b</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">points</span><span class="o">=</span><span class="nx">l</span><span class="p">},</span><span class="nx">translate</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">processedXData</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">processData</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">generatePoints</span><span class="p">();</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">stacking</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">xAxis</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">categories</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">yAxis</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">points</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">i</span><span class="o">=!!</span><span class="k">this</span><span class="p">.</span><span class="nx">modifyValue</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">pointPlacement</span><span class="o">===</span><span class="s2">&quot;between&quot;</span><span class="p">;</span><span class="nx">l</span><span class="o">--</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">[</span><span class="nx">l</span><span class="p">].</span><span class="nx">visible</span><span class="p">){</span><span class="nx">k</span><span class="p">[</span><span class="nx">l</span><span class="p">]</span><span class="o">===</span><span class="k">this</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="o">=!</span><span class="mi">0</span><span class="p">);</span><span class="k">break</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">l</span><span class="o">&lt;</span><span class="nx">h</span><span class="p">;</span><span class="nx">l</span><span class="o">++</span><span class="p">){</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">g</span><span class="p">[</span><span class="nx">l</span><span class="p">],</span><span class="nx">q</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">low</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">stacks</span><span class="p">[(</span><span class="nx">p</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">.</span><span class="nx">threshold</span><span class="o">?</span><span class="s2">&quot;-&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="k">this</span><span class="p">.</span><span class="nx">stackKey</span><span class="p">];</span><span class="nx">k</span><span class="p">.</span><span class="nx">plotX</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="nx">q</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="nx">m</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">visible</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC205'><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="nx">t</span><span class="p">[</span><span class="nx">q</span><span class="p">])</span><span class="nx">o</span><span class="o">=</span><span class="nx">t</span><span class="p">[</span><span class="nx">q</span><span class="p">],</span><span class="nx">q</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">total</span><span class="p">,</span><span class="nx">o</span><span class="p">.</span><span class="nx">cum</span><span class="o">=</span><span class="nx">o</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">cum</span><span class="o">-</span><span class="nx">p</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">o</span><span class="o">+</span><span class="nx">p</span><span class="p">,</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">o</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">threshold</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">min</span><span class="p">)),</span><span class="nx">f</span><span class="p">.</span><span class="nx">isLog</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="o">&lt;=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">o</span><span class="o">=</span><span class="kc">null</span><span class="p">),</span><span class="nx">c</span><span class="o">===</span><span class="s2">&quot;percent&quot;</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">o</span><span class="o">=</span><span class="nx">q</span><span class="o">?</span><span class="nx">o</span><span class="o">*</span><span class="mi">100</span><span class="o">/</span><span class="nx">q</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">q</span><span class="o">?</span><span class="nx">p</span><span class="o">*</span><span class="mi">100</span><span class="o">/</span><span class="nx">q</span><span class="o">:</span><span class="mi">0</span><span class="p">),</span><span class="nx">k</span><span class="p">.</span><span class="nx">percentage</span><span class="o">=</span><span class="nx">q</span><span class="o">?</span><span class="nx">k</span><span class="p">.</span><span class="nx">y</span><span class="o">*</span><span class="mi">100</span><span class="o">/</span><span class="nx">q</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">total</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">stackTotal</span><span class="o">=</span><span class="nx">q</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">stackY</span><span class="o">=</span><span class="nx">p</span><span class="p">;</span><span class="nx">k</span><span class="p">.</span><span class="nx">yBottom</span><span class="o">=</span><span class="nx">r</span><span class="p">(</span><span class="nx">o</span><span class="p">)</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="kc">null</span><span class="p">;</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">p</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">modifyValue</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="nx">k</span><span class="p">));</span><span class="nx">k</span><span class="p">.</span><span class="nx">plotY</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">p</span><span class="o">===</span><span class="s2">&quot;number&quot;</span><span class="o">?</span><span class="nx">u</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="mi">10</span><span class="p">)</span><span class="o">/</span><span class="mi">10</span><span class="o">:</span><span class="nx">A</span><span class="p">;</span><span class="nx">k</span><span class="p">.</span><span class="nx">clientX</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">inverted</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotHeight</span><span class="o">-</span><span class="nx">k</span><span class="p">.</span><span class="nx">plotX</span><span class="o">:</span><span class="nx">k</span><span class="p">.</span><span class="nx">plotX</span><span class="p">;</span><span class="nx">k</span><span class="p">.</span><span class="nx">category</span><span class="o">=</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">[</span><span class="nx">k</span><span class="p">.</span><span class="nx">x</span><span class="p">]</span><span class="o">!==</span><span class="nx">A</span><span class="o">?</span><span class="nx">e</span><span class="p">[</span><span class="nx">k</span><span class="p">.</span><span class="nx">x</span><span class="p">]</span><span class="o">:</span><span class="nx">k</span><span class="p">.</span><span class="nx">x</span><span class="p">}</span><span class="k">this</span><span class="p">.</span><span class="nx">getSegments</span><span class="p">()},</span><span class="nx">setTooltipPoints</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">xAxis</span><span class="p">)</span><span class="o">?</span></div><div class='line' id='LC206'><span class="nx">c</span><span class="p">.</span><span class="nx">tooltipLen</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">len</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">plotSizeX</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">tooltipPosName</span><span class="o">||</span><span class="s2">&quot;plotX&quot;</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="p">[];</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">enableMouseTracking</span><span class="o">!==!</span><span class="mi">1</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">tooltipPoints</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">o</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">segments</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">points</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">a</span><span class="p">)});</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">reversed</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">reverse</span><span class="p">());</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">h</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">;</span><span class="nx">h</span><span class="o">++</span><span class="p">){</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">h</span><span class="p">];</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">h</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">?</span><span class="nx">d</span><span class="o">+</span><span class="mi">1</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">h</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">?</span><span class="nx">s</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">U</span><span class="p">((</span><span class="nx">g</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">h</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">?</span><span class="nx">b</span><span class="p">[</span><span class="nx">h</span><span class="o">+</span><span class="mi">1</span><span class="p">][</span><span class="nx">f</span><span class="p">]</span><span class="o">:</span><span class="nx">e</span><span class="p">))</span><span class="o">/</span><span class="mi">2</span><span class="p">))</span><span class="o">:</span><span class="nx">e</span><span class="p">;</span><span class="nx">c</span><span class="o">&gt;=</span><span class="mi">0</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="o">&lt;=</span><span class="nx">d</span><span class="p">;)</span><span class="nx">i</span><span class="p">[</span><span class="nx">c</span><span class="o">++</span><span class="p">]</span><span class="o">=</span><span class="nx">g</span><span class="p">}</span><span class="k">this</span><span class="p">.</span><span class="nx">tooltipPoints</span><span class="o">=</span><span class="nx">i</span><span class="p">}},</span><span class="nx">tooltipHeaderFormatter</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">tooltipOptions</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">xDateFormat</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">xAxis</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">type</span><span class="o">===</span><span class="s2">&quot;datetime&quot;</span><span class="p">,</span></div><div class='line' id='LC207'><span class="nx">f</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">&amp;&amp;!</span><span class="nx">c</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span> <span class="k">in</span> <span class="nx">D</span><span class="p">)</span><span class="k">if</span><span class="p">(</span><span class="nx">D</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">&gt;=</span><span class="nx">d</span><span class="p">.</span><span class="nx">closestPointRange</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">dateTimeLabelFormats</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="k">break</span><span class="p">}</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">headerFormat</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;{point.key}&quot;</span><span class="p">,</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">Da</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">db</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;{series.name}&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">name</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="s2">&quot;{series.color}&quot;</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">color</span><span class="p">)},</span><span class="nx">onMouseOver</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">hoverSeries</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">!==</span><span class="k">this</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">onMouseOut</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">events</span><span class="p">.</span><span class="nx">mouseOver</span><span class="o">&amp;&amp;</span><span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;mouseOver&quot;</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">setState</span><span class="p">(</span><span class="s2">&quot;hover&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">hoverSeries</span><span class="o">=</span><span class="k">this</span><span class="p">},</span><span class="nx">onMouseOut</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">tooltip</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">hoverPoint</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">onMouseOut</span><span class="p">();</span></div><div class='line' id='LC208'><span class="k">this</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">events</span><span class="p">.</span><span class="nx">mouseOut</span><span class="o">&amp;&amp;</span><span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;mouseOut&quot;</span><span class="p">);</span><span class="nx">c</span><span class="o">&amp;&amp;!</span><span class="nx">a</span><span class="p">.</span><span class="nx">stickyTracking</span><span class="o">&amp;&amp;!</span><span class="nx">c</span><span class="p">.</span><span class="nx">shared</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">hide</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">setState</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">hoverSeries</span><span class="o">=</span><span class="kc">null</span><span class="p">},</span><span class="nx">animate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">renderer</span><span class="p">,</span><span class="nx">e</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">animation</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">clipBox</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">inverted</span><span class="p">,</span><span class="nx">h</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">&amp;&amp;!</span><span class="nx">Y</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="nx">e</span><span class="o">=</span><span class="nx">X</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="p">].</span><span class="nx">animation</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="s2">&quot;_sharedClip&quot;</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">duration</span><span class="o">+</span><span class="nx">e</span><span class="p">.</span><span class="nx">easing</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">h</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">h</span><span class="o">+</span><span class="s2">&quot;m&quot;</span><span class="p">],</span><span class="nx">a</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">clipRect</span><span class="p">(</span><span class="nx">x</span><span class="p">(</span><span class="nx">f</span><span class="p">,{</span><span class="nx">width</span><span class="o">:</span><span class="mi">0</span><span class="p">})),</span><span class="nx">c</span><span class="p">[</span><span class="nx">h</span><span class="o">+</span><span class="s2">&quot;m&quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">clipRect</span><span class="p">(</span><span class="o">-</span><span class="mi">99</span><span class="p">,</span><span class="nx">g</span><span class="o">?-</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotLeft</span><span class="o">:-</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotTop</span><span class="p">,</span><span class="mi">99</span><span class="p">,</span><span class="nx">g</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">chartWidth</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">chartHeight</span><span class="p">)),</span><span class="nx">b</span><span class="p">.</span><span class="nx">group</span><span class="p">.</span><span class="nx">clip</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">markerGroup</span><span class="p">.</span><span class="nx">clip</span><span class="p">(</span><span class="nx">e</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">sharedClipKey</span><span class="o">=</span></div><div class='line' id='LC209'><span class="nx">h</span><span class="p">;</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">h</span><span class="p">])</span><span class="nx">a</span><span class="p">.</span><span class="nx">animate</span><span class="p">({</span><span class="nx">width</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotSizeX</span><span class="p">},</span><span class="nx">e</span><span class="p">),</span><span class="nx">c</span><span class="p">[</span><span class="nx">h</span><span class="o">+</span><span class="s2">&quot;m&quot;</span><span class="p">].</span><span class="nx">animate</span><span class="p">({</span><span class="nx">width</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotSizeX</span><span class="o">+</span><span class="mi">99</span><span class="p">},</span><span class="nx">e</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">animate</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">animationTimeout</span><span class="o">=</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">afterAnimate</span><span class="p">()},</span><span class="nx">e</span><span class="p">.</span><span class="nx">duration</span><span class="p">)}},</span><span class="nx">afterAnimate</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">sharedClipKey</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">group</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">trackerGroup</span><span class="p">;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">clip</span><span class="o">!==!</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">clip</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">clipRect</span><span class="p">),</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">clip</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">clipRect</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">markerGroup</span><span class="p">.</span><span class="nx">clip</span><span class="p">());</span><span class="nx">setTimeout</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">].</span><span class="nx">destroy</span><span class="p">(),</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;m&quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;m&quot;</span><span class="p">].</span><span class="nx">destroy</span><span class="p">())},</span><span class="mi">100</span><span class="p">)},</span><span class="nx">drawPoints</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">points</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span></div><div class='line' id='LC210'><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">marker</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">markerGroup</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">enabled</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">_hasPointMarkers</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">--</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">d</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">plotX</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">plotY</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">graphic</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">marker</span><span class="o">||</span><span class="p">{},</span><span class="nx">a</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">enabled</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="p">.</span><span class="nx">enabled</span><span class="o">===</span><span class="nx">A</span><span class="o">||</span><span class="nx">i</span><span class="p">.</span><span class="nx">enabled</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">isInsidePlot</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">inverted</span><span class="p">),</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="o">!==</span><span class="nx">A</span><span class="o">&amp;&amp;!</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">e</span><span class="p">))</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">pointAttr</span><span class="p">[</span><span class="nx">g</span><span class="p">.</span><span class="nx">selected</span><span class="o">?</span><span class="s2">&quot;select&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">],</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">r</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">symbol</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">symbol</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s2">&quot;url&quot;</span><span class="p">)</span><span class="o">===</span><span class="mi">0</span><span class="p">,</span><span class="nx">k</span><span class="p">)</span><span class="nx">k</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">visibility</span><span class="o">:</span><span class="nx">m</span><span class="o">?</span><span class="nx">ca</span><span class="o">?</span><span class="s2">&quot;inherit&quot;</span><span class="o">:</span><span class="s2">&quot;visible&quot;</span><span class="o">:</span><span class="s2">&quot;hidden&quot;</span><span class="p">}).</span><span class="nx">animate</span><span class="p">(</span><span class="nx">x</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="nx">d</span><span class="o">-</span><span class="nx">h</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">e</span><span class="o">-</span><span class="nx">h</span><span class="p">},</span><span class="nx">k</span><span class="p">.</span><span class="nx">symbolName</span><span class="o">?</span><span class="p">{</span><span class="nx">width</span><span class="o">:</span><span class="mi">2</span><span class="o">*</span><span class="nx">h</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="mi">2</span><span class="o">*</span><span class="nx">h</span><span class="p">}</span><span class="o">:</span><span class="p">{}));</span><span class="k">else</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC211'><span class="p">(</span><span class="nx">h</span><span class="o">&gt;</span><span class="mi">0</span><span class="o">||</span><span class="nx">j</span><span class="p">))</span><span class="nx">g</span><span class="p">.</span><span class="nx">graphic</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">symbol</span><span class="p">(</span><span class="nx">i</span><span class="p">,</span><span class="nx">d</span><span class="o">-</span><span class="nx">h</span><span class="p">,</span><span class="nx">e</span><span class="o">-</span><span class="nx">h</span><span class="p">,</span><span class="mi">2</span><span class="o">*</span><span class="nx">h</span><span class="p">,</span><span class="mi">2</span><span class="o">*</span><span class="nx">h</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">add</span><span class="p">(</span><span class="nx">o</span><span class="p">)}</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="nx">g</span><span class="p">.</span><span class="nx">graphic</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">destroy</span><span class="p">()},</span><span class="nx">convertAttribs</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">pointAttrToOptions</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="p">{},</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="p">{},</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="p">{},</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="p">{},</span><span class="nx">d</span><span class="o">=</span><span class="nx">d</span><span class="o">||</span><span class="p">{};</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span> <span class="k">in</span> <span class="nx">e</span><span class="p">)</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">h</span><span class="p">[</span><span class="nx">f</span><span class="p">]</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">g</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">c</span><span class="p">[</span><span class="nx">f</span><span class="p">],</span><span class="nx">d</span><span class="p">[</span><span class="nx">f</span><span class="p">]);</span><span class="k">return</span> <span class="nx">h</span><span class="p">},</span><span class="nx">getAttribs</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">X</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">].</span><span class="nx">marker</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">marker</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">states</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">hover</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">color</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="p">{</span><span class="nx">stroke</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">fill</span><span class="o">:</span><span class="nx">f</span><span class="p">},</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">points</span><span class="o">||</span><span class="p">[],</span><span class="nx">i</span><span class="o">=</span><span class="p">[],</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pointAttrToOptions</span><span class="p">,</span><span class="nx">l</span><span class="p">;</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">marker</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">radius</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">radius</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">radius</span><span class="o">+</span><span class="mi">2</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">=</span></div><div class='line' id='LC212'><span class="nx">d</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">+</span><span class="mi">1</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">color</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">color</span><span class="o">||</span><span class="nx">qa</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">color</span><span class="o">||</span><span class="nx">f</span><span class="p">).</span><span class="nx">brighten</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">brightness</span><span class="p">).</span><span class="nx">get</span><span class="p">();</span><span class="nx">i</span><span class="p">[</span><span class="s2">&quot;&quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">convertAttribs</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">g</span><span class="p">);</span><span class="nx">o</span><span class="p">([</span><span class="s2">&quot;hover&quot;</span><span class="p">,</span><span class="s2">&quot;select&quot;</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">i</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">convertAttribs</span><span class="p">(</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="nx">i</span><span class="p">[</span><span class="s2">&quot;&quot;</span><span class="p">])});</span><span class="nx">a</span><span class="p">.</span><span class="nx">pointAttr</span><span class="o">=</span><span class="nx">i</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">f</span><span class="o">--</span><span class="p">;){</span><span class="nx">g</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="nx">f</span><span class="p">];</span><span class="k">if</span><span class="p">((</span><span class="nx">b</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">options</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">marker</span><span class="o">||</span><span class="nx">g</span><span class="p">.</span><span class="nx">options</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">enabled</span><span class="o">===!</span><span class="mi">1</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">radius</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">colorByPoint</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">options</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">l</span> <span class="k">in</span> <span class="nx">k</span><span class="p">)</span><span class="nx">r</span><span class="p">(</span><span class="nx">b</span><span class="p">[</span><span class="nx">k</span><span class="p">[</span><span class="nx">l</span><span class="p">]])</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=!</span><span class="mi">0</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="p">{};</span><span class="nx">j</span><span class="o">=</span><span class="p">[];</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">states</span><span class="o">||</span><span class="p">{};</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">hover</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">hover</span><span class="o">||</span><span class="p">{};</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">marker</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">color</span><span class="o">=</span><span class="nx">qa</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">color</span><span class="o">||</span><span class="nx">g</span><span class="p">.</span><span class="nx">color</span><span class="p">).</span><span class="nx">brighten</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">brightness</span><span class="o">||</span><span class="nx">d</span><span class="p">.</span><span class="nx">brightness</span><span class="p">).</span><span class="nx">get</span><span class="p">();</span></div><div class='line' id='LC213'><span class="nx">j</span><span class="p">[</span><span class="s2">&quot;&quot;</span><span class="p">]</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">convertAttribs</span><span class="p">(</span><span class="nx">x</span><span class="p">({</span><span class="nx">color</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">color</span><span class="p">},</span><span class="nx">b</span><span class="p">),</span><span class="nx">i</span><span class="p">[</span><span class="s2">&quot;&quot;</span><span class="p">]);</span><span class="nx">j</span><span class="p">.</span><span class="nx">hover</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">convertAttribs</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">hover</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">hover</span><span class="p">,</span><span class="nx">j</span><span class="p">[</span><span class="s2">&quot;&quot;</span><span class="p">]);</span><span class="nx">j</span><span class="p">.</span><span class="nx">select</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">convertAttribs</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">select</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">select</span><span class="p">,</span><span class="nx">j</span><span class="p">[</span><span class="s2">&quot;&quot;</span><span class="p">])}</span><span class="k">else</span> <span class="nx">j</span><span class="o">=</span><span class="nx">i</span><span class="p">;</span><span class="nx">g</span><span class="p">.</span><span class="nx">pointAttr</span><span class="o">=</span><span class="nx">j</span><span class="p">}},</span><span class="nx">destroy</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="sr">/AppleWebKit\/533/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">na</span><span class="p">),</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">data</span><span class="o">||</span><span class="p">[],</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">;</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;destroy&quot;</span><span class="p">);</span><span class="nx">R</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">o</span><span class="p">([</span><span class="s2">&quot;xAxis&quot;</span><span class="p">,</span><span class="s2">&quot;yAxis&quot;</span><span class="p">],</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">])</span><span class="nx">ta</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">i</span><span class="p">.</span><span class="nx">isDirty</span><span class="o">=!</span><span class="mi">0</span><span class="p">});</span><span class="nx">a</span><span class="p">.</span><span class="nx">legendItem</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">legend</span><span class="p">.</span><span class="nx">destroyItem</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">--</span><span class="p">;)(</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">[</span><span class="nx">e</span><span class="p">])</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">destroy</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">destroy</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">points</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">clearTimeout</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">animationTimeout</span><span class="p">);</span></div><div class='line' id='LC214'><span class="nx">o</span><span class="p">(</span><span class="s2">&quot;area,graph,dataLabelsGroup,group,markerGroup,tracker,trackerGroup&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;,&quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">===</span><span class="s2">&quot;group&quot;</span><span class="o">?</span><span class="s2">&quot;hide&quot;</span><span class="o">:</span><span class="s2">&quot;destroy&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">][</span><span class="nx">d</span><span class="p">]())});</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">hoverSeries</span><span class="o">===</span><span class="nx">a</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">hoverSeries</span><span class="o">=</span><span class="kc">null</span><span class="p">;</span><span class="nx">ta</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">h</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="k">delete</span> <span class="nx">a</span><span class="p">[</span><span class="nx">h</span><span class="p">]},</span><span class="nx">drawDataLabels</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">dataLabels</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">points</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">enabled</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">_hasPointLabels</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">dlProcessOptions</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">dlProcessOptions</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotGroup</span><span class="p">(</span><span class="s2">&quot;dataLabelsGroup&quot;</span><span class="p">,</span><span class="s2">&quot;data-labels&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">visible</span><span class="o">?</span><span class="s2">&quot;visible&quot;</span><span class="o">:</span><span class="s2">&quot;hidden&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">zIndex</span><span class="o">||</span><span class="mi">6</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">,</span><span class="nx">o</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">dataLabel</span><span class="p">,</span></div><div class='line' id='LC215'><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">options</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">dataLabels</span><span class="p">;</span><span class="nx">i</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">enabled</span><span class="o">||</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">enabled</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="o">&amp;&amp;!</span><span class="nx">i</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">dataLabel</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">destroy</span><span class="p">();</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">){</span><span class="nx">i</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">rotation</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">formatter</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">getLabelConfig</span><span class="p">(),</span><span class="nx">b</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">color</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">color</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">color</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">color</span><span class="p">,</span><span class="s2">&quot;black&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="nx">j</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">text</span><span class="o">:</span><span class="nx">f</span><span class="p">}),</span><span class="nx">l</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">r</span><span class="p">(</span><span class="nx">f</span><span class="p">)){</span><span class="nx">j</span><span class="o">=</span><span class="p">{</span><span class="nx">fill</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">backgroundColor</span><span class="p">,</span><span class="nx">stroke</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">borderColor</span><span class="p">,</span><span class="s2">&quot;stroke-width&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">borderWidth</span><span class="p">,</span><span class="nx">r</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">borderRadius</span><span class="o">||</span><span class="mi">0</span><span class="p">,</span><span class="nx">rotation</span><span class="o">:</span><span class="nx">i</span><span class="p">,</span><span class="nx">padding</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">padding</span><span class="p">,</span><span class="nx">zIndex</span><span class="o">:</span><span class="mi">1</span><span class="p">};</span><span class="k">for</span><span class="p">(</span><span class="nx">k</span> <span class="k">in</span> <span class="nx">j</span><span class="p">)</span><span class="nx">j</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">===</span><span class="nx">A</span><span class="o">&amp;&amp;</span><span class="k">delete</span> <span class="nx">j</span><span class="p">[</span><span class="nx">k</span><span class="p">];</span><span class="nx">j</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">dataLabel</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">renderer</span><span class="p">[</span><span class="nx">i</span><span class="o">?</span><span class="s2">&quot;text&quot;</span><span class="o">:</span><span class="s2">&quot;label&quot;</span><span class="p">](</span><span class="nx">f</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="mi">999</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span></div><div class='line' id='LC216'><span class="kc">null</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">useHTML</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="nx">j</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">style</span><span class="p">).</span><span class="nx">add</span><span class="p">(</span><span class="nx">g</span><span class="p">).</span><span class="nx">shadow</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">shadow</span><span class="p">)}</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">alignDataLabel</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">l</span><span class="p">)}})},</span><span class="nx">alignDataLabel</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">inverted</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotX</span><span class="p">,</span><span class="o">-</span><span class="mi">999</span><span class="p">),</span><span class="nx">a</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotY</span><span class="p">,</span><span class="o">-</span><span class="mi">999</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">getBBox</span><span class="p">(),</span><span class="nx">d</span><span class="o">=</span><span class="nx">x</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span><span class="nx">g</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">plotWidth</span><span class="o">-</span><span class="nx">a</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">u</span><span class="p">(</span><span class="nx">g</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">plotHeight</span><span class="o">-</span><span class="nx">h</span><span class="o">:</span><span class="nx">a</span><span class="p">),</span><span class="nx">width</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span><span class="nx">d</span><span class="p">);</span><span class="nx">x</span><span class="p">(</span><span class="nx">c</span><span class="p">,{</span><span class="nx">width</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">i</span><span class="p">.</span><span class="nx">height</span><span class="p">});</span><span class="nx">c</span><span class="p">.</span><span class="nx">rotation</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="p">{</span><span class="nx">align</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">align</span><span class="p">,</span><span class="nx">x</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="o">/</span><span class="mi">2</span><span class="p">},</span><span class="nx">b</span><span class="p">[</span><span class="nx">e</span><span class="o">?</span><span class="s2">&quot;attr&quot;</span><span class="o">:</span><span class="s2">&quot;animate&quot;</span><span class="p">](</span><span class="nx">d</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">align</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">alignAttr</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">visibility</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">crop</span><span class="o">===!</span><span class="mi">1</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">isInsidePlot</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span></div><div class='line' id='LC217'><span class="nx">d</span><span class="p">.</span><span class="nx">y</span><span class="p">)</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">isInsidePlot</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="p">)</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">isSVG</span><span class="o">?</span><span class="s2">&quot;inherit&quot;</span><span class="o">:</span><span class="s2">&quot;visible&quot;</span><span class="o">:</span><span class="s2">&quot;hidden&quot;</span><span class="p">})},</span><span class="nx">getSegmentPath</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">[],</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">step</span><span class="p">;</span><span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">plotX</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">plotY</span><span class="p">,</span><span class="nx">i</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">getPointSpline</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">getPointSpline</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">))</span><span class="o">:</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">f</span><span class="o">?</span><span class="s2">&quot;L&quot;</span><span class="o">:</span><span class="s2">&quot;M&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="nx">d</span><span class="o">===</span><span class="s2">&quot;right&quot;</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">plotX</span><span class="p">,</span><span class="nx">h</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="o">===</span><span class="s2">&quot;center&quot;</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">((</span><span class="nx">i</span><span class="p">.</span><span class="nx">plotX</span><span class="o">+</span><span class="nx">g</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">plotY</span><span class="p">,(</span><span class="nx">i</span><span class="p">.</span><span class="nx">plotX</span><span class="o">+</span><span class="nx">g</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">h</span><span class="p">)</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">plotY</span><span class="p">)),</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">plotX</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">plotY</span><span class="p">))});</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">getGraphPath</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="p">[],</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="p">[];</span><span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">segments</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getSegmentPath</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span></div><div class='line' id='LC218'><span class="nx">e</span><span class="p">.</span><span class="nx">length</span><span class="o">&gt;</span><span class="mi">1</span><span class="o">?</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">])});</span><span class="nx">a</span><span class="p">.</span><span class="nx">singlePoints</span><span class="o">=</span><span class="nx">d</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">graphPath</span><span class="o">=</span><span class="nx">b</span><span class="p">},</span><span class="nx">drawGraph</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">graph</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">group</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineColor</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">color</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">lineWidth</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">dashStyle</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getGraphPath</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">)</span><span class="nx">fb</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">animate</span><span class="p">({</span><span class="nx">d</span><span class="o">:</span><span class="nx">g</span><span class="p">});</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="p">{</span><span class="nx">stroke</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;stroke-width&quot;</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">zIndex</span><span class="o">:</span><span class="mi">1</span><span class="p">};</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">dashstyle</span><span class="o">=</span><span class="nx">f</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">graph</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">path</span><span class="p">(</span><span class="nx">g</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">add</span><span class="p">(</span><span class="nx">c</span><span class="p">).</span><span class="nx">shadow</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">shadow</span><span class="p">)}},</span><span class="nx">invertGroups</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">a</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">width</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">yAxis</span><span class="p">.</span><span class="nx">len</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">xAxis</span><span class="p">.</span><span class="nx">len</span><span class="p">};</span><span class="nx">o</span><span class="p">([</span><span class="s2">&quot;group&quot;</span><span class="p">,</span><span class="s2">&quot;trackerGroup&quot;</span><span class="p">,</span><span class="s2">&quot;markerGroup&quot;</span><span class="p">],</span></div><div class='line' id='LC219'><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">attr</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">invert</span><span class="p">()})}</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">chart</span><span class="p">;</span><span class="nx">J</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;resize&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">J</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;destroy&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="nx">R</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;resize&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)});</span><span class="nx">a</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">invertGroups</span><span class="o">=</span><span class="nx">a</span><span class="p">},</span><span class="nx">plotGroup</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">xAxis</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">yAxis</span><span class="p">;</span><span class="nx">f</span><span class="o">||</span><span class="p">(</span><span class="k">this</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">visibility</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">zIndex</span><span class="o">:</span><span class="nx">d</span><span class="o">||</span><span class="mf">0.1</span><span class="p">}).</span><span class="nx">add</span><span class="p">(</span><span class="nx">e</span><span class="p">));</span><span class="nx">f</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="nx">h</span><span class="o">?</span><span class="nx">h</span><span class="p">.</span><span class="nx">left</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">plotLeft</span><span class="p">,</span><span class="nx">i</span><span class="o">?</span><span class="nx">i</span><span class="p">.</span><span class="nx">top</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">plotTop</span><span class="p">);</span><span class="k">return</span> <span class="nx">f</span><span class="p">},</span><span class="nx">render</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">animation</span><span class="o">&amp;&amp;!!</span><span class="k">this</span><span class="p">.</span><span class="nx">animate</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">visible</span><span class="o">?</span><span class="s2">&quot;visible&quot;</span><span class="o">:</span><span class="s2">&quot;hidden&quot;</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">zIndex</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">hasRendered</span><span class="p">,</span></div><div class='line' id='LC220'><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">seriesGroup</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotGroup</span><span class="p">(</span><span class="s2">&quot;group&quot;</span><span class="p">,</span><span class="s2">&quot;series&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">markerGroup</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">plotGroup</span><span class="p">(</span><span class="s2">&quot;markerGroup&quot;</span><span class="p">,</span><span class="s2">&quot;markers&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">animate</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">getAttribs</span><span class="p">();</span><span class="nx">b</span><span class="p">.</span><span class="nx">inverted</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">inverted</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">drawGraph</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">drawGraph</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">drawPoints</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">drawDataLabels</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">enableMouseTracking</span><span class="o">!==!</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">drawTracker</span><span class="p">();</span><span class="nx">a</span><span class="p">.</span><span class="nx">inverted</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">invertGroups</span><span class="p">();</span><span class="nx">c</span><span class="p">.</span><span class="nx">clip</span><span class="o">!==!</span><span class="mi">1</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">sharedClipKey</span><span class="o">&amp;&amp;!</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">clip</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">clipRect</span><span class="p">),</span><span class="k">this</span><span class="p">.</span><span class="nx">trackerGroup</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">trackerGroup</span><span class="p">.</span><span class="nx">clip</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">clipRect</span><span class="p">));</span><span class="nx">d</span><span class="o">?</span><span class="k">this</span><span class="p">.</span><span class="nx">animate</span><span class="p">()</span><span class="o">:</span><span class="nx">g</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">afterAnimate</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">isDirty</span><span class="o">=</span></div><div class='line' id='LC221'><span class="k">this</span><span class="p">.</span><span class="nx">isDirtyData</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">hasRendered</span><span class="o">=!</span><span class="mi">0</span><span class="p">},</span><span class="nx">redraw</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">isDirtyData</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">group</span><span class="p">;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">inverted</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">width</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotWidth</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotHeight</span><span class="p">}),</span><span class="nx">c</span><span class="p">.</span><span class="nx">animate</span><span class="p">({</span><span class="nx">translateX</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">xAxis</span><span class="p">.</span><span class="nx">left</span><span class="p">,</span><span class="nx">translateY</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">yAxis</span><span class="p">.</span><span class="nx">top</span><span class="p">}));</span><span class="k">this</span><span class="p">.</span><span class="nx">translate</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">setTooltipPoints</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">render</span><span class="p">();</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="s2">&quot;updatedData&quot;</span><span class="p">)},</span><span class="nx">setState</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">graph</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">states</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineWidth</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="o">!==</span><span class="nx">a</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">state</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">enabled</span><span class="o">===!</span><span class="mi">1</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">d</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">lineWidth</span><span class="o">||</span><span class="nx">b</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="nx">c</span><span class="o">&amp;&amp;!</span><span class="nx">c</span><span class="p">.</span><span class="nx">dashstyle</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC222'><span class="nx">c</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="s2">&quot;stroke-width&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">},</span><span class="nx">a</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">500</span><span class="p">))},</span><span class="nx">setVisible</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">legendItem</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">group</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">tracker</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">dataLabelsGroup</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">markerGroup</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">points</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">ignoreHiddenSeries</span><span class="p">;</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">visible</span><span class="p">;</span><span class="nx">i</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">visible</span><span class="o">=</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">===</span><span class="nx">A</span><span class="o">?!</span><span class="nx">i</span><span class="o">:</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;show&quot;</span><span class="o">:</span><span class="s2">&quot;hide&quot;</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="nx">e</span><span class="p">[</span><span class="nx">i</span><span class="p">]();</span><span class="k">if</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="nx">h</span><span class="p">[</span><span class="nx">i</span><span class="p">]();</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="nx">f</span><span class="p">[</span><span class="nx">i</span><span class="p">]();</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">e</span><span class="o">--</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="nx">e</span><span class="p">],</span><span class="nx">f</span><span class="p">.</span><span class="nx">tracker</span><span class="p">)</span><span class="nx">f</span><span class="p">.</span><span class="nx">tracker</span><span class="p">[</span><span class="nx">i</span><span class="p">]();</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">hoverSeries</span><span class="o">===</span><span class="k">this</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">onMouseOut</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="nx">g</span><span class="p">[</span><span class="nx">i</span><span class="p">]();</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">legend</span><span class="p">.</span><span class="nx">colorizeItem</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">isDirty</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">stacking</span><span class="o">&amp;&amp;</span></div><div class='line' id='LC223'><span class="nx">o</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">stacking</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">visible</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">isDirty</span><span class="o">=!</span><span class="mi">0</span><span class="p">});</span><span class="k">if</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">isDirtyBox</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="nx">b</span><span class="o">!==!</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">redraw</span><span class="p">();</span><span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">i</span><span class="p">)},</span><span class="nx">show</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">setVisible</span><span class="p">(</span><span class="o">!</span><span class="mi">0</span><span class="p">)},</span><span class="nx">hide</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">setVisible</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">)},</span><span class="nx">select</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">this</span><span class="p">.</span><span class="nx">selected</span><span class="o">=</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">===</span><span class="nx">A</span><span class="o">?!</span><span class="k">this</span><span class="p">.</span><span class="nx">selected</span><span class="o">:</span><span class="nx">a</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">checkbox</span><span class="p">)</span><span class="k">this</span><span class="p">.</span><span class="nx">checkbox</span><span class="p">.</span><span class="nx">checked</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="nx">F</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="o">?</span><span class="s2">&quot;select&quot;</span><span class="o">:</span><span class="s2">&quot;unselect&quot;</span><span class="p">)},</span><span class="nx">drawTracker</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">trackByArea</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="p">[].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">c</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">areaPath</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">graphPath</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">renderer</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tooltip</span><span class="p">.</span><span class="nx">snap</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">tracker</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">cursor</span><span class="p">,</span></div><div class='line' id='LC224'><span class="nx">j</span><span class="o">=</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="p">{</span><span class="nx">cursor</span><span class="o">:</span><span class="nx">j</span><span class="p">},</span><span class="nx">k</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">singlePoints</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">isCartesian</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">plotGroup</span><span class="p">(</span><span class="s2">&quot;trackerGroup&quot;</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="s2">&quot;visible&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">zIndex</span><span class="o">||</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">trackerGroup</span><span class="p">),</span><span class="nx">m</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">hoverSeries</span><span class="o">!==</span><span class="nx">a</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">onMouseOver</span><span class="p">()},</span><span class="nx">o</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">stickyTracking</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">onMouseOut</span><span class="p">()};</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">&amp;&amp;!</span><span class="nx">c</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">e</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span><span class="nx">m</span><span class="o">--</span><span class="p">;)</span><span class="nx">d</span><span class="p">[</span><span class="nx">m</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;M&quot;</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">m</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">m</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">-</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">m</span><span class="o">+</span><span class="mi">2</span><span class="p">],</span><span class="s2">&quot;L&quot;</span><span class="p">),(</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">[</span><span class="nx">m</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;M&quot;</span><span class="o">||</span><span class="nx">m</span><span class="o">===</span><span class="nx">e</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">d</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="s2">&quot;L&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">m</span><span class="o">-</span><span class="mi">2</span><span class="p">]</span><span class="o">+</span><span class="nx">h</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">m</span><span class="o">-</span><span class="mi">1</span><span class="p">]);</span><span class="k">for</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">m</span><span class="o">&lt;</span><span class="nx">k</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">m</span><span class="o">++</span><span class="p">)</span><span class="nx">e</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="nx">m</span><span class="p">],</span><span class="nx">d</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;M&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">plotX</span><span class="o">-</span><span class="nx">h</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">plotY</span><span class="p">,</span><span class="s2">&quot;L&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">plotX</span><span class="o">+</span><span class="nx">h</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">plotY</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span><span class="nx">i</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">d</span><span class="o">:</span><span class="nx">d</span><span class="p">});</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">tracker</span><span class="o">=</span><span class="nx">i</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">path</span><span class="p">(</span><span class="nx">d</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">isTracker</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span></div><div class='line' id='LC225'><span class="s2">&quot;stroke-linejoin&quot;</span><span class="o">:</span><span class="s2">&quot;round&quot;</span><span class="p">,</span><span class="nx">visibility</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">visible</span><span class="o">?</span><span class="s2">&quot;visible&quot;</span><span class="o">:</span><span class="s2">&quot;hidden&quot;</span><span class="p">,</span><span class="nx">stroke</span><span class="o">:</span><span class="nx">vb</span><span class="p">,</span><span class="nx">fill</span><span class="o">:</span><span class="nx">c</span><span class="o">?</span><span class="nx">vb</span><span class="o">:</span><span class="nx">Q</span><span class="p">,</span><span class="s2">&quot;stroke-width&quot;</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">lineWidth</span><span class="o">+</span><span class="p">(</span><span class="nx">c</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">2</span><span class="o">*</span><span class="nx">h</span><span class="p">)}).</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;mouseover&quot;</span><span class="p">,</span><span class="nx">n</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;mouseout&quot;</span><span class="p">,</span><span class="nx">o</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="nx">j</span><span class="p">).</span><span class="nx">add</span><span class="p">(</span><span class="nx">l</span><span class="p">),</span><span class="nx">Ba</span><span class="p">)</span><span class="nx">i</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;touchstart&quot;</span><span class="p">,</span><span class="nx">n</span><span class="p">)}};</span><span class="nx">G</span><span class="o">=</span><span class="nx">ba</span><span class="p">(</span><span class="nx">P</span><span class="p">);</span><span class="nx">$</span><span class="p">.</span><span class="nx">line</span><span class="o">=</span><span class="nx">G</span><span class="p">;</span><span class="nx">X</span><span class="p">.</span><span class="nx">area</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="nx">ea</span><span class="p">,{</span><span class="nx">threshold</span><span class="o">:</span><span class="mi">0</span><span class="p">});</span><span class="nx">G</span><span class="o">=</span><span class="nx">ba</span><span class="p">(</span><span class="nx">P</span><span class="p">,{</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;area&quot;</span><span class="p">,</span><span class="nx">getSegmentPath</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">getSegmentPath</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">c</span><span class="o">=</span><span class="p">[].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">===</span><span class="mi">3</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;L&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">b</span><span class="p">[</span><span class="mi">2</span><span class="p">]);</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">stacking</span><span class="o">&amp;&amp;!</span><span class="k">this</span><span class="p">.</span><span class="nx">closedStacks</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">;</span><span class="nx">d</span><span class="o">&gt;=</span><span class="mi">0</span><span class="p">;</span><span class="nx">d</span><span class="o">--</span><span class="p">)</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">step</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="o">+</span><span class="mi">1</span><span class="p">].</span><span class="nx">plotX</span><span class="p">,</span></div><div class='line' id='LC226'><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">yBottom</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">plotX</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">yBottom</span><span class="p">);</span><span class="k">else</span> <span class="k">this</span><span class="p">.</span><span class="nx">closeSegment</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">areaPath</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">areaPath</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="nx">b</span><span class="p">},</span><span class="nx">closeSegment</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">yAxis</span><span class="p">.</span><span class="nx">getThreshold</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">threshold</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="s2">&quot;L&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nx">plotX</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="s2">&quot;L&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">plotX</span><span class="p">,</span><span class="nx">c</span><span class="p">)},</span><span class="nx">drawGraph</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">areaPath</span><span class="o">=</span><span class="p">[];</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">drawGraph</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">areaPath</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">area</span><span class="p">;</span><span class="nx">c</span><span class="o">?</span><span class="nx">c</span><span class="p">.</span><span class="nx">animate</span><span class="p">({</span><span class="nx">d</span><span class="o">:</span><span class="nx">a</span><span class="p">})</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">area</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">path</span><span class="p">(</span><span class="nx">a</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">fill</span><span class="o">:</span><span class="nx">n</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">fillColor</span><span class="p">,</span><span class="nx">qa</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">color</span><span class="p">).</span><span class="nx">setOpacity</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">fillOpacity</span><span class="o">||</span><span class="mf">0.75</span><span class="p">).</span><span class="nx">get</span><span class="p">()),</span></div><div class='line' id='LC227'><span class="nx">zIndex</span><span class="o">:</span><span class="mi">0</span><span class="p">}).</span><span class="nx">add</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">group</span><span class="p">)},</span><span class="nx">drawLegendSymbol</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">legendSymbol</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">rect</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">baseline</span><span class="o">-</span><span class="mi">11</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">symbolWidth</span><span class="p">,</span><span class="mi">12</span><span class="p">,</span><span class="mi">2</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">zIndex</span><span class="o">:</span><span class="mi">3</span><span class="p">}).</span><span class="nx">add</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">legendGroup</span><span class="p">)}});</span><span class="nx">$</span><span class="p">.</span><span class="nx">area</span><span class="o">=</span><span class="nx">G</span><span class="p">;</span><span class="nx">X</span><span class="p">.</span><span class="nx">spline</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="nx">ea</span><span class="p">);</span><span class="nx">fa</span><span class="o">=</span><span class="nx">ba</span><span class="p">(</span><span class="nx">P</span><span class="p">,{</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;spline&quot;</span><span class="p">,</span><span class="nx">getPointSpline</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">plotX</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">plotY</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">c</span><span class="o">+</span><span class="mi">1</span><span class="p">],</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">plotY</span><span class="p">;</span><span class="nx">j</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">plotX</span><span class="p">;</span><span class="kd">var</span> <span class="nx">g</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">plotY</span><span class="p">,</span><span class="nx">l</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="p">(</span><span class="mf">1.5</span><span class="o">*</span><span class="nx">d</span><span class="o">+</span><span class="nx">f</span><span class="p">.</span><span class="nx">plotX</span><span class="p">)</span><span class="o">/</span><span class="mf">2.5</span><span class="p">;</span><span class="nx">i</span><span class="o">=</span><span class="p">(</span><span class="mf">1.5</span><span class="o">*</span><span class="nx">e</span><span class="o">+</span><span class="nx">a</span><span class="p">)</span><span class="o">/</span><span class="mf">2.5</span><span class="p">;</span><span class="nx">j</span><span class="o">=</span><span class="p">(</span><span class="mf">1.5</span><span class="o">*</span><span class="nx">d</span><span class="o">+</span><span class="nx">j</span><span class="p">)</span><span class="o">/</span><span class="mf">2.5</span><span class="p">;</span><span class="nx">k</span><span class="o">=</span><span class="p">(</span><span class="mf">1.5</span><span class="o">*</span><span class="nx">e</span><span class="o">+</span><span class="nx">g</span><span class="p">)</span><span class="o">/</span><span class="mf">2.5</span><span class="p">;</span><span class="nx">l</span><span class="o">=</span><span class="p">(</span><span class="nx">k</span><span class="o">-</span><span class="nx">i</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="nx">j</span><span class="o">-</span><span class="nx">d</span><span class="p">)</span><span class="o">/</span><span class="p">(</span><span class="nx">j</span><span class="o">-</span><span class="nx">h</span><span class="p">)</span><span class="o">+</span><span class="nx">e</span><span class="o">-</span><span class="nx">k</span><span class="p">;</span><span class="nx">i</span><span class="o">+=</span><span class="nx">l</span><span class="p">;</span><span class="nx">k</span><span class="o">+=</span><span class="nx">l</span><span class="p">;</span><span class="nx">i</span><span class="o">&gt;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="o">&gt;</span><span class="nx">e</span><span class="o">?</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="mi">2</span><span class="o">*</span><span class="nx">e</span><span class="o">-</span><span class="nx">i</span><span class="p">)</span><span class="o">:</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="nx">O</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span></div><div class='line' id='LC228'><span class="nx">e</span><span class="p">),</span><span class="nx">k</span><span class="o">=</span><span class="mi">2</span><span class="o">*</span><span class="nx">e</span><span class="o">-</span><span class="nx">i</span><span class="p">);</span><span class="nx">k</span><span class="o">&gt;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="o">&gt;</span><span class="nx">e</span><span class="o">?</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">s</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="mi">2</span><span class="o">*</span><span class="nx">e</span><span class="o">-</span><span class="nx">k</span><span class="p">)</span><span class="o">:</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="o">&lt;</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">O</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">e</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="mi">2</span><span class="o">*</span><span class="nx">e</span><span class="o">-</span><span class="nx">k</span><span class="p">);</span><span class="nx">b</span><span class="p">.</span><span class="nx">rightContX</span><span class="o">=</span><span class="nx">j</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">rightContY</span><span class="o">=</span><span class="nx">k</span><span class="p">}</span><span class="nx">c</span><span class="o">?</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;C&quot;</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">rightContX</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">plotX</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">rightContY</span><span class="o">||</span><span class="nx">f</span><span class="p">.</span><span class="nx">plotY</span><span class="p">,</span><span class="nx">h</span><span class="o">||</span><span class="nx">d</span><span class="p">,</span><span class="nx">i</span><span class="o">||</span><span class="nx">e</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">],</span><span class="nx">f</span><span class="p">.</span><span class="nx">rightContX</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">rightContY</span><span class="o">=</span><span class="kc">null</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;M&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">];</span><span class="k">return</span> <span class="nx">b</span><span class="p">}});</span><span class="nx">$</span><span class="p">.</span><span class="nx">spline</span><span class="o">=</span><span class="nx">fa</span><span class="p">;</span><span class="nx">X</span><span class="p">.</span><span class="nx">areaspline</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="nx">X</span><span class="p">.</span><span class="nx">area</span><span class="p">);</span><span class="kd">var</span> <span class="nx">Ca</span><span class="o">=</span><span class="nx">G</span><span class="p">.</span><span class="nx">prototype</span><span class="p">,</span><span class="nx">fa</span><span class="o">=</span><span class="nx">ba</span><span class="p">(</span><span class="nx">fa</span><span class="p">,{</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;areaspline&quot;</span><span class="p">,</span><span class="nx">closedStacks</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">getSegmentPath</span><span class="o">:</span><span class="nx">Ca</span><span class="p">.</span><span class="nx">getSegmentPath</span><span class="p">,</span><span class="nx">closeSegment</span><span class="o">:</span><span class="nx">Ca</span><span class="p">.</span><span class="nx">closeSegment</span><span class="p">,</span><span class="nx">drawGraph</span><span class="o">:</span><span class="nx">Ca</span><span class="p">.</span><span class="nx">drawGraph</span><span class="p">});</span><span class="nx">$</span><span class="p">.</span><span class="nx">areaspline</span><span class="o">=</span><span class="nx">fa</span><span class="p">;</span><span class="nx">X</span><span class="p">.</span><span class="nx">column</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="nx">ea</span><span class="p">,{</span><span class="nx">borderColor</span><span class="o">:</span><span class="s2">&quot;#FFFFFF&quot;</span><span class="p">,</span><span class="nx">borderWidth</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">borderRadius</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">groupPadding</span><span class="o">:</span><span class="mf">0.2</span><span class="p">,</span></div><div class='line' id='LC229'><span class="nx">marker</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">pointPadding</span><span class="o">:</span><span class="mf">0.1</span><span class="p">,</span><span class="nx">minPointLength</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">cropThreshold</span><span class="o">:</span><span class="mi">50</span><span class="p">,</span><span class="nx">pointRange</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">states</span><span class="o">:</span><span class="p">{</span><span class="nx">hover</span><span class="o">:</span><span class="p">{</span><span class="nx">brightness</span><span class="o">:</span><span class="mf">0.1</span><span class="p">,</span><span class="nx">shadow</span><span class="o">:!</span><span class="mi">1</span><span class="p">},</span><span class="nx">select</span><span class="o">:</span><span class="p">{</span><span class="nx">color</span><span class="o">:</span><span class="s2">&quot;#C0C0C0&quot;</span><span class="p">,</span><span class="nx">borderColor</span><span class="o">:</span><span class="s2">&quot;#000000&quot;</span><span class="p">,</span><span class="nx">shadow</span><span class="o">:!</span><span class="mi">1</span><span class="p">}},</span><span class="nx">dataLabels</span><span class="o">:</span><span class="p">{</span><span class="nx">align</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">verticalAlign</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="kc">null</span><span class="p">},</span><span class="nx">threshold</span><span class="o">:</span><span class="mi">0</span><span class="p">});</span><span class="nx">fa</span><span class="o">=</span><span class="nx">ba</span><span class="p">(</span><span class="nx">P</span><span class="p">,{</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;column&quot;</span><span class="p">,</span><span class="nx">tooltipOutsidePlot</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">pointAttrToOptions</span><span class="o">:</span><span class="p">{</span><span class="nx">stroke</span><span class="o">:</span><span class="s2">&quot;borderColor&quot;</span><span class="p">,</span><span class="s2">&quot;stroke-width&quot;</span><span class="o">:</span><span class="s2">&quot;borderWidth&quot;</span><span class="p">,</span><span class="nx">fill</span><span class="o">:</span><span class="s2">&quot;color&quot;</span><span class="p">,</span><span class="nx">r</span><span class="o">:</span><span class="s2">&quot;borderRadius&quot;</span><span class="p">},</span><span class="nx">init</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">init</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">chart</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">hasRendered</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">===</span></div><div class='line' id='LC230'><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">isDirty</span><span class="o">=!</span><span class="mi">0</span><span class="p">})},</span><span class="nx">translate</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">stacking</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">borderWidth</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">xAxis</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">yAxis</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">reversed</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="p">{},</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="p">;</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">translate</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">grouping</span><span class="o">===!</span><span class="mi">1</span><span class="o">?</span><span class="nx">f</span><span class="o">=</span><span class="mi">1</span><span class="o">:</span><span class="nx">o</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">visible</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">group</span><span class="o">===</span><span class="nx">c</span><span class="p">.</span><span class="nx">group</span><span class="p">)</span><span class="nx">c</span><span class="p">.</span><span class="nx">stacking</span><span class="o">?</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">stackKey</span><span class="p">,</span><span class="nx">j</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">===</span><span class="nx">A</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="p">[</span><span class="nx">k</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="o">++</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="nx">j</span><span class="p">[</span><span class="nx">k</span><span class="p">])</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">grouping</span><span class="o">!==!</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="nx">f</span><span class="o">++</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">columnIndex</span><span class="o">=</span><span class="nx">l</span><span class="p">});</span><span class="kd">var</span> <span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">points</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">transA</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">ordinalSlope</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">pointRange</span><span class="o">||</span><span class="nx">g</span><span class="p">.</span><span class="nx">closestPointRange</span><span class="o">||</span><span class="mi">1</span><span class="p">),</span><span class="nx">q</span><span class="o">=</span><span class="nx">g</span><span class="o">*</span><span class="nx">c</span><span class="p">.</span><span class="nx">groupPadding</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span></div><div class='line' id='LC231'><span class="p">(</span><span class="nx">g</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">q</span><span class="p">)</span><span class="o">/</span><span class="nx">f</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">pointWidth</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">r</span><span class="p">(</span><span class="nx">y</span><span class="p">)</span><span class="o">?</span><span class="p">(</span><span class="nx">p</span><span class="o">-</span><span class="nx">y</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="o">:</span><span class="nx">p</span><span class="o">*</span><span class="nx">c</span><span class="p">.</span><span class="nx">pointPadding</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">y</span><span class="p">,</span><span class="nx">p</span><span class="o">-</span><span class="mi">2</span><span class="o">*</span><span class="nx">t</span><span class="p">),</span><span class="nx">x</span><span class="o">=</span><span class="nx">za</span><span class="p">(</span><span class="nx">s</span><span class="p">(</span><span class="nx">u</span><span class="p">,</span><span class="mi">1</span><span class="o">+</span><span class="mi">2</span><span class="o">*</span><span class="nx">e</span><span class="p">)),</span><span class="nx">v</span><span class="o">=</span><span class="nx">t</span><span class="o">+</span><span class="p">(</span><span class="nx">q</span><span class="o">+</span><span class="p">((</span><span class="nx">i</span><span class="o">?</span><span class="nx">f</span><span class="o">-</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">columnIndex</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">columnIndex</span><span class="p">)</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">*</span><span class="nx">p</span><span class="o">-</span><span class="nx">g</span><span class="o">/</span><span class="mi">2</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="nx">i</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">),</span><span class="nx">z</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">translatedThreshold</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">getThreshold</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">threshold</span><span class="p">),</span><span class="nx">w</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">minPointLength</span><span class="p">,</span><span class="mi">5</span><span class="p">);</span><span class="nx">o</span><span class="p">(</span><span class="nx">m</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">O</span><span class="p">(</span><span class="nx">s</span><span class="p">(</span><span class="o">-</span><span class="mi">999</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotY</span><span class="p">),</span><span class="nx">h</span><span class="p">.</span><span class="nx">len</span><span class="o">+</span><span class="mi">999</span><span class="p">),</span><span class="nx">g</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">yBottom</span><span class="p">,</span><span class="nx">z</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotX</span><span class="o">+</span><span class="nx">v</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">za</span><span class="p">(</span><span class="nx">O</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">)),</span><span class="nx">k</span><span class="o">=</span><span class="nx">za</span><span class="p">(</span><span class="nx">s</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">)</span><span class="o">-</span><span class="nx">j</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">stacks</span><span class="p">[(</span><span class="nx">c</span><span class="p">.</span><span class="nx">y</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">?</span><span class="s2">&quot;-&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">stackKey</span><span class="p">];</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">visible</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">x</span><span class="p">].</span><span class="nx">setOffset</span><span class="p">(</span><span class="nx">v</span><span class="p">,</span><span class="nx">x</span><span class="p">);</span><span class="nx">M</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="o">&lt;</span><span class="nx">w</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="o">=</span><span class="nx">w</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="nx">j</span><span class="o">-</span><span class="nx">z</span><span class="p">)</span><span class="o">&gt;</span><span class="nx">w</span><span class="o">?</span><span class="nx">g</span><span class="o">-</span><span class="nx">w</span><span class="o">:</span><span class="nx">z</span><span class="o">-</span><span class="p">(</span><span class="nx">f</span><span class="o">&lt;=</span><span class="nx">z</span><span class="o">?</span><span class="nx">w</span><span class="o">:</span><span class="mi">0</span><span class="p">));</span><span class="nx">c</span><span class="p">.</span><span class="nx">barX</span><span class="o">=</span><span class="nx">i</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">pointWidth</span><span class="o">=</span><span class="nx">u</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">shapeType</span><span class="o">=</span></div><div class='line' id='LC232'><span class="s2">&quot;rect&quot;</span><span class="p">;</span><span class="nx">c</span><span class="p">.</span><span class="nx">shapeArgs</span><span class="o">=</span><span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">Element</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">crisp</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">x</span><span class="p">,</span><span class="nx">k</span><span class="p">);</span><span class="nx">e</span><span class="o">%</span><span class="mi">2</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">y</span><span class="o">-=</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">height</span><span class="o">+=</span><span class="mi">1</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">trackerArgs</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="nx">k</span><span class="p">)</span><span class="o">&lt;</span><span class="mi">3</span><span class="o">&amp;&amp;</span><span class="nx">B</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">shapeArgs</span><span class="p">,{</span><span class="nx">height</span><span class="o">:</span><span class="mi">6</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">j</span><span class="o">-</span><span class="mi">3</span><span class="p">})})},</span><span class="nx">getSymbol</span><span class="o">:</span><span class="nx">pa</span><span class="p">,</span><span class="nx">drawLegendSymbol</span><span class="o">:</span><span class="nx">G</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">drawLegendSymbol</span><span class="p">,</span><span class="nx">drawGraph</span><span class="o">:</span><span class="nx">pa</span><span class="p">,</span><span class="nx">drawPoints</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">renderer</span><span class="p">,</span><span class="nx">d</span><span class="p">;</span><span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">points</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">plotY</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">graphic</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">!==</span><span class="nx">A</span><span class="o">&amp;&amp;!</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">y</span><span class="o">!==</span><span class="kc">null</span><span class="p">)</span><span class="nx">d</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">shapeArgs</span><span class="p">,</span><span class="nx">g</span><span class="o">?</span><span class="p">(</span><span class="nx">fb</span><span class="p">(</span><span class="nx">g</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">animate</span><span class="p">(</span><span class="nx">B</span><span class="p">(</span><span class="nx">d</span><span class="p">)))</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">graphic</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">e</span><span class="p">.</span><span class="nx">shapeType</span><span class="p">](</span><span class="nx">d</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">pointAttr</span><span class="p">[</span><span class="nx">e</span><span class="p">.</span><span class="nx">selected</span><span class="o">?</span><span class="s2">&quot;select&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">]).</span><span class="nx">add</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">group</span><span class="p">).</span><span class="nx">shadow</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">shadow</span><span class="p">,</span></div><div class='line' id='LC233'><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">stacking</span><span class="o">&amp;&amp;!</span><span class="nx">b</span><span class="p">.</span><span class="nx">borderRadius</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">graphic</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">destroy</span><span class="p">()})},</span><span class="nx">drawTracker</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">renderer</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=+</span><span class="k">new</span> <span class="nb">Date</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">cursor</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">{</span><span class="nx">cursor</span><span class="o">:</span><span class="nx">d</span><span class="p">},</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">isCartesian</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotGroup</span><span class="p">(</span><span class="s2">&quot;trackerGroup&quot;</span><span class="p">,</span><span class="kc">null</span><span class="p">,</span><span class="s2">&quot;visible&quot;</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">zIndex</span><span class="o">||</span><span class="mi">1</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">trackerGroup</span><span class="p">),</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">points</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">j</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">relatedTarget</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">fromElement</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">hoverSeries</span><span class="o">!==</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="s2">&quot;isTracker&quot;</span><span class="p">)</span><span class="o">!==</span><span class="nx">f</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">onMouseOver</span><span class="p">();</span><span class="nx">l</span><span class="p">[</span><span class="nx">c</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">_i</span><span class="p">].</span><span class="nx">onMouseOver</span><span class="p">()},</span><span class="nx">r</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">g</span><span class="p">.</span><span class="nx">stickyTracking</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">relatedTarget</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">toElement</span><span class="p">,</span></div><div class='line' id='LC234'><span class="nx">w</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="s2">&quot;isTracker&quot;</span><span class="p">)</span><span class="o">!==</span><span class="nx">f</span><span class="p">))</span><span class="nx">a</span><span class="p">.</span><span class="nx">onMouseOut</span><span class="p">()};</span><span class="nx">n</span><span class="o">--</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="o">=</span><span class="nx">l</span><span class="p">[</span><span class="nx">n</span><span class="p">],</span><span class="nx">e</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">tracker</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">trackerArgs</span><span class="o">||</span><span class="nx">m</span><span class="p">.</span><span class="nx">shapeArgs</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">m</span><span class="p">.</span><span class="nx">plotY</span><span class="p">,</span><span class="nx">k</span><span class="o">=!</span><span class="nx">a</span><span class="p">.</span><span class="nx">isCartesian</span><span class="o">||</span><span class="nx">k</span><span class="o">!==</span><span class="nx">A</span><span class="o">&amp;&amp;!</span><span class="nb">isNaN</span><span class="p">(</span><span class="nx">k</span><span class="p">),</span><span class="k">delete</span> <span class="nx">d</span><span class="p">.</span><span class="nx">strokeWidth</span><span class="p">,</span><span class="nx">m</span><span class="p">.</span><span class="nx">y</span><span class="o">!==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">tracker</span><span class="o">=</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">m</span><span class="p">.</span><span class="nx">shapeType</span><span class="p">](</span><span class="nx">d</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">isTracker</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">fill</span><span class="o">:</span><span class="nx">vb</span><span class="p">,</span><span class="nx">visibility</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">visible</span><span class="o">?</span><span class="s2">&quot;visible&quot;</span><span class="o">:</span><span class="s2">&quot;hidden&quot;</span><span class="p">}).</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;mouseover&quot;</span><span class="p">,</span><span class="nx">o</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;mouseout&quot;</span><span class="p">,</span><span class="nx">r</span><span class="p">).</span><span class="nx">css</span><span class="p">(</span><span class="nx">h</span><span class="p">).</span><span class="nx">add</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">group</span><span class="o">||</span><span class="nx">i</span><span class="p">),</span><span class="nx">Ba</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;touchstart&quot;</span><span class="p">,</span><span class="nx">o</span><span class="p">);</span><span class="nx">e</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">_i</span><span class="o">=</span><span class="nx">n</span><span class="p">}},</span><span class="nx">alignDataLabel</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">inverted</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">below</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">plotY</span><span class="o">&gt;</span><span class="nx">n</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">translatedThreshold</span><span class="p">,</span></div><div class='line' id='LC235'><span class="nx">f</span><span class="p">.</span><span class="nx">plotSizeY</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">stacking</span><span class="o">||</span><span class="nx">c</span><span class="p">.</span><span class="nx">inside</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">shapeArgs</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">shapeArgs</span><span class="p">),</span><span class="nx">g</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">plotWidth</span><span class="o">-</span><span class="nx">d</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">plotHeight</span><span class="o">-</span><span class="nx">d</span><span class="p">.</span><span class="nx">x</span><span class="o">-</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">width</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">height</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="p">}),</span><span class="o">!</span><span class="nx">i</span><span class="p">))</span><span class="nx">g</span><span class="o">?</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">x</span><span class="o">+=</span><span class="nx">h</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">y</span><span class="o">+=</span><span class="nx">h</span><span class="o">?</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="mi">0</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">align</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">align</span><span class="p">,</span><span class="o">!</span><span class="nx">g</span><span class="o">||</span><span class="nx">i</span><span class="o">?</span><span class="s2">&quot;center&quot;</span><span class="o">:</span><span class="nx">h</span><span class="o">?</span><span class="s2">&quot;right&quot;</span><span class="o">:</span><span class="s2">&quot;left&quot;</span><span class="p">);</span><span class="nx">c</span><span class="p">.</span><span class="nx">verticalAlign</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">verticalAlign</span><span class="p">,</span><span class="nx">g</span><span class="o">||</span><span class="nx">i</span><span class="o">?</span><span class="s2">&quot;middle&quot;</span><span class="o">:</span><span class="nx">h</span><span class="o">?</span><span class="s2">&quot;top&quot;</span><span class="o">:</span><span class="s2">&quot;bottom&quot;</span><span class="p">);</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">alignDataLabel</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">)},</span><span class="nx">animate</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">points</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">)</span><span class="nx">o</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">graphic</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">shapeArgs</span><span class="p">,</span></div><div class='line' id='LC236'><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">yAxis</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">threshold</span><span class="p">;</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">height</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">r</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">?</span><span class="nx">g</span><span class="p">.</span><span class="nx">getThreshold</span><span class="p">(</span><span class="nx">h</span><span class="p">)</span><span class="o">:</span><span class="nx">g</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">getExtremes</span><span class="p">().</span><span class="nx">min</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="mi">1</span><span class="p">)}),</span><span class="nx">c</span><span class="p">.</span><span class="nx">animate</span><span class="p">({</span><span class="nx">height</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">height</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="p">},</span><span class="nx">d</span><span class="p">.</span><span class="nx">animation</span><span class="p">))}),</span><span class="nx">b</span><span class="p">.</span><span class="nx">animate</span><span class="o">=</span><span class="kc">null</span><span class="p">},</span><span class="nx">remove</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">chart</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">hasRendered</span><span class="o">&amp;&amp;</span><span class="nx">o</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">type</span><span class="o">===</span><span class="nx">a</span><span class="p">.</span><span class="nx">type</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">isDirty</span><span class="o">=!</span><span class="mi">0</span><span class="p">});</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">remove</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">arguments</span><span class="p">)}});</span><span class="nx">$</span><span class="p">.</span><span class="nx">column</span><span class="o">=</span><span class="nx">fa</span><span class="p">;</span><span class="nx">X</span><span class="p">.</span><span class="nx">bar</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="nx">X</span><span class="p">.</span><span class="nx">column</span><span class="p">);</span><span class="nx">Ca</span><span class="o">=</span><span class="nx">ba</span><span class="p">(</span><span class="nx">fa</span><span class="p">,{</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;bar&quot;</span><span class="p">,</span><span class="nx">inverted</span><span class="o">:!</span><span class="mi">0</span><span class="p">});</span><span class="nx">$</span><span class="p">.</span><span class="nx">bar</span><span class="o">=</span><span class="nx">Ca</span><span class="p">;</span><span class="nx">X</span><span class="p">.</span><span class="nx">scatter</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="nx">ea</span><span class="p">,{</span><span class="nx">lineWidth</span><span class="o">:</span><span class="mi">0</span><span class="p">,</span><span class="nx">states</span><span class="o">:</span><span class="p">{</span><span class="nx">hover</span><span class="o">:</span><span class="p">{</span><span class="nx">lineWidth</span><span class="o">:</span><span class="mi">0</span><span class="p">}},</span><span class="nx">tooltip</span><span class="o">:</span><span class="p">{</span><span class="nx">headerFormat</span><span class="o">:</span><span class="s1">&#39;&lt;span style=&quot;font-size: 10px; color:{series.color}&quot;&gt;{series.name}&lt;/span&gt;&lt;br/&gt;&#39;</span><span class="p">,</span></div><div class='line' id='LC237'><span class="nx">pointFormat</span><span class="o">:</span><span class="s2">&quot;x: &lt;b&gt;{point.x}&lt;/b&gt;&lt;br/&gt;y: &lt;b&gt;{point.y}&lt;/b&gt;&lt;br/&gt;&quot;</span><span class="p">}});</span><span class="nx">Ca</span><span class="o">=</span><span class="nx">ba</span><span class="p">(</span><span class="nx">P</span><span class="p">,{</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;scatter&quot;</span><span class="p">,</span><span class="nx">sorted</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">requireSorting</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">translate</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">translate</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">points</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">shapeType</span><span class="o">=</span><span class="s2">&quot;circle&quot;</span><span class="p">;</span><span class="nx">b</span><span class="p">.</span><span class="nx">shapeArgs</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">plotX</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">plotY</span><span class="p">,</span><span class="nx">r</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">tooltip</span><span class="p">.</span><span class="nx">snap</span><span class="p">}})},</span><span class="nx">drawTracker</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">cursor</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">{</span><span class="nx">cursor</span><span class="o">:</span><span class="nx">b</span><span class="p">},</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">points</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">markerGroup</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">onMouseOver</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">_i</span><span class="o">!==</span><span class="nx">A</span><span class="p">)</span><span class="nx">c</span><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">target</span><span class="p">.</span><span class="nx">_i</span><span class="p">].</span><span class="nx">onMouseOver</span><span class="p">()};</span><span class="nx">d</span><span class="o">--</span><span class="p">;)</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">].</span><span class="nx">graphic</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">element</span><span class="p">.</span><span class="nx">_i</span><span class="o">=</span></div><div class='line' id='LC238'><span class="nx">d</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">_hasTracking</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">_hasTracking</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">isTracker</span><span class="o">:!</span><span class="mi">0</span><span class="p">}).</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;mouseover&quot;</span><span class="p">,</span><span class="nx">g</span><span class="p">).</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;mouseout&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">stickyTracking</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">onMouseOut</span><span class="p">()}).</span><span class="nx">css</span><span class="p">(</span><span class="nx">b</span><span class="p">),</span><span class="nx">Ba</span><span class="p">)</span><span class="nx">f</span><span class="p">.</span><span class="nx">on</span><span class="p">(</span><span class="s2">&quot;touchstart&quot;</span><span class="p">,</span><span class="nx">g</span><span class="p">)},</span><span class="nx">setTooltipPoints</span><span class="o">:</span><span class="nx">pa</span><span class="p">});</span><span class="nx">$</span><span class="p">.</span><span class="nx">scatter</span><span class="o">=</span><span class="nx">Ca</span><span class="p">;</span><span class="nx">X</span><span class="p">.</span><span class="nx">pie</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="nx">ea</span><span class="p">,{</span><span class="nx">borderColor</span><span class="o">:</span><span class="s2">&quot;#FFFFFF&quot;</span><span class="p">,</span><span class="nx">borderWidth</span><span class="o">:</span><span class="mi">1</span><span class="p">,</span><span class="nx">center</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;50%&quot;</span><span class="p">,</span><span class="s2">&quot;50%&quot;</span><span class="p">],</span><span class="nx">colorByPoint</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">dataLabels</span><span class="o">:</span><span class="p">{</span><span class="nx">distance</span><span class="o">:</span><span class="mi">30</span><span class="p">,</span><span class="nx">enabled</span><span class="o">:!</span><span class="mi">0</span><span class="p">,</span><span class="nx">formatter</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="k">this</span><span class="p">.</span><span class="nx">point</span><span class="p">.</span><span class="nx">name</span><span class="p">}},</span><span class="nx">legendType</span><span class="o">:</span><span class="s2">&quot;point&quot;</span><span class="p">,</span><span class="nx">marker</span><span class="o">:</span><span class="kc">null</span><span class="p">,</span><span class="nx">size</span><span class="o">:</span><span class="s2">&quot;75%&quot;</span><span class="p">,</span><span class="nx">showInLegend</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">slicedOffset</span><span class="o">:</span><span class="mi">10</span><span class="p">,</span><span class="nx">states</span><span class="o">:</span><span class="p">{</span><span class="nx">hover</span><span class="o">:</span><span class="p">{</span><span class="nx">brightness</span><span class="o">:</span><span class="mf">0.1</span><span class="p">,</span><span class="nx">shadow</span><span class="o">:!</span><span class="mi">1</span><span class="p">}}});</span></div><div class='line' id='LC239'><span class="nx">pa</span><span class="o">=</span><span class="p">{</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;pie&quot;</span><span class="p">,</span><span class="nx">isCartesian</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">pointClass</span><span class="o">:</span><span class="nx">ba</span><span class="p">(</span><span class="nx">Ua</span><span class="p">,{</span><span class="nx">init</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="nx">Ua</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">init</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">arguments</span><span class="p">);</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">;</span><span class="nx">x</span><span class="p">(</span><span class="nx">a</span><span class="p">,{</span><span class="nx">visible</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">visible</span><span class="o">!==!</span><span class="mi">1</span><span class="p">,</span><span class="nx">name</span><span class="o">:</span><span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">name</span><span class="p">,</span><span class="s2">&quot;Slice&quot;</span><span class="p">)});</span><span class="nx">b</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">a</span><span class="p">.</span><span class="nx">slice</span><span class="p">()};</span><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;select&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;unselect&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">},</span><span class="nx">setVisible</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">series</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">tracker</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">dataLabel</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">connector</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">shadowGroup</span><span class="p">,</span><span class="nx">h</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">visible</span><span class="o">=</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="o">===</span><span class="nx">A</span><span class="o">?!</span><span class="k">this</span><span class="p">.</span><span class="nx">visible</span><span class="o">:</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="s2">&quot;show&quot;</span><span class="o">:</span><span class="s2">&quot;hide&quot;</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">group</span><span class="p">[</span><span class="nx">h</span><span class="p">]();</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="nx">d</span><span class="p">[</span><span class="nx">h</span><span class="p">]();</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="nx">e</span><span class="p">[</span><span class="nx">h</span><span class="p">]();</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="nx">f</span><span class="p">[</span><span class="nx">h</span><span class="p">]();</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="nx">g</span><span class="p">[</span><span class="nx">h</span><span class="p">]();</span><span class="k">this</span><span class="p">.</span><span class="nx">legendItem</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">.</span><span class="nx">legend</span><span class="p">.</span><span class="nx">colorizeItem</span><span class="p">(</span><span class="k">this</span><span class="p">,</span></div><div class='line' id='LC240'><span class="nx">a</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">b</span><span class="p">.</span><span class="nx">isDirty</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">ignoreHiddenPoint</span><span class="p">)</span><span class="nx">b</span><span class="p">.</span><span class="nx">isDirty</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">redraw</span><span class="p">()},</span><span class="nx">slice</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">series</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">slicedTranslation</span><span class="p">;</span><span class="nx">xa</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">);</span><span class="nx">n</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">);</span><span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">sliced</span><span class="o">=</span><span class="nx">r</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">a</span><span class="o">:!</span><span class="k">this</span><span class="p">.</span><span class="nx">sliced</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">translateX</span><span class="o">:</span><span class="nx">a</span><span class="o">?</span><span class="nx">e</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">plotLeft</span><span class="p">,</span><span class="nx">translateY</span><span class="o">:</span><span class="nx">a</span><span class="o">?</span><span class="nx">e</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">plotTop</span><span class="p">};</span><span class="k">this</span><span class="p">.</span><span class="nx">group</span><span class="p">.</span><span class="nx">animate</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">shadowGroup</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">shadowGroup</span><span class="p">.</span><span class="nx">animate</span><span class="p">(</span><span class="nx">a</span><span class="p">)}}),</span><span class="nx">requireSorting</span><span class="o">:!</span><span class="mi">1</span><span class="p">,</span><span class="nx">pointAttrToOptions</span><span class="o">:</span><span class="p">{</span><span class="nx">stroke</span><span class="o">:</span><span class="s2">&quot;borderColor&quot;</span><span class="p">,</span><span class="s2">&quot;stroke-width&quot;</span><span class="o">:</span><span class="s2">&quot;borderWidth&quot;</span><span class="p">,</span><span class="nx">fill</span><span class="o">:</span><span class="s2">&quot;color&quot;</span><span class="p">},</span><span class="nx">getColor</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">initialColor</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">counters</span><span class="p">.</span><span class="nx">color</span><span class="p">},</span><span class="nx">animate</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span></div><div class='line' id='LC241'><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">startAngleRad</span><span class="p">;</span><span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">points</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">graphic</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">shapeArgs</span><span class="p">;</span><span class="nx">d</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">r</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">center</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">start</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="nx">end</span><span class="o">:</span><span class="nx">b</span><span class="p">}),</span><span class="nx">d</span><span class="p">.</span><span class="nx">animate</span><span class="p">({</span><span class="nx">r</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">r</span><span class="p">,</span><span class="nx">start</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">start</span><span class="p">,</span><span class="nx">end</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">end</span><span class="p">},</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">animation</span><span class="p">))});</span><span class="nx">a</span><span class="p">.</span><span class="nx">animate</span><span class="o">=</span><span class="kc">null</span><span class="p">},</span><span class="nx">setData</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">setData</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="o">!</span><span class="mi">1</span><span class="p">);</span><span class="k">this</span><span class="p">.</span><span class="nx">processData</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">generatePoints</span><span class="p">();</span><span class="nx">n</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">redraw</span><span class="p">()},</span><span class="nx">getCenter</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">plotWidth</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">plotHeight</span><span class="p">,</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">center</span><span class="p">.</span><span class="nx">concat</span><span class="p">([</span><span class="nx">a</span><span class="p">.</span><span class="nx">size</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">innerSize</span><span class="o">||</span><span class="mi">0</span><span class="p">]),</span><span class="nx">e</span><span class="o">=</span><span class="nx">O</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">),</span><span class="nx">f</span><span class="p">;</span><span class="k">return</span> <span class="nx">Ta</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span></div><div class='line' id='LC242'><span class="sr">/%$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="o">?</span><span class="p">[</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">e</span><span class="p">][</span><span class="nx">b</span><span class="p">]</span><span class="o">*</span><span class="nx">z</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">/</span><span class="mi">100</span><span class="o">:</span><span class="nx">a</span><span class="p">})},</span><span class="nx">translate</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">generatePoints</span><span class="p">();</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">slicedOffset</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="o">+</span><span class="nx">c</span><span class="p">.</span><span class="nx">borderWidth</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">startAngleRad</span><span class="o">=</span><span class="nx">Aa</span><span class="o">/</span><span class="mi">180</span><span class="o">*</span><span class="p">((</span><span class="nx">c</span><span class="p">.</span><span class="nx">startAngle</span><span class="o">||</span><span class="mi">0</span><span class="p">)</span><span class="o">%</span><span class="mi">360</span><span class="o">-</span><span class="mi">90</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">points</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="mi">2</span><span class="o">*</span><span class="nx">Aa</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">dataLabels</span><span class="p">.</span><span class="nx">distance</span><span class="p">,</span><span class="nx">o</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">ignoreHiddenPoint</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">s</span><span class="p">;</span><span class="k">this</span><span class="p">.</span><span class="nx">center</span><span class="o">=</span><span class="nx">f</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">getCenter</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">getX</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">j</span><span class="o">=</span><span class="nx">K</span><span class="p">.</span><span class="nx">asin</span><span class="p">((</span><span class="nx">a</span><span class="o">-</span><span class="nx">f</span><span class="p">[</span><span class="mi">1</span><span class="p">])</span><span class="o">/</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="nx">n</span><span class="p">));</span><span class="k">return</span> <span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="nx">W</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">/</span><span class="mi">2</span><span class="o">+</span><span class="nx">n</span><span class="p">)};</span><span class="k">for</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">r</span><span class="o">&lt;</span><span class="nx">t</span><span class="p">;</span><span class="nx">r</span><span class="o">++</span><span class="p">)</span><span class="nx">s</span><span class="o">=</span><span class="nx">l</span><span class="p">[</span><span class="nx">r</span><span class="p">],</span><span class="nx">a</span><span class="o">+=</span><span class="nx">o</span><span class="o">&amp;&amp;!</span><span class="nx">s</span><span class="p">.</span><span class="nx">visible</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nx">y</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">r</span><span class="o">&lt;</span><span class="nx">t</span><span class="p">;</span><span class="nx">r</span><span class="o">++</span><span class="p">){</span><span class="nx">s</span><span class="o">=</span><span class="nx">l</span><span class="p">[</span><span class="nx">r</span><span class="p">];</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="o">?</span></div><div class='line' id='LC243'><span class="nx">s</span><span class="p">.</span><span class="nx">y</span><span class="o">/</span><span class="nx">a</span><span class="o">:</span><span class="mi">0</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="nx">u</span><span class="p">((</span><span class="nx">k</span><span class="o">+</span><span class="nx">b</span><span class="o">*</span><span class="nx">m</span><span class="p">)</span><span class="o">*</span><span class="mi">1</span><span class="nx">E3</span><span class="p">)</span><span class="o">/</span><span class="mi">1</span><span class="nx">E3</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">o</span><span class="o">||</span><span class="nx">s</span><span class="p">.</span><span class="nx">visible</span><span class="p">)</span><span class="nx">b</span><span class="o">+=</span><span class="nx">c</span><span class="p">;</span><span class="nx">i</span><span class="o">=</span><span class="nx">u</span><span class="p">((</span><span class="nx">k</span><span class="o">+</span><span class="nx">b</span><span class="o">*</span><span class="nx">m</span><span class="p">)</span><span class="o">*</span><span class="mi">1</span><span class="nx">E3</span><span class="p">)</span><span class="o">/</span><span class="mi">1</span><span class="nx">E3</span><span class="p">;</span><span class="nx">s</span><span class="p">.</span><span class="nx">shapeType</span><span class="o">=</span><span class="s2">&quot;arc&quot;</span><span class="p">;</span><span class="nx">s</span><span class="p">.</span><span class="nx">shapeArgs</span><span class="o">=</span><span class="p">{</span><span class="nx">x</span><span class="o">:</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">y</span><span class="o">:</span><span class="nx">f</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">r</span><span class="o">:</span><span class="nx">f</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">innerR</span><span class="o">:</span><span class="nx">f</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">start</span><span class="o">:</span><span class="nx">h</span><span class="p">,</span><span class="nx">end</span><span class="o">:</span><span class="nx">i</span><span class="p">};</span><span class="nx">j</span><span class="o">=</span><span class="p">(</span><span class="nx">i</span><span class="o">+</span><span class="nx">h</span><span class="p">)</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span><span class="nx">j</span><span class="o">&gt;</span><span class="mf">0.75</span><span class="o">*</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">j</span><span class="o">-=</span><span class="mi">2</span><span class="o">*</span><span class="nx">Aa</span><span class="p">);</span><span class="nx">s</span><span class="p">.</span><span class="nx">slicedTranslation</span><span class="o">=</span><span class="nx">Ta</span><span class="p">([</span><span class="nx">W</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">*</span><span class="nx">d</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">plotLeft</span><span class="p">,</span><span class="nx">Z</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">*</span><span class="nx">d</span><span class="o">+</span><span class="nx">g</span><span class="p">.</span><span class="nx">plotTop</span><span class="p">],</span><span class="nx">u</span><span class="p">);</span><span class="nx">h</span><span class="o">=</span><span class="nx">W</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">*</span><span class="nx">f</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span><span class="nx">i</span><span class="o">=</span><span class="nx">Z</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">*</span><span class="nx">f</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">/</span><span class="mi">2</span><span class="p">;</span><span class="nx">s</span><span class="p">.</span><span class="nx">tooltipPos</span><span class="o">=</span><span class="p">[</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="nx">h</span><span class="o">*</span><span class="mf">0.7</span><span class="p">,</span><span class="nx">f</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">i</span><span class="o">*</span><span class="mf">0.7</span><span class="p">];</span><span class="nx">s</span><span class="p">.</span><span class="nx">half</span><span class="o">=</span><span class="nx">j</span><span class="o">&lt;</span><span class="nx">m</span><span class="o">/</span><span class="mi">4</span><span class="o">?</span><span class="mi">0</span><span class="o">:</span><span class="mi">1</span><span class="p">;</span><span class="nx">s</span><span class="p">.</span><span class="nx">angle</span><span class="o">=</span><span class="nx">j</span><span class="p">;</span><span class="nx">s</span><span class="p">.</span><span class="nx">labelPos</span><span class="o">=</span><span class="p">[</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="nx">h</span><span class="o">+</span><span class="nx">W</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">*</span><span class="nx">n</span><span class="p">,</span><span class="nx">f</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="nx">Z</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">*</span><span class="nx">n</span><span class="p">,</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="nx">h</span><span class="o">+</span><span class="nx">W</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">*</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">i</span><span class="o">+</span><span class="nx">Z</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">*</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="nx">h</span><span class="p">,</span><span class="nx">f</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">+</span><span class="nx">i</span><span class="p">,</span><span class="nx">n</span><span class="o">&lt;</span><span class="mi">0</span><span class="o">?</span><span class="s2">&quot;center&quot;</span><span class="o">:</span><span class="nx">s</span><span class="p">.</span><span class="nx">half</span><span class="o">?</span><span class="s2">&quot;right&quot;</span><span class="o">:</span><span class="s2">&quot;left&quot;</span><span class="p">,</span><span class="nx">j</span><span class="p">];</span><span class="nx">s</span><span class="p">.</span><span class="nx">percentage</span><span class="o">=</span><span class="nx">c</span><span class="o">*</span><span class="mi">100</span><span class="p">;</span><span class="nx">s</span><span class="p">.</span><span class="nx">total</span><span class="o">=</span><span class="nx">a</span><span class="p">}</span><span class="k">this</span><span class="p">.</span><span class="nx">setTooltipPoints</span><span class="p">()},</span></div><div class='line' id='LC244'><span class="nx">render</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">this</span><span class="p">.</span><span class="nx">getAttribs</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">drawPoints</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">enableMouseTracking</span><span class="o">!==!</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">drawTracker</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">drawDataLabels</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">animation</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">animate</span><span class="o">&amp;&amp;</span><span class="k">this</span><span class="p">.</span><span class="nx">animate</span><span class="p">();</span><span class="k">this</span><span class="p">.</span><span class="nx">isDirty</span><span class="o">=!</span><span class="mi">1</span><span class="p">},</span><span class="nx">drawPoints</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">renderer</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">shadow</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">;</span><span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">points</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">graphic</span><span class="p">;</span><span class="nx">i</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">shapeArgs</span><span class="p">;</span><span class="nx">f</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">group</span><span class="p">;</span><span class="nx">h</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">shadowGroup</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">g</span><span class="o">&amp;&amp;!</span><span class="nx">h</span><span class="p">)</span><span class="nx">h</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">shadowGroup</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;shadow&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">zIndex</span><span class="o">:</span><span class="mi">4</span><span class="p">}).</span><span class="nx">add</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">f</span><span class="p">)</span><span class="nx">f</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">group</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">g</span><span class="p">(</span><span class="s2">&quot;point&quot;</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="nx">zIndex</span><span class="o">:</span><span class="mi">5</span><span class="p">}).</span><span class="nx">add</span><span class="p">();</span><span class="nx">d</span><span class="o">=</span><span class="nx">j</span><span class="p">.</span><span class="nx">sliced</span><span class="o">?</span><span class="nx">j</span><span class="p">.</span><span class="nx">slicedTranslation</span><span class="o">:</span></div><div class='line' id='LC245'><span class="p">[</span><span class="nx">b</span><span class="p">.</span><span class="nx">plotLeft</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">plotTop</span><span class="p">];</span><span class="nx">f</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span><span class="nx">h</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">translate</span><span class="p">(</span><span class="nx">d</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span><span class="nx">d</span><span class="p">[</span><span class="mi">1</span><span class="p">]);</span><span class="nx">e</span><span class="o">?</span><span class="nx">e</span><span class="p">.</span><span class="nx">animate</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span><span class="o">:</span><span class="nx">j</span><span class="p">.</span><span class="nx">graphic</span><span class="o">=</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">arc</span><span class="p">(</span><span class="nx">i</span><span class="p">).</span><span class="nx">setRadialReference</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">center</span><span class="p">).</span><span class="nx">attr</span><span class="p">(</span><span class="nx">x</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">pointAttr</span><span class="p">[</span><span class="s2">&quot;&quot;</span><span class="p">],{</span><span class="s2">&quot;stroke-linejoin&quot;</span><span class="o">:</span><span class="s2">&quot;round&quot;</span><span class="p">})).</span><span class="nx">add</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">group</span><span class="p">).</span><span class="nx">shadow</span><span class="p">(</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="nx">j</span><span class="p">.</span><span class="nx">visible</span><span class="o">===!</span><span class="mi">1</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">.</span><span class="nx">setVisible</span><span class="p">(</span><span class="o">!</span><span class="mi">1</span><span class="p">)})},</span><span class="nx">drawDataLabels</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">data</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">,</span><span class="nx">d</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">options</span><span class="p">.</span><span class="nx">dataLabels</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">connectorPadding</span><span class="p">,</span><span class="mi">10</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">connectorWidth</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">n</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">softConnector</span><span class="p">,</span><span class="o">!</span><span class="mi">0</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">distance</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">center</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">/</span><span class="mi">2</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">k</span><span class="p">[</span><span class="mi">1</span><span class="p">],</span><span class="nx">q</span><span class="o">=</span><span class="nx">j</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="p">[[],[]],</span><span class="nx">r</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="nx">s</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span><span class="nx">v</span><span class="p">,</span><span class="nx">x</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span></div><div class='line' id='LC246'><span class="nx">a</span><span class="p">.</span><span class="nx">y</span><span class="p">},</span><span class="nx">z</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">angle</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">angle</span><span class="p">)</span><span class="o">*</span><span class="nx">b</span><span class="p">})};</span><span class="k">if</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">enabled</span><span class="o">||</span><span class="k">this</span><span class="p">.</span><span class="nx">_hasPointLabels</span><span class="p">){</span><span class="nx">P</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">drawDataLabels</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">);</span><span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="p">.</span><span class="nx">dataLabel</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">half</span><span class="p">].</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">)});</span><span class="k">for</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">p</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="nx">p</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataLabel</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">p</span><span class="p">[</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">].</span><span class="nx">dataLabel</span><span class="p">.</span><span class="nx">getBBox</span><span class="p">().</span><span class="nx">height</span><span class="o">||</span><span class="mi">21</span><span class="p">);</span><span class="nx">u</span><span class="o">--</span><span class="p">;){</span><span class="kd">var</span> <span class="nx">w</span><span class="o">=</span><span class="p">[],</span><span class="nx">A</span><span class="o">=</span><span class="p">[],</span><span class="nx">B</span><span class="o">=</span><span class="nx">p</span><span class="p">[</span><span class="nx">u</span><span class="p">],</span><span class="nx">C</span><span class="o">=</span><span class="nx">B</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">D</span><span class="p">;</span><span class="nx">z</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="nx">u</span><span class="o">-</span><span class="mf">0.5</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="nx">v</span><span class="o">=</span><span class="nx">m</span><span class="o">-</span><span class="nx">l</span><span class="o">-</span><span class="nx">j</span><span class="p">;</span><span class="nx">v</span><span class="o">&lt;=</span><span class="nx">m</span><span class="o">+</span><span class="nx">l</span><span class="o">+</span><span class="nx">j</span><span class="p">;</span><span class="nx">v</span><span class="o">+=</span><span class="nx">a</span><span class="p">)</span><span class="nx">w</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">v</span><span class="p">);</span><span class="nx">s</span><span class="o">=</span><span class="nx">w</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">C</span><span class="o">&gt;</span><span class="nx">s</span><span class="p">){</span><span class="nx">h</span><span class="o">=</span><span class="p">[].</span><span class="nx">concat</span><span class="p">(</span><span class="nx">B</span><span class="p">);</span><span class="nx">h</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="nx">x</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="nx">v</span><span class="o">=</span><span class="nx">C</span><span class="p">;</span><span class="nx">v</span><span class="o">--</span><span class="p">;)</span><span class="nx">h</span><span class="p">[</span><span class="nx">v</span><span class="p">].</span><span class="nx">rank</span><span class="o">=</span><span class="nx">v</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">v</span><span class="o">=</span><span class="nx">C</span><span class="p">;</span><span class="nx">v</span><span class="o">--</span><span class="p">;)</span><span class="nx">B</span><span class="p">[</span><span class="nx">v</span><span class="p">].</span><span class="nx">rank</span><span class="o">&gt;=</span><span class="nx">s</span><span class="o">&amp;&amp;</span><span class="nx">B</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">v</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span><span class="nx">C</span><span class="o">=</span><span class="nx">B</span><span class="p">.</span><span class="nx">length</span><span class="p">}</span><span class="k">for</span><span class="p">(</span><span class="nx">v</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">v</span><span class="o">&lt;</span><span class="nx">C</span><span class="p">;</span><span class="nx">v</span><span class="o">++</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span></div><div class='line' id='LC247'><span class="nx">B</span><span class="p">[</span><span class="nx">v</span><span class="p">];</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">labelPos</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="mi">9999</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">t</span><span class="o">&lt;</span><span class="nx">s</span><span class="p">;</span><span class="nx">t</span><span class="o">++</span><span class="p">)</span><span class="nx">g</span><span class="o">=</span><span class="nx">M</span><span class="p">(</span><span class="nx">w</span><span class="p">[</span><span class="nx">t</span><span class="p">]</span><span class="o">-</span><span class="nx">h</span><span class="p">[</span><span class="mi">1</span><span class="p">]),</span><span class="nx">g</span><span class="o">&lt;</span><span class="nx">b</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="nx">g</span><span class="p">,</span><span class="nx">D</span><span class="o">=</span><span class="nx">t</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">D</span><span class="o">&lt;</span><span class="nx">v</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="p">[</span><span class="nx">v</span><span class="p">]</span><span class="o">!==</span><span class="kc">null</span><span class="p">)</span><span class="nx">D</span><span class="o">=</span><span class="nx">v</span><span class="p">;</span><span class="k">else</span> <span class="k">for</span><span class="p">(</span><span class="nx">s</span><span class="o">&lt;</span><span class="nx">C</span><span class="o">-</span><span class="nx">v</span><span class="o">+</span><span class="nx">D</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="p">[</span><span class="nx">v</span><span class="p">]</span><span class="o">!==</span><span class="kc">null</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">D</span><span class="o">=</span><span class="nx">s</span><span class="o">-</span><span class="nx">C</span><span class="o">+</span><span class="nx">v</span><span class="p">);</span><span class="nx">w</span><span class="p">[</span><span class="nx">D</span><span class="p">]</span><span class="o">===</span><span class="kc">null</span><span class="p">;)</span><span class="nx">D</span><span class="o">++</span><span class="p">;</span><span class="nx">A</span><span class="p">.</span><span class="nx">push</span><span class="p">({</span><span class="nx">i</span><span class="o">:</span><span class="nx">D</span><span class="p">,</span><span class="nx">y</span><span class="o">:</span><span class="nx">w</span><span class="p">[</span><span class="nx">D</span><span class="p">]});</span><span class="nx">w</span><span class="p">[</span><span class="nx">D</span><span class="p">]</span><span class="o">=</span><span class="kc">null</span><span class="p">}</span><span class="nx">A</span><span class="p">.</span><span class="nx">sort</span><span class="p">(</span><span class="nx">x</span><span class="p">)}</span><span class="k">for</span><span class="p">(</span><span class="nx">v</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">v</span><span class="o">&lt;</span><span class="nx">C</span><span class="p">;</span><span class="nx">v</span><span class="o">++</span><span class="p">){</span><span class="nx">b</span><span class="o">=</span><span class="nx">B</span><span class="p">[</span><span class="nx">v</span><span class="p">];</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">labelPos</span><span class="p">;</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">dataLabel</span><span class="p">;</span><span class="nx">s</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">visible</span><span class="o">===!</span><span class="mi">1</span><span class="o">?</span><span class="s2">&quot;hidden&quot;</span><span class="o">:</span><span class="s2">&quot;visible&quot;</span><span class="p">;</span><span class="nx">r</span><span class="o">=</span><span class="nx">h</span><span class="p">[</span><span class="mi">1</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="o">&gt;</span><span class="mi">0</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">t</span><span class="o">=</span><span class="nx">A</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">D</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">i</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">t</span><span class="p">.</span><span class="nx">y</span><span class="p">,</span><span class="nx">r</span><span class="o">&gt;</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="p">[</span><span class="nx">D</span><span class="o">+</span><span class="mi">1</span><span class="p">]</span><span class="o">!==</span><span class="kc">null</span><span class="o">||</span><span class="nx">r</span><span class="o">&lt;</span><span class="nx">t</span><span class="o">&amp;&amp;</span><span class="nx">w</span><span class="p">[</span><span class="nx">D</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">!==</span><span class="kc">null</span><span class="p">)</span><span class="nx">t</span><span class="o">=</span><span class="nx">r</span><span class="p">}</span><span class="k">else</span> <span class="nx">t</span><span class="o">=</span><span class="nx">r</span><span class="p">;</span><span class="nx">r</span><span class="o">=</span><span class="nx">d</span><span class="p">.</span><span class="nx">justify</span><span class="o">?</span><span class="nx">k</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">+</span><span class="p">(</span><span class="nx">u</span><span class="o">?-</span><span class="mi">1</span><span class="o">:</span><span class="mi">1</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="nx">l</span><span class="o">+</span><span class="nx">j</span><span class="p">)</span><span class="o">:</span><span class="k">this</span><span class="p">.</span><span class="nx">getX</span><span class="p">(</span><span class="nx">D</span><span class="o">===</span><span class="mi">0</span><span class="o">||</span><span class="nx">D</span><span class="o">===</span><span class="nx">w</span><span class="p">.</span><span class="nx">length</span><span class="o">-</span><span class="mi">1</span><span class="o">?</span><span class="nx">r</span><span class="o">:</span><span class="nx">t</span><span class="p">,</span><span class="nx">u</span><span class="p">);</span><span class="nx">g</span><span class="p">.</span><span class="nx">attr</span><span class="p">({</span><span class="nx">visibility</span><span class="o">:</span><span class="nx">s</span><span class="p">,</span><span class="nx">align</span><span class="o">:</span><span class="nx">h</span><span class="p">[</span><span class="mi">6</span><span class="p">]})[</span><span class="nx">g</span><span class="p">.</span><span class="nx">moved</span><span class="o">?</span><span class="s2">&quot;animate&quot;</span><span class="o">:</span><span class="s2">&quot;attr&quot;</span><span class="p">]({</span><span class="nx">x</span><span class="o">:</span><span class="nx">r</span><span class="o">+</span></div><div class='line' id='LC248'><span class="nx">d</span><span class="p">.</span><span class="nx">x</span><span class="o">+</span><span class="p">({</span><span class="nx">left</span><span class="o">:</span><span class="nx">e</span><span class="p">,</span><span class="nx">right</span><span class="o">:-</span><span class="nx">e</span><span class="p">}[</span><span class="nx">h</span><span class="p">[</span><span class="mi">6</span><span class="p">]]</span><span class="o">||</span><span class="mi">0</span><span class="p">),</span><span class="nx">y</span><span class="o">:</span><span class="nx">t</span><span class="o">+</span><span class="nx">d</span><span class="p">.</span><span class="nx">y</span><span class="o">-</span><span class="mi">10</span><span class="p">});</span><span class="nx">g</span><span class="p">.</span><span class="nx">moved</span><span class="o">=!</span><span class="mi">0</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">)</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">connector</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="nx">i</span><span class="o">?</span><span class="p">[</span><span class="s2">&quot;M&quot;</span><span class="p">,</span><span class="nx">r</span><span class="o">+</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;left&quot;</span><span class="o">?</span><span class="mi">5</span><span class="o">:-</span><span class="mi">5</span><span class="p">),</span><span class="nx">t</span><span class="p">,</span><span class="s2">&quot;C&quot;</span><span class="p">,</span><span class="nx">r</span><span class="p">,</span><span class="nx">t</span><span class="p">,</span><span class="mi">2</span><span class="o">*</span><span class="nx">h</span><span class="p">[</span><span class="mi">2</span><span class="p">]</span><span class="o">-</span><span class="nx">h</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="mi">2</span><span class="o">*</span><span class="nx">h</span><span class="p">[</span><span class="mi">3</span><span class="p">]</span><span class="o">-</span><span class="nx">h</span><span class="p">[</span><span class="mi">5</span><span class="p">],</span><span class="nx">h</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">h</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="s2">&quot;L&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="nx">h</span><span class="p">[</span><span class="mi">5</span><span class="p">]]</span><span class="o">:</span><span class="p">[</span><span class="s2">&quot;M&quot;</span><span class="p">,</span><span class="nx">r</span><span class="o">+</span><span class="p">(</span><span class="nx">h</span><span class="p">[</span><span class="mi">6</span><span class="p">]</span><span class="o">===</span><span class="s2">&quot;left&quot;</span><span class="o">?</span><span class="mi">5</span><span class="o">:-</span><span class="mi">5</span><span class="p">),</span><span class="nx">t</span><span class="p">,</span><span class="s2">&quot;L&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">[</span><span class="mi">2</span><span class="p">],</span><span class="nx">h</span><span class="p">[</span><span class="mi">3</span><span class="p">],</span><span class="s2">&quot;L&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">[</span><span class="mi">4</span><span class="p">],</span><span class="nx">h</span><span class="p">[</span><span class="mi">5</span><span class="p">]],</span><span class="nx">g</span><span class="o">?</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">animate</span><span class="p">({</span><span class="nx">d</span><span class="o">:</span><span class="nx">h</span><span class="p">}),</span><span class="nx">g</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;visibility&quot;</span><span class="p">,</span><span class="nx">s</span><span class="p">))</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">connector</span><span class="o">=</span><span class="nx">g</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">chart</span><span class="p">.</span><span class="nx">renderer</span><span class="p">.</span><span class="nx">path</span><span class="p">(</span><span class="nx">h</span><span class="p">).</span><span class="nx">attr</span><span class="p">({</span><span class="s2">&quot;stroke-width&quot;</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">stroke</span><span class="o">:</span><span class="nx">d</span><span class="p">.</span><span class="nx">connectorColor</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">color</span><span class="o">||</span><span class="s2">&quot;#606060&quot;</span><span class="p">,</span><span class="nx">visibility</span><span class="o">:</span><span class="nx">s</span><span class="p">,</span><span class="nx">zIndex</span><span class="o">:</span><span class="mi">3</span><span class="p">}).</span><span class="nx">translate</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotLeft</span><span class="p">,</span><span class="nx">c</span><span class="p">.</span><span class="nx">plotTop</span><span class="p">).</span><span class="nx">add</span><span class="p">()}}}},</span><span class="nx">alignDataLabel</span><span class="o">:</span><span class="nx">pa</span><span class="p">,</span><span class="nx">drawTracker</span><span class="o">:</span><span class="nx">fa</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">drawTracker</span><span class="p">,</span></div><div class='line' id='LC249'><span class="nx">drawLegendSymbol</span><span class="o">:</span><span class="nx">G</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">drawLegendSymbol</span><span class="p">,</span><span class="nx">getSymbol</span><span class="o">:</span><span class="kd">function</span><span class="p">(){}};</span><span class="nx">pa</span><span class="o">=</span><span class="nx">ba</span><span class="p">(</span><span class="nx">P</span><span class="p">,</span><span class="nx">pa</span><span class="p">);</span><span class="nx">$</span><span class="p">.</span><span class="nx">pie</span><span class="o">=</span><span class="nx">pa</span><span class="p">;</span><span class="nx">x</span><span class="p">(</span><span class="nx">Highcharts</span><span class="p">,{</span><span class="nx">Axis</span><span class="o">:</span><span class="nx">ob</span><span class="p">,</span><span class="nx">CanVGRenderer</span><span class="o">:</span><span class="nx">gb</span><span class="p">,</span><span class="nx">Chart</span><span class="o">:</span><span class="nx">sb</span><span class="p">,</span><span class="nx">Color</span><span class="o">:</span><span class="nx">qa</span><span class="p">,</span><span class="nx">Legend</span><span class="o">:</span><span class="nx">rb</span><span class="p">,</span><span class="nx">MouseTracker</span><span class="o">:</span><span class="nx">qb</span><span class="p">,</span><span class="nx">Point</span><span class="o">:</span><span class="nx">Ua</span><span class="p">,</span><span class="nx">Tick</span><span class="o">:</span><span class="nx">Qa</span><span class="p">,</span><span class="nx">Tooltip</span><span class="o">:</span><span class="nx">pb</span><span class="p">,</span><span class="nx">Renderer</span><span class="o">:</span><span class="nx">Sa</span><span class="p">,</span><span class="nx">Series</span><span class="o">:</span><span class="nx">P</span><span class="p">,</span><span class="nx">SVGRenderer</span><span class="o">:</span><span class="nx">sa</span><span class="p">,</span><span class="nx">VMLRenderer</span><span class="o">:</span><span class="nx">ha</span><span class="p">,</span><span class="nx">arrayMin</span><span class="o">:</span><span class="nx">Fa</span><span class="p">,</span><span class="nx">arrayMax</span><span class="o">:</span><span class="nx">wa</span><span class="p">,</span><span class="nx">charts</span><span class="o">:</span><span class="nx">Ha</span><span class="p">,</span><span class="nx">dateFormat</span><span class="o">:</span><span class="nx">db</span><span class="p">,</span><span class="nx">pathAnim</span><span class="o">:</span><span class="nx">ub</span><span class="p">,</span><span class="nx">getOptions</span><span class="o">:</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">N</span><span class="p">},</span><span class="nx">hasBidiBug</span><span class="o">:</span><span class="nx">Sb</span><span class="p">,</span><span class="nx">isTouchDevice</span><span class="o">:</span><span class="nx">Mb</span><span class="p">,</span><span class="nx">numberFormat</span><span class="o">:</span><span class="nx">Ja</span><span class="p">,</span><span class="nx">seriesTypes</span><span class="o">:</span><span class="nx">$</span><span class="p">,</span><span class="nx">setOptions</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">N</span><span class="o">=</span><span class="nx">B</span><span class="p">(</span><span class="nx">N</span><span class="p">,</span><span class="nx">a</span><span class="p">);</span><span class="nx">Jb</span><span class="p">();</span><span class="k">return</span> <span class="nx">N</span><span class="p">},</span><span class="nx">addEvent</span><span class="o">:</span><span class="nx">J</span><span class="p">,</span><span class="nx">removeEvent</span><span class="o">:</span><span class="nx">R</span><span class="p">,</span><span class="nx">createElement</span><span class="o">:</span><span class="nx">T</span><span class="p">,</span><span class="nx">discardElement</span><span class="o">:</span><span class="nx">Na</span><span class="p">,</span></div><div class='line' id='LC250'><span class="nx">css</span><span class="o">:</span><span class="nx">I</span><span class="p">,</span><span class="nx">each</span><span class="o">:</span><span class="nx">o</span><span class="p">,</span><span class="nx">extend</span><span class="o">:</span><span class="nx">x</span><span class="p">,</span><span class="nx">map</span><span class="o">:</span><span class="nx">Ta</span><span class="p">,</span><span class="nx">merge</span><span class="o">:</span><span class="nx">B</span><span class="p">,</span><span class="nx">pick</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">splat</span><span class="o">:</span><span class="nx">la</span><span class="p">,</span><span class="nx">extendClass</span><span class="o">:</span><span class="nx">ba</span><span class="p">,</span><span class="nx">pInt</span><span class="o">:</span><span class="nx">z</span><span class="p">,</span><span class="nx">wrap</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">];</span><span class="nx">a</span><span class="p">[</span><span class="nx">b</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">unshift</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">)}},</span><span class="nx">svg</span><span class="o">:</span><span class="nx">ca</span><span class="p">,</span><span class="nx">canvas</span><span class="o">:</span><span class="nx">V</span><span class="p">,</span><span class="nx">vml</span><span class="o">:!</span><span class="nx">ca</span><span class="o">&amp;&amp;!</span><span class="nx">V</span><span class="p">,</span><span class="nx">product</span><span class="o">:</span><span class="s2">&quot;Highcharts&quot;</span><span class="p">,</span><span class="nx">version</span><span class="o">:</span><span class="s2">&quot;2.3.5&quot;</span><span class="p">})})();</span></div></pre></div></td>
          </tr>
        </table>
  </div>

  </div>
</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer">
    <ul class="site-footer-links right">
      <li><a href="https://status.github.com/">Status</a></li>
      <li><a href="http://developer.github.com">API</a></li>
      <li><a href="http://training.github.com">Training</a></li>
      <li><a href="http://shop.github.com">Shop</a></li>
      <li><a href="/blog">Blog</a></li>
      <li><a href="/about">About</a></li>

    </ul>

    <a href="/">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
    </a>

    <ul class="site-footer-links">
      <li>&copy; 2014 <span title="0.84628s from github-fe136-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="/site/terms">Terms</a></li>
        <li><a href="/site/privacy">Privacy</a></li>
        <li><a href="/security">Security</a></li>
        <li><a href="/contact">Contact</a></li>
    </ul>
  </div><!-- /.site-footer -->
</div><!-- /.container -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped leftwards" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped leftwards"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-remove-close close js-ajax-error-dismiss"></a>
      Something went wrong with that request. Please try again.
    </div>

  </body>
</html>

